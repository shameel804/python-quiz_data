[
  {
    "q": "Which function is used to create a simple line plot in Matplotlib?",
    "c": null,
    "o": [
      "plot()",
      "line()",
      "draw()",
      "graph()"
    ]
  },
  {
    "q": "What does the following code produce?",
    "c": "import matplotlib.pyplot as plt\nplt.scatter([1, 2, 3], [4, 5, 6])\nplt.show()",
    "o": [
      "A scatter plot",
      "A line plot",
      "A bar chart",
      "A pie chart"
    ]
  },
  {
    "q": "Which function is used to display a pie chart in Matplotlib?",
    "c": null,
    "o": [
      "pie()",
      "donut()",
      "chart()",
      "circle()"
    ]
  },
  {
    "q": "What does the following code do?",
    "c": "import matplotlib.pyplot as plt\nplt.bar([1, 2, 3], [4, 5, 6])\nplt.show()",
    "o": [
      "Displays a bar chart",
      "Displays a histogram",
      "Displays a scatter plot",
      "Displays a pie chart"
    ]
  },
  {
    "q": "Which module is commonly imported as 'plt' for plotting in Python?",
    "c": null,
    "o": [
      "matplotlib.pyplot",
      "matplotlib.plot",
      "matplotlib.graph",
      "matplotlib.figure"
    ]
  },
  {
    "q": "Which function is used to add a legend to a plot?",
    "c": null,
    "o": [
      "legend()",
      "add_legend()",
      "show_legend()",
      "plot_legend()"
    ]
  },
  {
    "q": "What does the following code set?",
    "c": "plt.title('My Plot')",
    "o": [
      "Title of the plot",
      "X-axis label",
      "Y-axis label",
      "Legend title"
    ]
  },
  {
    "q": "How do you label the x-axis in a Matplotlib plot?",
    "c": null,
    "o": [
      "xlabel()",
      "labelx()",
      "xaxis()",
      "axisx()"
    ]
  },
  {
    "q": "Which Matplotlib function is used to create subplots?",
    "c": null,
    "o": [
      "subplot()",
      "subfig()",
      "gridplot()",
      "splitplot()"
    ]
  },
  {
    "q": "What does the following code do?",
    "c": "import matplotlib.pyplot as plt\nimport numpy as np\nx = np.linspace(0, 10, 100)\ny = np.sin(x)\nplt.plot(x, y)\nplt.show()",
    "o": [
      "Plots a sine wave",
      "Plots a cosine wave",
      "Displays a bar chart",
      "Displays an error"
    ]
  },
  {
    "q": "Which function is used to show the final plot window in Matplotlib?",
    "c": null,
    "o": [
      "show()",
      "display()",
      "render()",
      "finalize()"
    ]
  },
  {
    "q": "Which of the following is used to create a histogram in Matplotlib?",
    "c": null,
    "o": [
      "hist()",
      "bar()",
      "scatter()",
      "box()"
    ]
  },
  {
    "q": "What is the purpose of 'plt.figure()' in Matplotlib?",
    "c": null,
    "o": [
      "To create a new figure window",
      "To save a plot",
      "To create a subplot",
      "To show the plot"
    ]
  },
  {
    "q": "What does 'plt.savefig(\"plot.png\")' do?",
    "c": null,
    "o": [
      "Saves the current figure to a file",
      "Displays the figure",
      "Resets the plot",
      "Shows the plot in a new window"
    ]
  },
  {
    "q": "Which function is used to set the y-axis label?",
    "c": null,
    "o": [
      "ylabel()",
      "labely()",
      "yaxis()",
      "axisy()"
    ]
  },
  {
    "q": "Which of the following would plot red circle markers on a line?",
    "c": "plt.plot([1, 2, 3], [4, 5, 6], 'ro')",
    "o": [
      "Red circles with a line",
      "Blue squares with a dashed line",
      "Green triangles without line",
      "Black dots connected with dashes"
    ]
  },
  {
    "q": "Which parameter in 'plot()' is used to change the line style?",
    "c": null,
    "o": [
      "linestyle",
      "styleline",
      "typeline",
      "lineformat"
    ]
  },
  {
    "q": "What does the 'label' parameter do in plotting functions?",
    "c": null,
    "o": [
      "Assigns a label for the legend",
      "Sets the axis label",
      "Colors the plot",
      "Defines subplot layout"
    ]
  },
  {
    "q": "Which of the following enables zoom and pan interaction in Jupyter Notebook?",
    "c": null,
    "o": [
      "%matplotlib notebook",
      "%matplotlib inline",
      "plt.interact()",
      "plt.enable_zoom()"
    ]
  },
  {
    "q": "How do you import 3D plotting support in Matplotlib?",
    "c": null,
    "o": [
      "from mpl_toolkits.mplot3d import Axes3D",
      "import matplotlib.3d",
      "import mpl.3d",
      "from matplotlib import plot3d"
    ]
  },
  {
    "q": "Which function is used to add a grid to the plot in Matplotlib?",
    "c": null,
    "o": [
      "grid()",
      "add_grid()",
      "plot_grid()",
      "enable_grid()"
    ]
  },
  {
    "q": "Which argument changes the color of a plot line?",
    "c": null,
    "o": [
      "color",
      "linecolor",
      "col",
      "stroke"
    ]
  },
  {
    "q": "Which of the following creates a figure with 2 rows and 1 column of subplots?",
    "c": "plt.subplot(2, 1, 1)",
    "o": [
      "First subplot of 2 rows and 1 column",
      "Second subplot of 2 rows and 1 column",
      "A 2x2 subplot grid",
      "A 1x2 subplot grid"
    ]
  },
  {
    "q": "How do you make a bar chart horizontal?",
    "c": null,
    "o": [
      "barh()",
      "hbar()",
      "bar(horizontal=True)",
      "bar(orientation='horizontal')"
    ]
  },
  {
    "q": "Which keyword is used to set marker shape in plot()?",
    "c": null,
    "o": [
      "marker",
      "shape",
      "pointstyle",
      "form"
    ]
  },
  {
    "q": "What does the following code do?",
    "c": "plt.annotate('Peak', xy=(3, 5), xytext=(4, 6), arrowprops=dict(facecolor='black'))",
    "o": [
      "Adds a text annotation with an arrow",
      "Adds a title to the plot",
      "Changes line color to black",
      "Adds grid lines"
    ]
  },
  {
    "q": "Which of the following can be used to create a basic 3D plot?",
    "c": "ax = fig.add_subplot(111, projection='3d')",
    "o": [
      "Creates a 3D subplot",
      "Creates a 2D bar chart",
      "Creates a 3D pie chart",
      "Creates a 3D heatmap"
    ]
  },
  {
    "q": "Which backend setting gives static images in Jupyter notebooks?",
    "c": null,
    "o": [
      "%matplotlib inline",
      "%matplotlib auto",
      "%matplotlib window",
      "%matplotlib live"
    ]
  },
  {
    "q": "How can you display multiple plots on the same figure?",
    "c": null,
    "o": [
      "Call multiple plot() before show()",
      "Use plot() and then clear()",
      "Use subplots() only",
      "You cannot display more than one"
    ]
  },
  {
    "q": "Which library works well with Matplotlib to handle DataFrames?",
    "c": null,
    "o": [
      "Pandas",
      "Tkinter",
      "SQLite",
      "Keras"
    ]
  },
  {
    "q": "Which parameter sets the size of the figure in Matplotlib?",
    "c": null,
    "o": [
      "figsize",
      "size",
      "dimensions",
      "figsize_px"
    ]
  },
  {
    "q": "Which of the following lines will produce a green dashed line?",
    "c": "plt.plot([1, 2, 3], [4, 5, 6], 'g--')",
    "o": [
      "Green dashed line",
      "Red solid line",
      "Blue dotted line",
      "Black dashed line"
    ]
  },
  {
    "q": "What does the 'alpha' parameter control in Matplotlib plots?",
    "c": null,
    "o": [
      "Transparency of the plot",
      "Line width",
      "Text font",
      "Plot title"
    ]
  },
  {
    "q": "Which of the following will label the y-axis as 'Sales'?",
    "c": "plt.ylabel('Sales')",
    "o": [
      "Labels the y-axis",
      "Labels the x-axis",
      "Sets the chart title",
      "Adds legend"
    ]
  },
  {
    "q": "Which method adds a legend to a line plot in Matplotlib?",
    "c": "plt.plot(x, y, label='Data')\nplt.legend()",
    "o": [
      "Displays legend",
      "Displays grid",
      "Sets axis labels",
      "Adds title"
    ]
  },
  {
    "q": "Which of the following can be passed as a color in Matplotlib?",
    "c": null,
    "o": [
      "'blue'",
      "'#1234567'",
      "'rgb(255,255,255)'",
      "'shade'"
    ]
  },
  {
    "q": "What is the purpose of 'tight_layout()'?",
    "c": null,
    "o": [
      "Adjusts spacing to prevent overlap",
      "Adds a layout to the figure",
      "Zooms into a subplot",
      "Saves the figure"
    ]
  },
  {
    "q": "What is the default plot style for plt.plot()?",
    "c": null,
    "o": [
      "Blue solid line",
      "Red dashed line",
      "Green dots",
      "Black dashed line"
    ]
  },
  {
    "q": "What does 'sharex=True' do in subplots?",
    "c": null,
    "o": [
      "Shares x-axis among subplots",
      "Disables x-axis",
      "Zooms x-axis",
      "Aligns y-axis"
    ]
  },
  {
    "q": "Which of the following libraries integrates well with Matplotlib for statistical plots?",
    "c": null,
    "o": [
      "Seaborn",
      "TensorFlow",
      "Scikit-learn",
      "Flask"
    ]
  },
  {
    "q": "Which of the following would create a simple line chart from a Pandas DataFrame?",
    "c": "import pandas as pd\nimport matplotlib.pyplot as plt\ndf = pd.DataFrame({'x': [1, 2, 3], 'y': [4, 5, 6]})\ndf.plot(x='x', y='y')\nplt.show()",
    "o": [
      "Line chart from DataFrame",
      "Pie chart from DataFrame",
      "Bar chart from Series",
      "Scatter plot from Series"
    ]
  },
  {
    "q": "Which Matplotlib function is used to adjust space between subplots?",
    "c": null,
    "o": [
      "subplots_adjust()",
      "adjust_layout()",
      "tight()",
      "resize()"
    ]
  },
  {
    "q": "What does the following code plot?",
    "c": "plt.hist([1, 1, 2, 3, 3, 3, 4, 5])",
    "o": [
      "Histogram",
      "Bar chart",
      "Scatter plot",
      "Pie chart"
    ]
  },
  {
    "q": "Which function is used to create a figure and a grid of subplots at once?",
    "c": null,
    "o": [
      "subplots()",
      "subplot_grid()",
      "create_grid()",
      "multi_plot()"
    ]
  },
  {
    "q": "Which of the following adds an arrow and label to a specific point?",
    "c": "plt.annotate('Point', xy=(2, 4), xytext=(3, 5), arrowprops=dict(arrowstyle='->'))",
    "o": [
      "Annotation with arrow",
      "X-axis label",
      "Bar label",
      "Legend entry"
    ]
  },
  {
    "q": "What does the 'marker' argument do in plot()?",
    "c": null,
    "o": [
      "Changes point symbol",
      "Changes plot color",
      "Sets legend name",
      "Adds figure background"
    ]
  },
  {
    "q": "Which command would give a red dashed line with triangle-up markers?",
    "c": "plt.plot([1, 2, 3], [4, 5, 6], 'r^--')",
    "o": [
      "Red dashed line with triangle-up markers",
      "Blue solid line with circle markers",
      "Green dotted line with square markers",
      "Black dashed line with diamond markers"
    ]
  },
  {
    "q": "Which of these plots best visualizes proportions in a dataset?",
    "c": null,
    "o": [
      "Pie chart",
      "Line plot",
      "Histogram",
      "Scatter plot"
    ]
  },
  {
    "q": "Which of the following creates a 3D surface plot?",
    "c": "ax.plot_surface(X, Y, Z)",
    "o": [
      "3D surface plot",
      "2D heatmap",
      "Bar chart",
      "3D scatter plot"
    ]
  },
  {
    "q": "Which parameter in plot() changes line width?",
    "c": null,
    "o": [
      "linewidth",
      "thickness",
      "lineheight",
      "boldness"
    ]
  },
  {
    "q": "What does 'plt.xlim(0, 10)' do in a plot?",
    "c": null,
    "o": [
      "Sets the x-axis range from 0 to 10",
      "Zooms into the y-axis",
      "Adds grid lines",
      "Changes line thickness"
    ]
  },
  {
    "q": "Which parameter in 'plt.plot()' defines the shape of the plotted points?",
    "c": null,
    "o": [
      "marker",
      "shape",
      "form",
      "figure"
    ]
  },
  {
    "q": "What will the following code produce?",
    "c": "import matplotlib.pyplot as plt\nplt.pie([40, 30, 20, 10])\nplt.show()",
    "o": [
      "A pie chart",
      "A bar chart",
      "A scatter plot",
      "A histogram"
    ]
  },
  {
    "q": "How can you add a title to a plot?",
    "c": null,
    "o": [
      "plt.title('Title Here')",
      "plt.set_title('Title Here')",
      "plt.add_title('Title Here')",
      "plt.chart_title('Title Here')"
    ]
  },
  {
    "q": "Which keyword is used to make the legend appear in a specific location?",
    "c": null,
    "o": [
      "loc",
      "position",
      "place",
      "align"
    ]
  },
  {
    "q": "What does the 'bins' parameter control in a histogram?",
    "c": null,
    "o": [
      "Number of intervals",
      "Height of bars",
      "Width of the plot",
      "Type of chart"
    ]
  },
  {
    "q": "Which function helps create a scatter plot in Matplotlib?",
    "c": null,
    "o": [
      "scatter()",
      "dotplot()",
      "points()",
      "bubble()"
    ]
  },
  {
    "q": "How can you clear the current figure in Matplotlib?",
    "c": null,
    "o": [
      "plt.clf()",
      "plt.reset()",
      "plt.clear()",
      "plt.clean()"
    ]
  },
  {
    "q": "Which of the following plots can be created with Seaborn and uses Matplotlib underneath?",
    "c": null,
    "o": [
      "Box plot",
      "HTML table",
      "GIF animation",
      "CLI output"
    ]
  },
  {
    "q": "What is the purpose of 'plt.style.use(\"ggplot\")'?",
    "c": null,
    "o": [
      "Applies ggplot-like styling to plots",
      "Enables 3D plots",
      "Zooms into the plot",
      "Exports the plot as .gg"
    ]
  },
  {
    "q": "Which function in Matplotlib saves the current figure to a file?",
    "c": null,
    "o": [
      "savefig()",
      "save()",
      "export()",
      "storefig()"
    ]
  },
  {
    "q": "What does the following code display?",
    "c": "plt.plot([1, 2, 3], [4, 5, 6])\nplt.xlabel('X-Axis')\nplt.ylabel('Y-Axis')",
    "o": [
      "A plot with labeled X and Y axes",
      "A plot with grid lines",
      "A histogram",
      "A pie chart"
    ]
  },
  {
    "q": "Which of the following is the correct way to add grid lines?",
    "c": null,
    "o": [
      "plt.grid(True)",
      "plt.add_grid()",
      "plt.enable_grid()",
      "plt.show_grid()"
    ]
  },
  {
    "q": "How do you specify a dashed line in a Matplotlib plot?",
    "c": null,
    "o": [
      "'--'",
      "'-.'",
      "':'",
      "'- -'"
    ]
  },
  {
    "q": "What does the 'label' argument in plot() help with?",
    "c": null,
    "o": [
      "Identifying the line in the legend",
      "Setting the axis label",
      "Setting the plot title",
      "Setting figure size"
    ]
  },
  {
    "q": "What type of chart is best to compare the frequency of numeric ranges?",
    "c": null,
    "o": [
      "Histogram",
      "Pie chart",
      "Line plot",
      "Scatter plot"
    ]
  },
  {
    "q": "Which of the following will display a vertical bar chart?",
    "c": null,
    "o": [
      "plt.bar([1, 2, 3], [4, 5, 6])",
      "plt.barh([1, 2, 3], [4, 5, 6])",
      "plt.hist([1, 2, 3])",
      "plt.plot([1, 2, 3], [4, 5, 6])"
    ]
  },
  {
    "q": "How do you create a figure with a custom size of 10x5 inches?",
    "c": null,
    "o": [
      "plt.figure(figsize=(10, 5))",
      "plt.figure(size=(10, 5))",
      "plt.plot(size=(10, 5))",
      "plt.subplotsize(10, 5)"
    ]
  },
  {
    "q": "What does the 'title()' function do?",
    "c": null,
    "o": [
      "Adds a title to the plot",
      "Sets the filename for saving",
      "Starts a new figure",
      "Sets axis limits"
    ]
  },
  {
    "q": "What does 'plt.tight_layout()' help with?",
    "c": null,
    "o": [
      "Preventing overlap of plot elements",
      "Increasing marker size",
      "Zooming into subplots",
      "Creating bold lines"
    ]
  },
  {
    "q": "What is the result of the following code?",
    "c": "import matplotlib.pyplot as plt\nplt.plot([1, 2, 3], [3, 2, 1])\nplt.show()",
    "o": [
      "A line chart from (1,3) to (3,1)",
      "A bar chart from (1,3) to (3,1)",
      "An empty figure",
      "A pie chart"
    ]
  },
  {
    "q": "Which Matplotlib object represents the entire figure window?",
    "c": null,
    "o": [
      "Figure",
      "Axes",
      "Canvas",
      "Chart"
    ]
  },
  {
    "q": "What type of plot is useful for identifying relationships between two variables?",
    "c": null,
    "o": [
      "Scatter plot",
      "Pie chart",
      "Bar chart",
      "Histogram"
    ]
  },
  {
    "q": "Which of the following statements is correct to set a dotted line?",
    "c": null,
    "o": [
      "plt.plot(x, y, linestyle=':')",
      "plt.plot(x, y, linestyle='--')",
      "plt.plot(x, y, linestyle='-.')",
      "plt.plot(x, y, linestyle='-')"
    ]
  },
  {
    "q": "What will the following code output?",
    "c": "plt.plot([1, 2, 3], [1, 4, 9], marker='o')",
    "o": [
      "Line plot with circle markers",
      "Bar plot with square markers",
      "Scatter plot with no markers",
      "Line plot with triangle markers"
    ]
  },
  {
    "q": "What is the purpose of 'plt.subplots()'?",
    "c": null,
    "o": [
      "Create figure and axes together",
      "Only create a figure",
      "Only show the plot",
      "Save all subplots"
    ]
  },
  {
    "q": "Which of the following plots displays data in slices representing parts of a whole?",
    "c": null,
    "o": [
      "Pie chart",
      "Line chart",
      "Scatter chart",
      "Histogram"
    ]
  },
  {
    "q": "Which method is used to limit y-axis values?",
    "c": null,
    "o": [
      "plt.ylim()",
      "plt.set_ylim()",
      "plt.axis_y()",
      "plt.limit_y()"
    ]
  },
  {
    "q": "Which object is used to control the axes inside a figure?",
    "c": null,
    "o": [
      "Axes",
      "Figure",
      "Plot",
      "Grid"
    ]
  },
  {
    "q": "Which function can display multiple plots in different regions of the same figure?",
    "c": null,
    "o": [
      "subplot()",
      "multiplot()",
      "showplot()",
      "multi()"
    ]
  },
  {
    "q": "What does the 'color' parameter do in a Matplotlib plot?",
    "c": null,
    "o": [
      "Sets the color of the plot elements",
      "Changes figure size",
      "Adds grid lines",
      "Saves the plot to a file"
    ]
  },
  {
    "q": "What happens if you call plt.plot() multiple times before plt.show()?",
    "c": null,
    "o": [
      "Multiple lines appear on the same figure",
      "Only the last line is shown",
      "Each plot opens in a new window",
      "An error is thrown"
    ]
  },
  {
    "q": "Which command would display a plot using Matplotlib?",
    "c": null,
    "o": [
      "plt.show()",
      "plt.display()",
      "plt.render()",
      "plt.draw()"
    ]
  },
  {
    "q": "What is the file format of the plot saved using plt.savefig('chart.png')?",
    "c": null,
    "o": [
      "PNG",
      "JPG",
      "SVG",
      "PDF"
    ]
  },
  {
    "q": "Which parameter in scatter() controls the size of the markers?",
    "c": null,
    "o": [
      "s",
      "size",
      "radius",
      "scale"
    ]
  },
  {
    "q": "What does 'plt.axis(\"equal\")' do?",
    "c": null,
    "o": [
      "Sets equal scaling on both axes",
      "Resets the axes",
      "Sets axis limits automatically",
      "Locks the X-axis"
    ]
  },
  {
    "q": "Which of the following adds a text label at a specific point?",
    "c": null,
    "o": [
      "plt.text()",
      "plt.label()",
      "plt.mark()",
      "plt.note()"
    ]
  },
  {
    "q": "Which library must be installed to use Matplotlib?",
    "c": null,
    "o": [
      "matplotlib",
      "plotpy",
      "graphlib",
      "mplcore"
    ]
  },
  {
    "q": "What does 'plt.grid(True)' do?",
    "c": null,
    "o": [
      "Displays grid lines on the plot",
      "Adds x and y labels",
      "Adds annotations",
      "Clears the plot"
    ]
  },
  {
    "q": "Which method adjusts spacing between subplots automatically?",
    "c": null,
    "o": [
      "plt.tight_layout()",
      "plt.autosize()",
      "plt.adjust()",
      "plt.grid_layout()"
    ]
  },
  {
    "q": "Which function from NumPy is commonly used to generate evenly spaced data for plotting?",
    "c": null,
    "o": [
      "linspace()",
      "range()",
      "arange()",
      "spread()"
    ]
  },
  {
    "q": "What does the 'edgecolor' parameter do in a histogram?",
    "c": null,
    "o": [
      "Sets the color of the bar borders",
      "Fills the bars with gradient color",
      "Sets the axis color",
      "Changes the font color of labels"
    ]
  },
  {
    "q": "Which of the following commands will plot a sine wave?",
    "c": "import numpy as np\nimport matplotlib.pyplot as plt\nx = np.linspace(0, 10, 100)\ny = np.sin(x)\nplt.plot(x, y)\nplt.show()",
    "o": [
      "Sine wave plot",
      "Cosine wave plot",
      "Straight line plot",
      "Bar chart"
    ]
  },
  {
    "q": "What does 'plt.rcParams' allow you to do?",
    "c": null,
    "o": [
      "Customize global plot settings",
      "Reset all figures",
      "Show the plot",
      "Clear memory"
    ]
  },
  {
    "q": "Which Matplotlib feature allows you to zoom and pan in interactive mode?",
    "c": null,
    "o": [
      "%matplotlib notebook",
      "%matplotlib inline",
      "plt.enable_interaction()",
      "plt.zoom_pan()"
    ]
  },
  {
    "q": "Which function would you use to create a scatter plot using Pandas?",
    "c": null,
    "o": [
      "df.plot.scatter()",
      "df.scatter()",
      "df.make_scatter()",
      "df.scatterplot()"
    ]
  },
  {
    "q": "Which marker style represents a square?",
    "c": null,
    "o": [
      "'s'",
      "'o'",
      "'^'",
      "'*'"
    ]
  },
  {
    "q": "Which of the following file formats is supported by plt.savefig()?",
    "c": null,
    "o": [
      ".png",
      ".docx",
      ".xlsx",
      ".mp3"
    ]
  },
  {
    "q": "Which of the following changes the font size of the plot title?",
    "c": null,
    "o": [
      "plt.title('My Title', fontsize=16)",
      "plt.set_title('My Title', size=16)",
      "plt.title('My Title', scale=16)",
      "plt.add_title('My Title', font=16)"
    ]
  },
  {
    "q": "Which Seaborn function is used to draw a histogram with a density curve?",
    "c": null,
    "o": [
      "sns.histplot()",
      "sns.barplot()",
      "sns.lineplot()",
      "sns.scatterplot()"
    ]
  },
  {
    "q": "Which of the following creates a basic line plot using Pandas?",
    "c": "import pandas as pd\nimport matplotlib.pyplot as plt\ndf = pd.DataFrame({'a': [1, 2, 3], 'b': [4, 5, 6]})\ndf.plot()\nplt.show()",
    "o": [
      "Line plot of all numeric columns",
      "Scatter plot of columns",
      "Pie chart of column 'a'",
      "Bar chart of column 'b'"
    ]
  },
  {
    "q": "Which function is used to create multiple axes in a grid layout?",
    "c": null,
    "o": [
      "plt.subplots()",
      "plt.multi_axes()",
      "plt.plotgrid()",
      "plt.subplot_grid()"
    ]
  },
  {
    "q": "Which of the following plots is ideal for displaying distribution of numerical data?",
    "c": null,
    "o": [
      "Histogram",
      "Pie chart",
      "Line chart",
      "Scatter plot"
    ]
  },
  {
    "q": "Which of the following styles applies a dark background theme?",
    "c": null,
    "o": [
      "plt.style.use('dark_background')",
      "plt.style('dark')",
      "plt.set_theme('dark')",
      "plt.mode('black')"
    ]
  },
  {
    "q": "Which marker style represents a triangle pointing upward?",
    "c": null,
    "o": [
      "'^'",
      "'v'",
      "'o'",
      "'*'"
    ]
  },
  {
    "q": "Which of the following methods is used to rotate x-axis tick labels?",
    "c": null,
    "o": [
      "plt.xticks(rotation=45)",
      "plt.rotate_ticks(45)",
      "plt.rotate_x(45)",
      "plt.tick_angle(45)"
    ]
  },
  {
    "q": "What will 'plt.axis('off')' do?",
    "c": null,
    "o": [
      "Hides all axes and ticks",
      "Disables interactivity",
      "Removes the legend",
      "Resets zoom"
    ]
  },
  {
    "q": "Which of the following line styles represents a solid line?",
    "c": null,
    "o": [
      "'-'",
      "'--'",
      "':'",
      "'-.'"
    ]
  },
  {
    "q": "Which method is used to retrieve current figure and axes?",
    "c": null,
    "o": [
      "fig, ax = plt.subplots()",
      "fig, ax = plt.figure()",
      "plt.new_figure()",
      "plt.get_axes()"
    ]
  },
  {
    "q": "Which Seaborn function creates a plot showing the relationship between two numeric variables?",
    "c": null,
    "o": [
      "sns.scatterplot()",
      "sns.histplot()",
      "sns.barplot()",
      "sns.countplot()"
    ]
  },
  {
    "q": "Which keyword argument is used to change the transparency of plot elements?",
    "c": null,
    "o": [
      "alpha",
      "opacity",
      "transparency",
      "fade"
    ]
  },
  {
    "q": "What will 'plt.barh()' produce?",
    "c": null,
    "o": [
      "A horizontal bar chart",
      "A vertical bar chart",
      "A histogram",
      "A stacked bar chart"
    ]
  },
  {
    "q": "Which of the following Matplotlib functions is used to add text inside a plot?",
    "c": null,
    "o": [
      "plt.text()",
      "plt.annotate()",
      "plt.label()",
      "plt.comment()"
    ]
  },
  {
    "q": "Which Matplotlib method can be used to customize tick labels on the x-axis?",
    "c": null,
    "o": [
      "plt.xticks()",
      "plt.xlabel()",
      "plt.xlabels()",
      "plt.xset()"
    ]
  },
  {
    "q": "Which parameter of plt.plot() changes the thickness of a line?",
    "c": null,
    "o": [
      "linewidth",
      "thickness",
      "weight",
      "lineweight"
    ]
  },
  {
    "q": "Which of the following is the correct way to import Matplotlib’s pyplot module?",
    "c": null,
    "o": [
      "import matplotlib.pyplot as plt",
      "import matplotlib.plt as pyplot",
      "from matplotlib import graph",
      "import plt"
    ]
  },
  {
    "q": "What does 'plt.legend(loc=\"upper right\")' do?",
    "c": null,
    "o": [
      "Places the legend at the top-right corner",
      "Removes the legend",
      "Adds a title to the legend",
      "Rotates the legend labels"
    ]
  },
  {
    "q": "Which color code represents blue in Matplotlib?",
    "c": null,
    "o": [
      "'b'",
      "'r'",
      "'g'",
      "'k'"
    ]
  },
  {
    "q": "Which of the following is used to create a figure with multiple rows and columns of plots?",
    "c": null,
    "o": [
      "plt.subplots()",
      "plt.multi_plot()",
      "plt.grid_plot()",
      "plt.group()"
    ]
  },
  {
    "q": "What will the following code do?",
    "c": "plt.plot([1, 2, 3], [1, 4, 9], 'ro-')",
    "o": [
      "Red solid line with circle markers",
      "Red dashed line with triangle markers",
      "Blue dotted line with square markers",
      "Green line with no markers"
    ]
  },
  {
    "q": "What does 'plt.ylabel(\"Temperature\")' do?",
    "c": null,
    "o": [
      "Sets the label for the y-axis",
      "Sets the label for the x-axis",
      "Adds a title to the chart",
      "Displays a legend"
    ]
  },
  {
    "q": "Which of the following symbols is used for a star-shaped marker in Matplotlib?",
    "c": null,
    "o": [
      "'*'",
      "'o'",
      "'s'",
      "'^'"
    ]
  },
  {
    "q": "What does the 'facecolor' parameter control in plotting functions?",
    "c": null,
    "o": [
      "The fill color of plot elements",
      "The background color of the window",
      "The font color of text",
      "The thickness of the plot border"
    ]
  },
  {
    "q": "Which Matplotlib function can be used to hide axis ticks and labels?",
    "c": null,
    "o": [
      "plt.axis('off')",
      "plt.ticks(None)",
      "plt.hide_ticks()",
      "plt.remove_axis()"
    ]
  },
  {
    "q": "Which function can you use to set both x and y axis limits?",
    "c": null,
    "o": [
      "plt.axis([xmin, xmax, ymin, ymax])",
      "plt.set_limits([xmin, xmax], [ymin, ymax])",
      "plt.limit_axis()",
      "plt.bounds()"
    ]
  },
  {
    "q": "What does 'plt.style.available' return?",
    "c": null,
    "o": [
      "A list of available plot styles",
      "The default line color",
      "Current axes limits",
      "Available marker shapes"
    ]
  },
  {
    "q": "Which of the following best describes the use of 'plt.figure(figsize=(8, 4))'?",
    "c": null,
    "o": [
      "Sets the size of the figure to 8 inches by 4 inches",
      "Sets the size of the subplot grid to 8x4",
      "Changes the DPI of the figure",
      "Zooms into the figure"
    ]
  },
  {
    "q": "What will 'plt.plot(x, y, 'go')' produce?",
    "c": null,
    "o": [
      "Green circles at data points",
      "Green line with triangle markers",
      "Red line with circles",
      "Blue dashed line"
    ]
  },
  {
    "q": "Which keyword is used to pass labels into the legend from plot()?",
    "c": null,
    "o": [
      "label",
      "legend",
      "title",
      "tag"
    ]
  },
  {
    "q": "Which of the following commands can be used to visualize a correlation between two numerical variables?",
    "c": null,
    "o": [
      "plt.scatter(x, y)",
      "plt.pie(x)",
      "plt.hist(x)",
      "plt.bar(x, y)"
    ]
  },
  {
    "q": "Which function is used to create a pie chart in Matplotlib?",
    "c": null,
    "o": [
      "plt.pie()",
      "plt.piechart()",
      "plt.circle()",
      "plt.donut()"
    ]
  },
  {
    "q": "What does 'plt.title(\"My Chart\")' do?",
    "c": null,
    "o": [
      "Adds a title to the plot",
      "Labels the x-axis",
      "Creates a new plot window",
      "Saves the plot as a file"
    ]
  },
  {
    "q": "Which argument in plt.plot() is used to specify marker type?",
    "c": null,
    "o": [
      "marker",
      "mark",
      "symbol",
      "dot"
    ]
  },
  {
    "q": "What is the purpose of 'plt.savefig(\"plot.png\")'?",
    "c": null,
    "o": [
      "Saves the plot as a PNG image",
      "Shows the plot on screen",
      "Saves the plot as a PDF file",
      "Copies the plot to clipboard"
    ]
  },
  {
    "q": "Which function would create a 3D plot in Matplotlib?",
    "c": "from mpl_toolkits.mplot3d import Axes3D\nfig = plt.figure()\nax = fig.add_subplot(111, projection='3d')",
    "o": [
      "A 3D plotting area",
      "A 2D line chart",
      "A stacked bar chart",
      "A 3D pie chart"
    ]
  },
  {
    "q": "Which method will display a histogram of data?",
    "c": null,
    "o": [
      "plt.hist(data)",
      "plt.bar(data)",
      "plt.scatter(data)",
      "plt.plot(data)"
    ]
  },
  {
    "q": "What is the default orientation of a bar chart in plt.bar()?",
    "c": null,
    "o": [
      "Vertical",
      "Horizontal",
      "Diagonal",
      "None"
    ]
  },
  {
    "q": "Which function will help you create subplots in a 2x2 grid?",
    "c": null,
    "o": [
      "plt.subplots(2, 2)",
      "plt.subplot_grid(2, 2)",
      "plt.multi_plot(2, 2)",
      "plt.plot_rows(2)"
    ]
  },
  {
    "q": "How can you display multiple plots in the same figure?",
    "c": null,
    "o": [
      "Call multiple plt.plot() before plt.show()",
      "Use plt.new_plot() each time",
      "Use plt.reset()",
      "Save each plot separately"
    ]
  },
  {
    "q": "What happens if you don’t call plt.show() in a script?",
    "c": null,
    "o": [
      "The plot may not be displayed",
      "The plot shows automatically",
      "An error is raised",
      "The figure saves as default"
    ]
  },
  {
    "q": "Which function is used to display the plot window?",
    "c": null,
    "o": [
      "plt.show()",
      "plt.display()",
      "plt.open()",
      "plt.view()"
    ]
  },
  {
    "q": "What will 'plt.grid(True)' do?",
    "c": null,
    "o": [
      "Displays a grid on the plot",
      "Displays a legend",
      "Sets the background color",
      "Turns off the axes"
    ]
  },
  {
    "q": "Which file format is NOT directly supported by plt.savefig()?",
    "c": null,
    "o": [
      ".doc",
      ".png",
      ".pdf",
      ".svg"
    ]
  },
  {
    "q": "How do you create a line chart in Matplotlib?",
    "c": null,
    "o": [
      "plt.plot(x, y)",
      "plt.line(x, y)",
      "plt.graph(x, y)",
      "plt.linechart(x, y)"
    ]
  },
  {
    "q": "Which command adds labels to the pie chart segments?",
    "c": null,
    "o": [
      "labels=...",
      "text=...",
      "title=...",
      "caption=..."
    ]
  },
  {
    "q": "Which method in Matplotlib is used to annotate specific points?",
    "c": null,
    "o": [
      "plt.annotate()",
      "plt.point()",
      "plt.mark()",
      "plt.label()"
    ]
  },
  {
    "q": "Which of the following arguments will draw a red dashed line?",
    "c": null,
    "o": [
      "'r--'",
      "'b-'",
      "'g:'",
      "'k.-'"
    ]
  },
  {
    "q": "What is the role of 'plt.clf()' in Matplotlib?",
    "c": null,
    "o": [
      "Clears the current figure",
      "Closes the figure window",
      "Creates a line figure",
      "Formats the legend"
    ]
  },
  {
    "q": "Which argument adjusts the rotation of x-axis tick labels?",
    "c": null,
    "o": [
      "rotation",
      "angle",
      "tilt",
      "orient"
    ]
  },
  {
    "q": "What does the following code produce?",
    "c": "plt.plot([1, 2, 3], [3, 2, 1])\nplt.xlabel('X')\nplt.ylabel('Y')",
    "o": [
      "A line plot with axis labels",
      "A scatter plot",
      "A histogram",
      "An empty figure"
    ]
  },
  {
    "q": "Which Matplotlib function is used to draw vertical bars?",
    "c": null,
    "o": [
      "plt.bar()",
      "plt.vbar()",
      "plt.barplot()",
      "plt.vertical()"
    ]
  },
  {
    "q": "What is the purpose of 'plt.legend()'?",
    "c": null,
    "o": [
      "To display a legend for labeled plot elements",
      "To draw lines",
      "To change font style",
      "To remove axes"
    ]
  },
  {
    "q": "Which Matplotlib function is commonly used to plot data points in a scatter format?",
    "c": null,
    "o": [
      "plt.scatter()",
      "plt.dots()",
      "plt.plotdots()",
      "plt.scatterplot()"
    ]
  },
  {
    "q": "What does the following code do?",
    "c": "plt.plot([1, 2, 3], [4, 5, 6], 'bo-')",
    "o": [
      "Plots a blue line with circle markers",
      "Plots a red line with dots",
      "Plots a bar graph",
      "Draws a dashed black line"
    ]
  },
  {
    "q": "What happens if you call plt.plot() without any arguments?",
    "c": null,
    "o": [
      "An empty plot is created",
      "An error occurs",
      "A histogram is shown",
      "A bar chart is displayed"
    ]
  },
  {
    "q": "Which of the following would set the title of the plot?",
    "c": null,
    "o": [
      "plt.title(\"My Plot\")",
      "plt.settitle(\"My Plot\")",
      "plt.plot.title(\"My Plot\")",
      "plt.caption(\"My Plot\")"
    ]
  },
  {
    "q": "Which parameter is used in pie charts to separate slices?",
    "c": null,
    "o": [
      "explode",
      "gap",
      "offset",
      "distance"
    ]
  },
  {
    "q": "What does 'plt.xticks(rotation=45)' do?",
    "c": null,
    "o": [
      "Rotates x-axis labels 45 degrees",
      "Changes x-axis values",
      "Zooms into x-axis",
      "Hides x-axis ticks"
    ]
  },
  {
    "q": "Which of the following styles gives the plot a dark background?",
    "c": null,
    "o": [
      "dark_background",
      "light_mode",
      "dark_mode",
      "night"
    ]
  },
  {
    "q": "Which argument controls the transparency of plotted elements?",
    "c": null,
    "o": [
      "alpha",
      "opacity",
      "transparency",
      "fade"
    ]
  },
  {
    "q": "Which argument in plt.scatter() changes the size of the markers?",
    "c": null,
    "o": [
      "s",
      "size",
      "marker_size",
      "radius"
    ]
  },
  {
    "q": "What does the 'c' argument in plt.scatter() represent?",
    "c": null,
    "o": [
      "Color of markers",
      "Column of data",
      "Count of points",
      "Circle shape"
    ]
  },
  {
    "q": "Which library must be imported to use Matplotlib?",
    "c": null,
    "o": [
      "matplotlib.pyplot",
      "pyplot.matlib",
      "mpl.plot",
      "graphlib"
    ]
  },
  {
    "q": "What does the 'label' parameter do in a plot?",
    "c": null,
    "o": [
      "Names the line for the legend",
      "Changes the title",
      "Applies x-axis label",
      "Defines the marker"
    ]
  },
  {
    "q": "What is the purpose of 'plt.xlim()'?",
    "c": null,
    "o": [
      "Sets the x-axis limits",
      "Adds x-axis labels",
      "Adds ticks to x-axis",
      "Sets grid on x-axis"
    ]
  },
  {
    "q": "Which Matplotlib function is used to create a figure object?",
    "c": null,
    "o": [
      "plt.figure()",
      "plt.canvas()",
      "plt.window()",
      "plt.plotfig()"
    ]
  },
  {
    "q": "Which method clears the current axes without closing the figure?",
    "c": null,
    "o": [
      "plt.cla()",
      "plt.clear()",
      "plt.reset()",
      "plt.hide()"
    ]
  },
  {
    "q": "Which of these methods is used to set the color of bars in a bar chart?",
    "c": null,
    "o": [
      "color",
      "shade",
      "fill",
      "hue"
    ]
  },
  {
    "q": "What does 'plt.subplots_adjust()' control?",
    "c": null,
    "o": [
      "Spacing between subplots",
      "Figure size",
      "Line width",
      "Axis label"
    ]
  },
  {
    "q": "What happens when you use plt.close()?",
    "c": null,
    "o": [
      "Closes the current figure window",
      "Closes the Python script",
      "Clears the terminal output",
      "Erases all plot data"
    ]
  },
  {
    "q": "Which parameter in plt.plot() changes the line color to green?",
    "c": null,
    "o": [
      "'g'",
      "'r'",
      "'b'",
      "'k'"
    ]
  },
  {
    "q": "What does the 'linewidth' parameter in plt.plot() affect?",
    "c": null,
    "o": [
      "Thickness of the line",
      "Spacing between points",
      "Color of the line",
      "Background of the plot"
    ]
  },
  {
    "q": "Which command adds text at a specific location on a plot?",
    "c": null,
    "o": [
      "plt.text()",
      "plt.label()",
      "plt.string()",
      "plt.annotation()"
    ]
  },
  {
    "q": "Which of the following will plot multiple lines on the same plot?",
    "c": "plt.plot(x, y1)\nplt.plot(x, y2)\nplt.show()",
    "o": [
      "Two lines on the same figure",
      "Two lines in separate figures",
      "Only the second line appears",
      "An error is raised"
    ]
  },
  {
    "q": "How can you display a plot in Matplotlib?",
    "c": null,
    "o": [
      "Using plt.show()",
      "Using plt.run()",
      "Using plt.start()",
      "Using plt.view()"
    ]
  },
  {
    "q": "Which function is used to create a subplot in a specific position?",
    "c": null,
    "o": [
      "plt.subplot()",
      "plt.split()",
      "plt.axis()",
      "plt.subfig()"
    ]
  },
  {
    "q": "Which of the following creates a horizontal bar chart?",
    "c": null,
    "o": [
      "plt.barh()",
      "plt.hbar()",
      "plt.bar(horizontal=True)",
      "plt.horiz()"
    ]
  },
  {
    "q": "What will 'plt.ylabel(\"Score\")' do?",
    "c": null,
    "o": [
      "Label the y-axis as 'Score'",
      "Set the title of the chart",
      "Change y-tick values",
      "Label the x-axis"
    ]
  },
  {
    "q": "Which method sets the background color of the entire figure?",
    "c": null,
    "o": [
      "plt.figure(facecolor='lightgray')",
      "plt.plot(bg='lightgray')",
      "plt.set_background('lightgray')",
      "plt.bgcolor('lightgray')"
    ]
  },
  {
    "q": "What will 'plt.axis('equal')' do?",
    "c": null,
    "o": [
      "Make x and y axis have the same scale",
      "Hide axis labels",
      "Zoom into the center",
      "Lock the axis ticks"
    ]
  },
  {
    "q": "Which of the following creates a histogram in Matplotlib?",
    "c": null,
    "o": [
      "plt.hist(data)",
      "plt.histogram(data)",
      "plt.bars(data)",
      "plt.plot.hist(data)"
    ]
  },
  {
    "q": "Which Matplotlib method adds a title to the x-axis?",
    "c": null,
    "o": [
      "plt.xlabel()",
      "plt.xaxis()",
      "plt.xtitle()",
      "plt.labelx()"
    ]
  },
  {
    "q": "What does 'plt.style.use(\"ggplot\")' do?",
    "c": null,
    "o": [
      "Applies ggplot styling to the plot",
      "Loads ggplot library",
      "Creates a pie chart",
      "Adds gridlines"
    ]
  },
  {
    "q": "Which function sets both the width and height of a figure?",
    "c": null,
    "o": [
      "plt.figure(figsize=(w, h))",
      "plt.size(w, h)",
      "plt.dimensions(w, h)",
      "plt.set_size(w, h)"
    ]
  },
  {
    "q": "Which of the following markers draws a triangle?",
    "c": null,
    "o": [
      "'^'",
      "'o'",
      "'s'",
      "'x'"
    ]
  },
  {
    "q": "What will the following code produce?",
    "c": "plt.plot([1, 2, 3], [4, 5, 6], linestyle='dashed')",
    "o": [
      "A line with dashed style",
      "A line with no markers",
      "A solid green line",
      "A scatter plot"
    ]
  },
  {
    "q": "What does 'plt.yticks()' modify?",
    "c": null,
    "o": [
      "The tick marks on the y-axis",
      "The plot title",
      "The y-axis label",
      "The y-axis range"
    ]
  },
  {
    "q": "Which method would you use to change the size of scatter plot markers?",
    "c": null,
    "o": [
      "s",
      "size",
      "radius",
      "scale"
    ]
  },
  {
    "q": "Which command sets the transparency level of bars in a bar chart?",
    "c": null,
    "o": [
      "alpha=0.5",
      "opacity=0.5",
      "transparency=0.5",
      "clear=0.5"
    ]
  },
  {
    "q": "Which Matplotlib component holds all subplots and elements in a plot?",
    "c": null,
    "o": [
      "Figure",
      "Axes",
      "Canvas",
      "Grid"
    ]
  },
  {
    "q": "Which function is used to display the legend in a plot?",
    "c": null,
    "o": [
      "plt.legend()",
      "plt.show_legend()",
      "plt.set_legend()",
      "plt.label()"
    ]
  },
  {
    "q": "Which of the following is used to save a plot to a file?",
    "c": null,
    "o": [
      "plt.savefig('plot.png')",
      "plt.save('plot.png')",
      "plt.store('plot.png')",
      "plt.write('plot.png')"
    ]
  },
  {
    "q": "What does the following code do?",
    "c": "plt.grid(True)",
    "o": [
      "Enables grid lines on the plot",
      "Disables axis labels",
      "Hides plot title",
      "Adds dotted lines to the plot"
    ]
  },
  {
    "q": "Which of the following symbols is used for a circle marker in a plot?",
    "c": null,
    "o": [
      "'o'",
      "'x'",
      "'s'",
      "'^'"
    ]
  },
  {
    "q": "What does the following code do?",
    "c": "plt.pie([10, 20, 30])",
    "o": [
      "Creates a pie chart",
      "Draws a line graph",
      "Displays a histogram",
      "Shows a scatter plot"
    ]
  },
  {
    "q": "Which of the following creates a 2x2 grid of subplots?",
    "c": null,
    "o": [
      "plt.subplots(2, 2)",
      "plt.subfigures(2, 2)",
      "plt.divide(2, 2)",
      "plt.gridplot(2, 2)"
    ]
  },
  {
    "q": "What does 'plt.title(\"My Chart\")' do?",
    "c": null,
    "o": [
      "Adds a title to the plot",
      "Sets x-axis label",
      "Sets y-axis label",
      "Adds a tooltip"
    ]
  },
  {
    "q": "Which of the following is a valid use of Matplotlib with Pandas?",
    "c": "df.plot(kind='line')",
    "o": [
      "Line plot of a DataFrame",
      "Bar chart of a list",
      "Pie chart of a dictionary",
      "3D plot from a tuple"
    ]
  },
  {
    "q": "What does 'plt.annotate()' do?",
    "c": null,
    "o": [
      "Adds annotation text to the plot",
      "Saves the figure",
      "Sets the axis label",
      "Clears the plot"
    ]
  },
  {
    "q": "Which command changes the marker style to a square?",
    "c": null,
    "o": [
      "marker='s'",
      "marker='o'",
      "marker='^'",
      "marker='x'"
    ]
  },
  {
    "q": "Which of the following is used to create a scatter plot in Matplotlib?",
    "c": null,
    "o": [
      "plt.scatter(x, y)",
      "plt.plot(x, y, type='scatter')",
      "plt.graph(x, y)",
      "plt.dot(x, y)"
    ]
  },
  {
    "q": "Which keyword argument changes the color of bars in a bar chart?",
    "c": null,
    "o": [
      "color",
      "fill",
      "shade",
      "style"
    ]
  },
  {
    "q": "Which function adjusts spacing between subplots?",
    "c": null,
    "o": [
      "plt.tight_layout()",
      "plt.spacing()",
      "plt.margin_adjust()",
      "plt.resize_axes()"
    ]
  },
  {
    "q": "What does the following code do?",
    "c": "plt.plot([1, 2, 3], [4, 5, 6], marker='x')",
    "o": [
      "Plots a line with 'x' markers",
      "Creates a scatter plot",
      "Draws a bar chart",
      "Draws only markers with no line"
    ]
  },
  {
    "q": "What is the output of 'plt.bar(['A', 'B'], [10, 20])'?",
    "c": null,
    "o": [
      "A vertical bar chart with categories A and B",
      "A line plot with values 10 and 20",
      "A pie chart",
      "A horizontal bar chart"
    ]
  },
  {
    "q": "Which keyword argument sets the transparency of elements in a plot?",
    "c": null,
    "o": [
      "alpha",
      "transparency",
      "opacity",
      "fade"
    ]
  },
  {
    "q": "Which of the following commands clears the current plot?",
    "c": null,
    "o": [
      "plt.clf()",
      "plt.reset()",
      "plt.clear()",
      "plt.erase()"
    ]
  },
  {
    "q": "What does 'plt.axhline()' do?",
    "c": null,
    "o": [
      "Draws a horizontal line",
      "Draws a vertical line",
      "Adds a title to the plot",
      "Resets the x-axis"
    ]
  },
  {
    "q": "Which keyword argument in 'plt.scatter()' adjusts the size of markers?",
    "c": null,
    "o": [
      "s",
      "size",
      "radius",
      "width"
    ]
  },
  {
    "q": "What will the following code produce?",
    "c": "plt.plot([1, 2, 3], [4, 1, 5], color='red')",
    "o": [
      "A red line plot",
      "A red bar chart",
      "A pie chart",
      "A scatter plot"
    ]
  },
  {
    "q": "Which command is used to display a Matplotlib plot window?",
    "c": null,
    "o": [
      "plt.show()",
      "plt.display()",
      "plt.plot()",
      "plt.open()"
    ]
  },
  {
    "q": "Which of the following is used to create a bar chart with horizontal bars?",
    "c": null,
    "o": [
      "plt.barh()",
      "plt.bar()",
      "plt.hist()",
      "plt.horizontal()"
    ]
  },
  {
    "q": "What does the following code do?",
    "c": "plt.plot([1, 2, 3], [4, 5, 6], label='Sample')\nplt.legend()",
    "o": [
      "Displays a legend with the label 'Sample'",
      "Sets the plot title",
      "Adds axis labels",
      "Clears the figure"
    ]
  },
  {
    "q": "Which function sets the label of the y-axis?",
    "c": null,
    "o": [
      "plt.ylabel()",
      "plt.set_ylabel()",
      "plt.ytitle()",
      "plt.labely()"
    ]
  },
  {
    "q": "Which of the following can be used to add a text annotation to a plot?",
    "c": null,
    "o": [
      "plt.text()",
      "plt.title()",
      "plt.label()",
      "plt.insert()"
    ]
  },
  {
    "q": "Which of the following is NOT a valid plot type in Matplotlib?",
    "c": null,
    "o": [
      "plt.diagram()",
      "plt.plot()",
      "plt.scatter()",
      "plt.hist()"
    ]
  },
  {
    "q": "What does the following line of code set?",
    "c": "plt.xlim(0, 10)",
    "o": [
      "The range of x-axis from 0 to 10",
      "The number of x-ticks",
      "The size of the x-axis label",
      "The length of the x-axis line"
    ]
  },
  {
    "q": "Which of the following would create a figure with a specific size?",
    "c": null,
    "o": [
      "plt.figure(figsize=(6,4))",
      "plt.create(size=(6,4))",
      "plt.plot(figsize=(6,4))",
      "plt.canvas(6,4)"
    ]
  },
  {
    "q": "What does the 'linestyle' parameter control in a plot?",
    "c": null,
    "o": [
      "The appearance of the line (solid, dashed, etc.)",
      "The color of the line",
      "The marker shape",
      "The legend position"
    ]
  },
  {
    "q": "Which of the following imports Matplotlib with the standard alias?",
    "c": null,
    "o": [
      "import matplotlib.pyplot as plt",
      "import matplotlib as plt",
      "from matplotlib import plot as plt",
      "import matplotlib.graph as plt"
    ]
  },
  {
    "q": "Which Matplotlib function is used to create a histogram?",
    "c": null,
    "o": [
      "plt.hist()",
      "plt.histogram()",
      "plt.bar()",
      "plt.scatter()"
    ]
  },
  {
    "q": "What does the following code do?",
    "c": "plt.xlabel(\"Time (s)\")",
    "o": [
      "Sets the label for the x-axis",
      "Sets the label for the y-axis",
      "Adds a plot title",
      "Displays x-axis ticks"
    ]
  },
  {
    "q": "Which keyword argument is used to change the line width?",
    "c": null,
    "o": [
      "linewidth",
      "thickness",
      "line",
      "width"
    ]
  },
  {
    "q": "What is the default plot type used by plt.plot()?",
    "c": null,
    "o": [
      "Line plot",
      "Scatter plot",
      "Bar chart",
      "Histogram"
    ]
  },
  {
    "q": "What will 'plt.xticks()' be used for?",
    "c": null,
    "o": [
      "Customizing x-axis tick marks",
      "Setting x-axis label",
      "Changing line color",
      "Rotating the plot"
    ]
  },
  {
    "q": "Which of the following creates a pie chart with percentages?",
    "c": "plt.pie([10, 20, 30], autopct='%1.1f%%')",
    "o": [
      "A pie chart with value labels in percentage format",
      "A bar chart with percent axis",
      "A histogram with density=True",
      "A scatter plot with labels"
    ]
  },
  {
    "q": "Which argument in plt.plot() changes the line color to green?",
    "c": null,
    "o": [
      "color='g'",
      "line='green'",
      "shade='green'",
      "style='g'"
    ]
  },
  {
    "q": "What does the function 'plt.figure()' do?",
    "c": null,
    "o": [
      "Creates a new figure window",
      "Draws a line plot",
      "Saves the current plot",
      "Sets axis limits"
    ]
  },
  {
    "q": "What type of plot is created by the following code?",
    "c": "plt.plot([1, 2, 3], [4, 1, 5])",
    "o": [
      "Line plot",
      "Bar chart",
      "Pie chart",
      "Histogram"
    ]
  },
  {
    "q": "What is the role of plt.subplots() in Matplotlib?",
    "c": null,
    "o": [
      "Creates a figure and a grid of subplots",
      "Displays the figure",
      "Adds text to the plot",
      "Imports submodules"
    ]
  },
  {
    "q": "Which argument in `plt.plot()` is used to display circular markers at data points?",
    "c": null,
    "o": [
      "marker='o'",
      "shape='circle'",
      "style='o'",
      "symbol='dot'"
    ]
  },
  {
    "q": "What does `plt.savefig('plot.png')` do?",
    "c": null,
    "o": [
      "Saves the current plot to a PNG file",
      "Displays the plot in a new window",
      "Clears the current figure",
      "Exports the figure to Excel"
    ]
  },
  {
    "q": "Which of the following functions can be used to create multiple plots in one figure?",
    "c": null,
    "o": [
      "plt.subplot()",
      "plt.multi()",
      "plt.gridplot()",
      "plt.plotgroup()"
    ]
  },
  {
    "q": "Which keyword in `plt.plot()` sets a dashed line?",
    "c": null,
    "o": [
      "linestyle='--'",
      "dashed=True",
      "dash='on'",
      "style='dashed'"
    ]
  },
  {
    "q": "What does `plt.title(\"My Chart\")` do?",
    "c": null,
    "o": [
      "Adds a title to the plot",
      "Saves the plot with a title",
      "Creates a figure called 'My Chart'",
      "Shows a legend with the title"
    ]
  },
  {
    "q": "What does `plt.grid(True)` enable?",
    "c": null,
    "o": [
      "Shows grid lines on the plot",
      "Sets the plot background to white",
      "Disables the legend",
      "Adds borders to bars"
    ]
  },
  {
    "q": "Which Matplotlib module is typically used to enable 3D plotting?",
    "c": null,
    "o": [
      "mpl_toolkits.mplot3d",
      "matplotlib.3d",
      "plt.threeD",
      "plt.enable3D"
    ]
  },
  {
    "q": "Which argument controls marker size in `plt.scatter()`?",
    "c": null,
    "o": [
      "s",
      "size",
      "r",
      "width"
    ]
  },
  {
    "q": "Which method is used to create a bar plot from a Pandas DataFrame?",
    "c": null,
    "o": [
      "df.plot.bar()",
      "df.barchart()",
      "df.make_bar()",
      "df.plotbar()"
    ]
  },
  {
    "q": "Which function is used to add a legend to the plot?",
    "c": null,
    "o": [
      "plt.legend()",
      "plt.add_legend()",
      "plt.show_legend()",
      "plt.label()"
    ]
  },
  {
    "q": "Which backend allows interactive features like zooming and panning in Matplotlib?",
    "c": null,
    "o": [
      "TkAgg",
      "Agg",
      "PDF",
      "SVG"
    ]
  },
  {
    "q": "Which Matplotlib function creates a 3D subplot?",
    "c": null,
    "o": [
      "fig.add_subplot(111, projection='3d')",
      "plt.plot_3d()",
      "plt.subplot(3D=True)",
      "plt.axes3D()"
    ]
  },
  {
    "q": "How can you plot a 3D surface plot in Matplotlib?",
    "c": null,
    "o": [
      "ax.plot_surface(X, Y, Z)",
      "plt.surface(X, Y, Z)",
      "ax.plot3D(X, Y, Z)",
      "plt.plot_surface(X, Y, Z)"
    ]
  },
  {
    "q": "Which method is used to set the title for a specific subplot axes?",
    "c": null,
    "o": [
      "ax.set_title(\"My Title\")",
      "plt.set_title(\"My Title\")",
      "title.set(ax, \"My Title\")",
      "ax.title(\"My Title\")"
    ]
  },
  {
    "q": "What does `annotate()` do in Matplotlib?",
    "c": null,
    "o": [
      "Adds text with an optional arrow to a specific point",
      "Creates a textbox input for plot labels",
      "Attaches a data tooltip on hover",
      "Sets font style for axis labels"
    ]
  },
  {
    "q": "What is the correct way to plot a Pandas Series using Matplotlib?",
    "c": null,
    "o": [
      "series.plot()",
      "plt.plot(series, kind='line')",
      "pd.plot(series)",
      "plot(series)"
    ]
  },
  {
    "q": "Which of the following will create interactive zoom and pan in Jupyter?",
    "c": null,
    "o": [
      "%matplotlib notebook",
      "%matplotlib inline",
      "%interactive on",
      "plt.interactive()"
    ]
  },
  {
    "q": "How can you create multiple subplots in one figure?",
    "c": null,
    "o": [
      "plt.subplots(2, 2)",
      "plt.split(2, 2)",
      "plt.group(2, 2)",
      "plt.subplotgrid(2, 2)"
    ]
  },
  {
    "q": "Which parameter in `plt.subplots()` is used to set the figure size?",
    "c": null,
    "o": [
      "figsize",
      "size",
      "shape",
      "dpi"
    ]
  },
  {
    "q": "Which of the following can be used to plot directly from a Pandas DataFrame with categories?",
    "c": null,
    "o": [
      "df.plot(kind='bar')",
      "df.graph(kind='bar')",
      "df.draw('bar')",
      "df.chart()"
    ]
  },
  {
    "q": "What is the purpose of `fig, ax = plt.subplots()`?",
    "c": null,
    "o": [
      "It creates a figure and a single subplot axes",
      "It creates only an empty plot window",
      "It adds a legend to the plot",
      "It saves the figure to disk"
    ]
  },
  {
    "q": "Which function is used to add a text annotation at a specific location on the plot?",
    "c": null,
    "o": [
      "plt.text()",
      "plt.mark()",
      "plt.label()",
      "plt.annotate_label()"
    ]
  },
  {
    "q": "How do you plot a 3D scatter plot using Matplotlib?",
    "c": null,
    "o": [
      "ax.scatter(x, y, z)",
      "plt.scatter3D(x, y, z)",
      "plt.plot_3d(x, y, z)",
      "ax.plot_scatter3d(x, y, z)"
    ]
  },
  {
    "q": "What does `%matplotlib inline` do in a Jupyter notebook?",
    "c": null,
    "o": [
      "Displays plots inside the notebook",
      "Enables interactive mode",
      "Shows plots in a pop-up window",
      "Saves plots as PNG by default"
    ]
  },
  {
    "q": "How can you display the current figure window in interactive environments?",
    "c": null,
    "o": [
      "plt.show()",
      "plt.display()",
      "plt.render()",
      "plt.present()"
    ]
  },
  {
    "q": "Which method sets the x-axis label in an Axes object?",
    "c": null,
    "o": [
      "ax.set_xlabel(\"X Axis\")",
      "plt.set_xlabel(\"X Axis\")",
      "fig.set_xlabel(\"X Axis\")",
      "ax.xlabel(\"X Axis\")"
    ]
  },
  {
    "q": "Which Pandas plotting function creates a histogram from a Series?",
    "c": null,
    "o": [
      "series.plot(kind='hist')",
      "series.histogram()",
      "series.barplot()",
      "series.plot_hist()"
    ]
  },
  {
    "q": "How do you assign a color map when plotting 3D surface plots?",
    "c": null,
    "o": [
      "cmap='viridis'",
      "color='gradient'",
      "surface_color='auto'",
      "colormap='hot'"
    ]
  },
  {
    "q": "Which method turns on the interactive mode in Matplotlib?",
    "c": null,
    "o": [
      "plt.ion()",
      "plt.interact()",
      "plt.enable()",
      "plt.mode('interactive')"
    ]
  },
  {
    "q": "What is the output of the following code?",
    "c": "import pandas as pd\nimport matplotlib.pyplot as plt\ndf = pd.DataFrame({'a':[1,2,3],'b':[4,5,6]})\ndf.plot(x='a', y='b')",
    "o": [
      "A line plot with 'a' on x-axis and 'b' on y-axis",
      "A scatter plot of columns 'a' and 'b'",
      "A bar plot of column 'b'",
      "An error due to missing plot type"
    ]
  },
  {
    "q": "Which method adds a title to the entire figure, not just a subplot?",
    "c": null,
    "o": [
      "fig.suptitle(\"Main Title\")",
      "plt.title(\"Main Title\")",
      "ax.set_title(\"Main Title\")",
      "plt.suptitle(\"Main Title\")"
    ]
  },
  {
    "q": "Which Seaborn function is typically used for scatter plots with regression lines?",
    "c": null,
    "o": [
      "sns.lmplot()",
      "sns.scatterplot()",
      "sns.regplot()",
      "sns.lineplot()"
    ]
  },
  {
    "q": "Which axes method sets the y-axis label?",
    "c": null,
    "o": [
      "ax.set_ylabel(\"Y Axis\")",
      "plt.ylabel(\"Y Axis\")",
      "fig.set_ylabel(\"Y Axis\")",
      "ax.ylabel(\"Y Axis\")"
    ]
  },
  {
    "q": "What does the `tight_layout()` function help with?",
    "c": null,
    "o": [
      "Prevents overlap of subplots",
      "Increases line thickness",
      "Rotates axis labels",
      "Shows the legend outside the plot"
    ]
  },
  {
    "q": "Which of the following enables rotating tick labels?",
    "c": null,
    "o": [
      "plt.xticks(rotation=45)",
      "plt.rotate_ticks(45)",
      "ax.rotate_xticks(45)",
      "plt.tick_angle(45)"
    ]
  },
  {
    "q": "How can you save a figure in SVG format?",
    "c": null,
    "o": [
      "plt.savefig(\"figure.svg\")",
      "plt.export(\"figure.svg\")",
      "plt.download(\"figure.svg\")",
      "plt.to_svg(\"figure\")"
    ]
  },
  {
    "q": "What is the main purpose of `ax.view_init()` in 3D plots?",
    "c": null,
    "o": [
      "To set the elevation and angle of the 3D view",
      "To plot 3D scatter points",
      "To initialize 3D surface colors",
      "To enable rotation interaction"
    ]
  },
  {
    "q": "Which Seaborn function creates a pairwise scatter plot matrix?",
    "c": null,
    "o": [
      "sns.pairplot()",
      "sns.scatter_matrix()",
      "sns.gridplot()",
      "sns.plot_pairwise()"
    ]
  },
  {
    "q": "What type of object is returned by `plt.subplots()`?",
    "c": null,
    "o": [
      "(Figure, Axes)",
      "Only Axes",
      "Only Figure",
      "List of Axes"
    ]
  },
  {
    "q": "Which command disables interactive mode in Matplotlib?",
    "c": null,
    "o": [
      "plt.ioff()",
      "plt.interactive(False)",
      "plt.disable()",
      "plt.noint()"
    ]
  },
  {
    "q": "Which parameter in `plt.savefig()` changes the resolution of the saved image?",
    "c": null,
    "o": [
      "dpi",
      "quality",
      "resolution",
      "scale"
    ]
  },
  {
    "q": "How do you clear a figure in Matplotlib?",
    "c": null,
    "o": [
      "plt.clf()",
      "plt.clear()",
      "plt.reset()",
      "plt.clean()"
    ]
  },
  {
    "q": "Which method sets the limits of the x-axis?",
    "c": null,
    "o": [
      "plt.xlim()",
      "plt.set_xlim()",
      "plt.axisx()",
      "plt.xrange()"
    ]
  },
  {
    "q": "Which Seaborn function is used for visualizing the distribution of a dataset?",
    "c": null,
    "o": [
      "sns.distplot()",
      "sns.barchart()",
      "sns.boxline()",
      "sns.scatterframe()"
    ]
  },
  {
    "q": "How do you enable grid lines in a plot?",
    "c": null,
    "o": [
      "plt.grid(True)",
      "plt.enable_grid()",
      "plt.show_grid()",
      "plt.grid_on()"
    ]
  },
  {
    "q": "How do you specify the number of bins in a histogram?",
    "c": null,
    "o": [
      "bins parameter",
      "steps parameter",
      "intervals parameter",
      "divisions parameter"
    ]
  },
  {
    "q": "What is required to plot 3D graphs using `mpl_toolkits.mplot3d`?",
    "c": null,
    "o": [
      "projection='3d'",
      "mode='3d'",
      "view='3d'",
      "enable_3d=True"
    ]
  },
  {
    "q": "Which argument sets transparency in most Matplotlib plot functions?",
    "c": null,
    "o": [
      "alpha",
      "transparency",
      "opacity",
      "faded"
    ]
  },
  {
    "q": "How do you label a point using `annotate()` in Matplotlib?",
    "c": null,
    "o": [
      "plt.annotate(\"Label\", xy=(2, 4))",
      "plt.mark(\"Label\", 2, 4)",
      "plt.label_at(\"Label\", 2, 4)",
      "plt.set_label(\"Label\", 2, 4)"
    ]
  },
  {
    "q": "Which of the following creates a bar plot from a Pandas DataFrame?",
    "c": null,
    "o": [
      "df.plot(kind='bar')",
      "df.show_bar()",
      "df.bar_plot()",
      "df.draw_bar()"
    ]
  },
  {
    "q": "Which keyword argument is used to change the line style in a plot?",
    "c": null,
    "o": [
      "linestyle",
      "linepattern",
      "style",
      "stroke"
    ]
  },
  {
    "q": "What will the following code display?",
    "c": "import matplotlib.pyplot as plt\nplt.plot([1, 2, 3], [4, 5, 6], marker='o')\nplt.show()",
    "o": [
      "A line plot with circle markers at each point",
      "A scatter plot only",
      "A bar plot",
      "An empty figure"
    ]
  },
  {
    "q": "Which argument changes the width of lines in a Matplotlib plot?",
    "c": null,
    "o": [
      "linewidth",
      "thickness",
      "width",
      "stroke_width"
    ]
  },
  {
    "q": "In Matplotlib, what does `ax.legend()` do?",
    "c": null,
    "o": [
      "Displays a legend for the plot",
      "Changes axis ticks",
      "Adds labels to each point",
      "Shows a grid"
    ]
  },
  {
    "q": "What does `plt.subplots(2, 1)` create?",
    "c": null,
    "o": [
      "Two vertically stacked subplots",
      "Two horizontally arranged plots",
      "Two separate figures",
      "One 3D subplot"
    ]
  },
  {
    "q": "Which module is required to enable 3D plotting in Matplotlib?",
    "c": null,
    "o": [
      "mpl_toolkits.mplot3d",
      "matplotlib.3d",
      "plt.3dtools",
      "mplot.3d"
    ]
  },
  {
    "q": "What does `plt.axis('equal')` do?",
    "c": null,
    "o": [
      "Ensures same scaling on both axes",
      "Sets axis limits to be equal",
      "Aligns ticks equally",
      "Removes grid lines"
    ]
  },
  {
    "q": "Which Seaborn function is suitable for creating box plots?",
    "c": null,
    "o": [
      "sns.boxplot()",
      "sns.lineplot()",
      "sns.histplot()",
      "sns.scatterplot()"
    ]
  },
  {
    "q": "How do you add a horizontal line at y=5 in a plot?",
    "c": null,
    "o": [
      "plt.axhline(y=5)",
      "plt.hline(5)",
      "plt.line(y=5)",
      "plt.yline(5)"
    ]
  },
  {
    "q": "What does `plt.close()` do?",
    "c": null,
    "o": [
      "Closes the current figure window",
      "Terminates the program",
      "Removes the legend",
      "Clears the current axes"
    ]
  },
  {
    "q": "Which function opens an interactive figure window when using `%matplotlib` in Jupyter?",
    "c": null,
    "o": [
      "%matplotlib qt",
      "%matplotlib inline",
      "%matplotlib show",
      "%matplotlib auto"
    ]
  },
  {
    "q": "Which parameter in `plt.plot()` changes the marker color independently of the line?",
    "c": null,
    "o": [
      "markerfacecolor",
      "markercolor",
      "facecolor",
      "markcolor"
    ]
  },
  {
    "q": "What is the role of `figsize` in `plt.figure()`?",
    "c": null,
    "o": [
      "Sets the size of the figure in inches",
      "Sets pixel resolution",
      "Changes font size",
      "Controls zoom level"
    ]
  },
  {
    "q": "How do you hide x-axis tick labels?",
    "c": null,
    "o": [
      "plt.xticks([])",
      "plt.hidexticks()",
      "plt.axis(hide='x')",
      "plt.xlabels(None)"
    ]
  },
  {
    "q": "Which method sets the aspect ratio of an Axes object?",
    "c": null,
    "o": [
      "ax.set_aspect('equal')",
      "ax.aspect_equal()",
      "plt.set_equal_aspect()",
      "fig.aspect('equal')"
    ]
  },
  {
    "q": "Which library is commonly imported as `sns` in Python?",
    "c": null,
    "o": [
      "Seaborn",
      "Statsmodels",
      "Scipy",
      "Sklearn"
    ]
  },
  {
    "q": "What does `df.plot(kind='hist')` generate?",
    "c": null,
    "o": [
      "A histogram using DataFrame data",
      "A bar chart",
      "A heatmap",
      "A pie chart"
    ]
  },
  {
    "q": "Which of these adds a subplot in the top-left of a 2x2 grid?",
    "c": null,
    "o": [
      "plt.subplot(2, 2, 1)",
      "plt.plot(2, 2, 1)",
      "plt.grid(2, 2, 1)",
      "plt.subplots(2, 2, 1)"
    ]
  },
  {
    "q": "What does `%matplotlib inline` do in Jupyter?",
    "c": null,
    "o": [
      "Displays plots below the code cell",
      "Enables 3D plots",
      "Saves plots automatically",
      "Turns off interactive mode"
    ]
  },
  {
    "q": "Which method from Axes3D is used to plot a 3D surface?",
    "c": null,
    "o": [
      "ax.plot_surface()",
      "ax.draw_surface()",
      "ax.surface_plot()",
      "ax.surface()"
    ]
  },
  {
    "q": "Which function is used to display all open figures?",
    "c": null,
    "o": [
      "plt.show()",
      "plt.display()",
      "plt.open()",
      "plt.run()"
    ]
  },
  {
    "q": "In `plt.plot()`, what does the argument `'--'` represent?",
    "c": null,
    "o": [
      "Dashed line style",
      "Dotted marker",
      "Red color",
      "Bold text"
    ]
  },
  {
    "q": "What will `plt.title(\"Graph\")` do?",
    "c": null,
    "o": [
      "Set the title of the plot to 'Graph'",
      "Display the legend title",
      "Set the x-axis label",
      "Save the plot with name 'Graph'"
    ]
  },
  {
    "q": "Which argument sets the color of bars in a `bar()` plot?",
    "c": null,
    "o": [
      "color",
      "barcolor",
      "fill",
      "shade"
    ]
  },
  {
    "q": "How can you create multiple subplots in one figure?",
    "c": null,
    "o": [
      "plt.subplot()",
      "plt.multipanel()",
      "plt.multi()",
      "plt.gridplot()"
    ]
  },
  {
    "q": "Which Seaborn function can be used to show relationships between numerical variables?",
    "c": null,
    "o": [
      "sns.scatterplot()",
      "sns.histplot()",
      "sns.boxplot()",
      "sns.catplot()"
    ]
  },
  {
    "q": "What does `ax.text(1, 2, 'Point')` do?",
    "c": null,
    "o": [
      "Adds text 'Point' at coordinates (1, 2)",
      "Creates a new plot with label 'Point'",
      "Highlights a point",
      "Adds a title"
    ]
  },
  {
    "q": "What does the `label` argument do in `plt.plot()`?",
    "c": null,
    "o": [
      "Specifies the label used in the legend",
      "Sets the x-axis label",
      "Shows a title",
      "Sets font style"
    ]
  },
  {
    "q": "Which parameter controls the edge color of a histogram bar?",
    "c": null,
    "o": [
      "edgecolor",
      "bordercolor",
      "linecolor",
      "baroutline"
    ]
  },
  {
    "q": "Which of the following imports is needed to use 3D plots?",
    "c": null,
    "o": [
      "from mpl_toolkits.mplot3d import Axes3D",
      "import matplotlib.3d as m3d",
      "from matplotlib import surface",
      "import matplotlib.pyplot3d as plt"
    ]
  },
  {
    "q": "What is the correct method to save a plot as an image file?",
    "c": null,
    "o": [
      "plt.savefig('plot.png')",
      "plt.export('plot.png')",
      "plt.write('plot.png')",
      "plt.output('plot.png')"
    ]
  },
  {
    "q": "Which function adds a grid to the plot?",
    "c": null,
    "o": [
      "plt.grid()",
      "plt.showgrid()",
      "plt.add_grid()",
      "plt.setgrid()"
    ]
  },
  {
    "q": "Which of these functions creates a pie chart in Matplotlib?",
    "c": null,
    "o": [
      "plt.pie()",
      "plt.piechart()",
      "plt.circle()",
      "plt.pie_plot()"
    ]
  },
  {
    "q": "In `plt.plot(x, y, 'ro')`, what does 'ro' mean?",
    "c": null,
    "o": [
      "Red color with circle markers",
      "Random orange line",
      "Right-oriented line",
      "Rounded overlay"
    ]
  },
  {
    "q": "What does `plt.xlabel('Time')` do?",
    "c": null,
    "o": [
      "Sets the x-axis label to 'Time'",
      "Adds a label to each data point",
      "Names the legend",
      "Sets the title"
    ]
  },
  {
    "q": "Which of the following adds a legend to a plot?",
    "c": null,
    "o": [
      "plt.legend()",
      "plt.set_legend()",
      "plt.label()",
      "plt.addlabel()"
    ]
  },
  {
    "q": "In `plt.subplots()`, what is returned?",
    "c": null,
    "o": [
      "A figure and axes object",
      "Only a figure object",
      "Only an axes object",
      "A list of plot titles"
    ]
  },
  {
    "q": "Which method from Pandas allows quick plotting of a DataFrame?",
    "c": null,
    "o": [
      "df.plot()",
      "df.matplot()",
      "df.graph()",
      "df.visualize()"
    ]
  },
  {
    "q": "How do you make a plot interactive in Jupyter Notebook?",
    "c": null,
    "o": [
      "%matplotlib notebook",
      "%matplotlib static",
      "%matplotlib show",
      "%matplotlib plot"
    ]
  },
  {
    "q": "What does the `annotate()` function do in Matplotlib?",
    "c": null,
    "o": [
      "Adds annotation text to a specific point",
      "Draws a box on the plot",
      "Adds a legend to each axis",
      "Sets title font size"
    ]
  },
  {
    "q": "Which keyword is used to set the transparency of a plot?",
    "c": null,
    "o": [
      "alpha",
      "opacity",
      "transparency",
      "visible"
    ]
  },
  {
    "q": "Which color code represents green in Matplotlib?",
    "c": null,
    "o": [
      "'g'",
      "'r'",
      "'b'",
      "'k'"
    ]
  },
  {
    "q": "How do you display a plot on the screen?",
    "c": null,
    "o": [
      "plt.show()",
      "plt.display()",
      "plt.plot()",
      "plt.open()"
    ]
  },
  {
    "q": "What does `plt.yticks([])` do?",
    "c": null,
    "o": [
      "Removes y-axis tick marks",
      "Rotates y-axis labels",
      "Sets tick frequency",
      "Changes label font"
    ]
  },
  {
    "q": "Which of the following is true about `plt.bar()`?",
    "c": null,
    "o": [
      "It creates a bar chart",
      "It creates a line chart",
      "It creates a scatter plot",
      "It creates a pie chart"
    ]
  },
  {
    "q": "What is required to create a 3D plot in Matplotlib?",
    "c": null,
    "o": [
      "projection='3d'",
      "style='3d'",
      "type='3d'",
      "mode='3d'"
    ]
  },
  {
    "q": "Which of the following can be used to customize Seaborn plots?",
    "c": null,
    "o": [
      "sns.set_style()",
      "sns.plot_style()",
      "sns.design_plot()",
      "sns.theme()"
    ]
  },
  {
    "q": "Which Pandas method directly supports histograms?",
    "c": null,
    "o": [
      "df.hist()",
      "df.bars()",
      "df.line()",
      "df.curve()"
    ]
  },
  {
    "q": "What does `plt.xlim(0, 10)` do?",
    "c": null,
    "o": [
      "Sets the x-axis limit from 0 to 10",
      "Hides the x-axis labels",
      "Zooms in 10x",
      "Adds 10 ticks"
    ]
  },
  {
    "q": "Which function helps in adding arrows and labels in plots?",
    "c": null,
    "o": [
      "annotate()",
      "mark()",
      "label_arrow()",
      "drawnote()"
    ]
  },
  {
    "q": "Which parameter is used to set figure size in Matplotlib?",
    "c": null,
    "o": [
      "figsize",
      "size",
      "shape",
      "scale"
    ]
  },
  {
    "q": "In a pie chart, what does the `autopct` parameter do?",
    "c": null,
    "o": [
      "Displays percentage values",
      "Changes chart color",
      "Rotates the chart",
      "Adds legends"
    ]
  },
  {
    "q": "Which function sets the title of the x-axis?",
    "c": null,
    "o": [
      "plt.xlabel()",
      "plt.xtitle()",
      "plt.setx()",
      "plt.axislabel()"
    ]
  },
  {
    "q": "What is the output of `plt.plot([1, 2, 3], [4, 5, 6])`?",
    "c": null,
    "o": [
      "A line plot",
      "A bar plot",
      "A scatter plot",
      "A histogram"
    ]
  },
  {
    "q": "How can you make a legend appear in the best location automatically?",
    "c": null,
    "o": [
      "plt.legend(loc='best')",
      "plt.legend(loc='auto')",
      "plt.legend(auto=True)",
      "plt.legend()"
    ]
  },
  {
    "q": "Which method in Seaborn creates a histogram?",
    "c": null,
    "o": [
      "sns.histplot()",
      "sns.barplot()",
      "sns.boxplot()",
      "sns.scatterplot()"
    ]
  },
  {
    "q": "What does `plt.tight_layout()` help with?",
    "c": null,
    "o": [
      "Adjusts subplot spacing to fit within the figure area",
      "Draws grid lines",
      "Adds annotations",
      "Sets font style"
    ]
  },
  {
    "q": "Which of the following imports is needed for Seaborn?",
    "c": null,
    "o": [
      "import seaborn as sns",
      "import sns as seaborn",
      "import seaborn.plot as sns",
      "import matplotlib.seaborn"
    ]
  },
  {
    "q": "Which method in Matplotlib allows creating multiple plots in one figure?",
    "c": null,
    "o": [
      "plt.subplots()",
      "plt.multi()",
      "plt.combine()",
      "plt.grid()"
    ]
  },
  {
    "q": "Which function sets the y-axis label?",
    "c": null,
    "o": [
      "plt.ylabel()",
      "plt.ytitle()",
      "plt.set_ylabel()",
      "plt.axis_y()"
    ]
  },
  {
    "q": "Which argument in `plt.pie()` explodes a slice outward?",
    "c": null,
    "o": [
      "explode",
      "separate",
      "sliceout",
      "offset"
    ]
  },
  {
    "q": "What does `plt.legend()` do?",
    "c": null,
    "o": [
      "Displays a legend for labeled plot elements",
      "Hides plot labels",
      "Sets axis labels",
      "Removes grid lines"
    ]
  },
  {
    "q": "What type of chart is produced by `plt.hist()`?",
    "c": null,
    "o": [
      "Histogram",
      "Bar chart",
      "Line chart",
      "Pie chart"
    ]
  },
  {
    "q": "Which Seaborn function plots a categorical variable using bars?",
    "c": null,
    "o": [
      "sns.barplot()",
      "sns.histplot()",
      "sns.scatterplot()",
      "sns.distplot()"
    ]
  },
  {
    "q": "Which argument adjusts spacing between subplots?",
    "c": null,
    "o": [
      "plt.tight_layout()",
      "plt.subplot_gap()",
      "plt.arrange()",
      "plt.spacing()"
    ]
  },
  {
    "q": "What does the `ax` object represent in Matplotlib?",
    "c": null,
    "o": [
      "A subplot (axes) within a figure",
      "The entire figure window",
      "The plot title only",
      "The color palette"
    ]
  },
  {
    "q": "Which keyword argument sets the border color of a pie slice?",
    "c": null,
    "o": [
      "edgecolor",
      "border",
      "sliceoutline",
      "linecolor"
    ]
  },
  {
    "q": "What does `plt.ylabel(\"Count\")` do?",
    "c": null,
    "o": [
      "Sets the y-axis label to 'Count'",
      "Labels all bars as 'Count'",
      "Adds a legend with name 'Count'",
      "Changes y-tick spacing"
    ]
  },
  {
    "q": "How can you give each plot in a line chart a label?",
    "c": null,
    "o": [
      "Use the `label` parameter in `plt.plot()`",
      "Set a `title` for each line",
      "Use `plt.legend(label=...)`",
      "Use `plt.name()`"
    ]
  },
  {
    "q": "Which Matplotlib method removes an existing figure?",
    "c": null,
    "o": [
      "plt.close()",
      "plt.clear()",
      "plt.destroy()",
      "plt.reset()"
    ]
  },
  {
    "q": "Which parameter sets the colors of slices in a pie chart?",
    "c": null,
    "o": [
      "colors",
      "slices",
      "colormap",
      "shade"
    ]
  },
  {
    "q": "Which argument is used in `plt.plot()` to change the line style to dashed?",
    "c": null,
    "o": [
      "'--'",
      "'-.'",
      "':'",
      "'-o'"
    ]
  },
  {
    "q": "In Matplotlib, what is the default orientation of a bar chart created using `plt.bar()`?",
    "c": null,
    "o": [
      "Vertical",
      "Horizontal",
      "Diagonal",
      "None"
    ]
  },
  {
    "q": "Which function in Pandas is used to draw line plots directly?",
    "c": null,
    "o": [
      "df.plot()",
      "df.lineplot()",
      "df.draw()",
      "df.line()"
    ]
  },
  {
    "q": "What is the purpose of `plt.grid(True)`?",
    "c": null,
    "o": [
      "To show grid lines on the plot",
      "To hide tick labels",
      "To fill the background color",
      "To zoom in"
    ]
  },
  {
    "q": "Which keyword is used to set the title of a plot?",
    "c": null,
    "o": [
      "plt.title()",
      "plt.set_title()",
      "plt.header()",
      "plt.name()"
    ]
  },
  {
    "q": "What is the correct way to import Matplotlib's pyplot module?",
    "c": null,
    "o": [
      "import matplotlib.pyplot as plt",
      "from matplotlib import plot as plt",
      "import matplotlib.graph as plt",
      "import plot as matplotlib"
    ]
  },
  {
    "q": "Which method adds text inside the plot at a specific coordinate?",
    "c": null,
    "o": [
      "plt.text()",
      "plt.annotate()",
      "plt.insert()",
      "plt.label()"
    ]
  },
  {
    "q": "In a subplot grid, what does `plt.subplot(2, 2, 3)` mean?",
    "c": null,
    "o": [
      "Creates 2x2 grid and selects the 3rd subplot",
      "Creates 3x3 grid and selects the 2nd subplot",
      "Creates 2x3 grid and selects the 2nd subplot",
      "Creates 3x2 grid and selects the 2nd subplot"
    ]
  },
  {
    "q": "What does `plt.savefig(\"plot.png\")` do?",
    "c": null,
    "o": [
      "Saves the current plot to a file named 'plot.png'",
      "Displays the plot on screen",
      "Opens the saved image file",
      "Clears the plot from memory"
    ]
  },
  {
    "q": "Which function is used to create a scatter plot in Matplotlib?",
    "c": null,
    "o": [
      "plt.scatter()",
      "plt.pointplot()",
      "plt.dots()",
      "plt.bubble()"
    ]
  },
  {
    "q": "What does `plt.xlim(0, 10)` do?",
    "c": null,
    "o": [
      "Sets the x-axis range from 0 to 10",
      "Zooms in on the plot",
      "Draws a vertical line at x=10",
      "Sets the width of the plot to 10"
    ]
  },
  {
    "q": "Which method adds a caption or pointer to a specific part of a plot?",
    "c": null,
    "o": [
      "plt.annotate()",
      "plt.caption()",
      "plt.comment()",
      "plt.tooltip()"
    ]
  },
  {
    "q": "What does `plt.subplot(1, 2, 1)` indicate?",
    "c": null,
    "o": [
      "First subplot in a 1-row, 2-column layout",
      "Second subplot in a 1-row, 2-column layout",
      "First subplot in a 2-row, 1-column layout",
      "Subplot at row 1, column 2"
    ]
  },
  {
    "q": "Which function displays the plot window on screen?",
    "c": null,
    "o": [
      "plt.show()",
      "plt.display()",
      "plt.open()",
      "plt.start()"
    ]
  },
  {
    "q": "How can you plot NumPy arrays with Matplotlib?",
    "c": null,
    "o": [
      "Using plt.plot(x, y) where x and y are NumPy arrays",
      "Using plt.arrayplot()",
      "Convert arrays to lists first",
      "Using plt.numpyplot()"
    ]
  },
  {
    "q": "Which of the following styles represents a red dashed line in `plt.plot()`?",
    "c": null,
    "o": [
      "'r--'",
      "'r-'",
      "'--r'",
      "'red--'"
    ]
  },
  {
    "q": "Which Matplotlib function can directly plot Pandas DataFrame columns?",
    "c": null,
    "o": [
      "df.plot()",
      "df.matplot()",
      "plt.pandas()",
      "df.graph()"
    ]
  },
  {
    "q": "Which of the following will change the marker to a circle in a line plot?",
    "c": null,
    "o": [
      "'o'",
      "'x'",
      "'^'",
      "'s'"
    ]
  },
  {
    "q": "Which of these options creates a horizontal bar chart?",
    "c": null,
    "o": [
      "plt.barh()",
      "plt.hbar()",
      "plt.bar(horizontal=True)",
      "plt.bar(horizontal)"
    ]
  },
  {
    "q": "Which Matplotlib module is used for 3D plotting?",
    "c": null,
    "o": [
      "mpl_toolkits.mplot3d",
      "matplotlib.pyplot3d",
      "matplotlib.3d",
      "plt.threeD"
    ]
  },
  {
    "q": "What method is used to add a figure title in Matplotlib?",
    "c": null,
    "o": [
      "fig.suptitle()",
      "fig.add_title()",
      "plt.figtitle()",
      "plt.caption()"
    ]
  },
  {
    "q": "Which function creates a 3D scatter plot?",
    "c": null,
    "o": [
      "ax.scatter()",
      "plt.scatter3d()",
      "plt.scatter()",
      "ax.scatter3d()"
    ]
  },
  {
    "q": "How do you enable interactive zooming in Matplotlib plots?",
    "c": null,
    "o": [
      "By using `%matplotlib notebook`",
      "By calling plt.zoom(True)",
      "It is enabled by default",
      "Use plt.interact()"
    ]
  },
  {
    "q": "Which library is often used with Matplotlib for statistical visualization?",
    "c": null,
    "o": [
      "Seaborn",
      "Scikit-learn",
      "OpenCV",
      "NumPy"
    ]
  },
  {
    "q": "What is the use of `plt.clf()`?",
    "c": null,
    "o": [
      "Clears the current figure",
      "Closes all figures",
      "Fills the background color",
      "Finalizes the figure"
    ]
  },
  {
    "q": "Which of the following displays the plot in a Jupyter Notebook with interactive controls?",
    "c": null,
    "o": [
      "%matplotlib notebook",
      "%interactive on",
      "%matplotlib on",
      "%plot inline"
    ]
  },
  {
    "q": "In a 3D plot, which method sets the z-axis label?",
    "c": null,
    "o": [
      "ax.set_zlabel()",
      "ax.label_z()",
      "ax.zlabel()",
      "plt.set_zlabel()"
    ]
  },
  {
    "q": "Which method is used to save a Matplotlib figure to a file?",
    "c": null,
    "o": [
      "plt.savefig()",
      "plt.save()",
      "plt.write()",
      "plt.store()"
    ]
  },
  {
    "q": "What is the default backend for Matplotlib in Jupyter Notebook?",
    "c": null,
    "o": [
      "inline",
      "notebook",
      "qt",
      "tk"
    ]
  },
  {
    "q": "Which method is used to close a plot window in Matplotlib?",
    "c": null,
    "o": [
      "plt.close()",
      "plt.hide()",
      "plt.shutdown()",
      "plt.end()"
    ]
  },
  {
    "q": "Which of the following is required to create a 3D plot in Matplotlib?",
    "c": null,
    "o": [
      "projection='3d'",
      "mode='3d'",
      "layout='3D'",
      "view='z'"
    ]
  },
  {
    "q": "What is the output format when saving a figure using `plt.savefig('plot.pdf')`?",
    "c": null,
    "o": [
      "PDF file",
      "PNG image",
      "Interactive HTML",
      "Text file"
    ]
  },
  {
    "q": "Which function is used to draw multiple plots in a single figure?",
    "c": null,
    "o": [
      "plt.subplot()",
      "plt.multiplot()",
      "plt.combine()",
      "plt.gridplot()"
    ]
  },
  {
    "q": "How do you clear the current axes in Matplotlib?",
    "c": null,
    "o": [
      "plt.cla()",
      "plt.clf()",
      "plt.clear()",
      "plt.reset()"
    ]
  },
  {
    "q": "Which Seaborn function is used to draw a histogram with a KDE curve?",
    "c": null,
    "o": [
      "sns.histplot()",
      "sns.kdeplot()",
      "sns.dist()",
      "sns.hist()"
    ]
  },
  {
    "q": "Which of these methods sets the aspect ratio of a plot in Matplotlib?",
    "c": null,
    "o": [
      "ax.set_aspect()",
      "plt.aspect()",
      "plt.set_ratio()",
      "ax.aspect_ratio()"
    ]
  },
  {
    "q": "Which function adjusts spacing between subplots?",
    "c": null,
    "o": [
      "plt.tight_layout()",
      "plt.spacing()",
      "plt.arrange()",
      "plt.adjust_space()"
    ]
  },
  {
    "q": "What is the purpose of `ax.set_title('Graph')`?",
    "c": null,
    "o": [
      "Sets title for an individual subplot",
      "Sets global figure title",
      "Saves the plot as 'Graph.png'",
      "Adds axis labels"
    ]
  },
  {
    "q": "Which of the following libraries extends Matplotlib to provide statistical plots?",
    "c": null,
    "o": [
      "Seaborn",
      "Pandas",
      "SciPy",
      "Sklearn"
    ]
  },
  {
    "q": "Which function in Matplotlib automatically adjusts subplot spacing to prevent overlap?",
    "c": null,
    "o": [
      "plt.tight_layout()",
      "plt.subplots_adjust()",
      "plt.space_layout()",
      "plt.resize_fig()"
    ]
  },
  {
    "q": "Which method adds a label to the y-axis of a plot?",
    "c": null,
    "o": [
      "plt.ylabel()",
      "plt.label_y()",
      "plt.set_ylabel()",
      "plt.ylab()"
    ]
  },
  {
    "q": "Which function in Seaborn creates a box plot?",
    "c": null,
    "o": [
      "sns.boxplot()",
      "sns.box()",
      "sns.box_chart()",
      "sns.plot_box()"
    ]
  },
  {
    "q": "How do you add text at a specific coordinate on a plot?",
    "c": null,
    "o": [
      "plt.text()",
      "plt.label()",
      "plt.caption()",
      "plt.annot()"
    ]
  },
  {
    "q": "What happens when you call `plt.savefig('output.png')`?",
    "c": null,
    "o": [
      "The current figure is saved as a PNG file",
      "The plot is displayed",
      "The plot is printed to console",
      "A blank file is created"
    ]
  },
  {
    "q": "Which command creates a 1x3 grid of subplots?",
    "c": null,
    "o": [
      "plt.subplots(1, 3)",
      "plt.subplot(3, 1)",
      "plt.grid(1, 3)",
      "plt.subplots(3, 1)"
    ]
  },
  {
    "q": "Which color code represents blue in Matplotlib?",
    "c": null,
    "o": [
      "'b'",
      "'g'",
      "'r'",
      "'k'"
    ]
  },
  {
    "q": "What is the use of `legend()` in Matplotlib?",
    "c": null,
    "o": [
      "It shows the labels for plotted data",
      "It draws a border around the plot",
      "It adds a title to the axes",
      "It saves the figure"
    ]
  },
  {
    "q": "Which of the following plots is best for showing proportions?",
    "c": null,
    "o": [
      "Pie chart",
      "Bar chart",
      "Line plot",
      "Histogram"
    ]
  },
  {
    "q": "How do you plot a Pandas Series directly using Matplotlib?",
    "c": null,
    "o": [
      "series.plot()",
      "plt.plot(series.values)",
      "plt.series(series)",
      "series.matplot()"
    ]
  },
  {
    "q": "Which parameter of `plot()` controls the line style?",
    "c": null,
    "o": [
      "linestyle",
      "lineformat",
      "style",
      "dash"
    ]
  },
  {
    "q": "Which of the following creates a figure with 2 rows and 1 column of subplots?",
    "c": null,
    "o": [
      "plt.subplots(2, 1)",
      "plt.subplot(1, 2)",
      "plt.figure(2, 1)",
      "plt.grid(2, 1)"
    ]
  },
  {
    "q": "What does `plt.axis('off')` do?",
    "c": null,
    "o": [
      "Hides axis lines and labels",
      "Disables zoom",
      "Turns off the plot",
      "Clears axis limits"
    ]
  },
  {
    "q": "How do you display a plot after creating it with Matplotlib?",
    "c": null,
    "o": [
      "plt.show()",
      "plt.run()",
      "plt.view()",
      "plt.render()"
    ]
  },
  {
    "q": "Which function is used in Seaborn to create pairwise scatter plots for a DataFrame?",
    "c": null,
    "o": [
      "sns.pairplot()",
      "sns.scatterframe()",
      "sns.plotpairs()",
      "sns.pairs()"
    ]
  },
  {
    "q": "How do you create a 3D axis object in Matplotlib?",
    "c": null,
    "o": [
      "fig.add_subplot(111, projection='3d')",
      "plt.axes3d()",
      "plt.figure(3d=True)",
      "fig.make_3d()"
    ]
  },
  {
    "q": "Which function sets the x-axis label?",
    "c": null,
    "o": [
      "plt.xlabel()",
      "plt.xaxis()",
      "plt.set_x()",
      "plt.labelx()"
    ]
  },
  {
    "q": "What is the role of `annot=True` in Seaborn heatmaps?",
    "c": null,
    "o": [
      "Displays data values inside the cells",
      "Adds arrows on each cell",
      "Highlights max values",
      "Creates annotations outside the plot"
    ]
  },
  {
    "q": "What does `fig, ax = plt.subplots()` return?",
    "c": null,
    "o": [
      "A figure and axes object",
      "Only axes object",
      "Only figure object",
      "A plot window"
    ]
  },
  {
    "q": "What does `ax.annotate()` do in Matplotlib?",
    "c": null,
    "o": [
      "Adds text annotation with optional arrows",
      "Saves the annotation to file",
      "Draws title on the axes",
      "Creates a colored background"
    ]
  },
  {
    "q": "Which of the following functions creates a bar chart in Matplotlib?",
    "c": null,
    "o": [
      "plt.bar()",
      "plt.column()",
      "plt.barchart()",
      "plt.chart()"
    ]
  },
  {
    "q": "What does `plt.title('My Plot')` do?",
    "c": null,
    "o": [
      "Adds a title to the current plot",
      "Sets the figure name",
      "Shows a pop-up title",
      "Labels the x-axis"
    ]
  },
  {
    "q": "Which method is used to save a plot as a PNG file?",
    "c": null,
    "o": [
      "plt.savefig('plot.png')",
      "plt.saveimage('plot')",
      "plt.export('png')",
      "plt.output('plot.png')"
    ]
  },
  {
    "q": "How do you enable grid lines in a plot?",
    "c": null,
    "o": [
      "plt.grid(True)",
      "plt.gridlines()",
      "plt.showgrid()",
      "plt.set_grid()"
    ]
  },
  {
    "q": "What is the purpose of `plt.subplots_adjust()`?",
    "c": null,
    "o": [
      "Manually adjust spacing between subplots",
      "Automatically fix layout",
      "Create multiple figures",
      "Align titles and labels"
    ]
  },
  {
    "q": "Which Seaborn function is used for correlation heatmaps?",
    "c": null,
    "o": [
      "sns.heatmap()",
      "sns.cormap()",
      "sns.matrixplot()",
      "sns.colorgrid()"
    ]
  },
  {
    "q": "What does `plt.legend()` display?",
    "c": null,
    "o": [
      "Labels for plotted lines or markers",
      "The title of the plot",
      "X and Y axis values",
      "A data table below the plot"
    ]
  },
  {
    "q": "What does the 'alpha' parameter control in most Matplotlib plots?",
    "c": null,
    "o": [
      "Transparency",
      "Line width",
      "Color brightness",
      "Marker size"
    ]
  },
  {
    "q": "What is the correct file extension to save a plot as an image?",
    "c": null,
    "o": [
      ".png",
      ".py",
      ".fig",
      ".txt"
    ]
  },
  {
    "q": "Which library must be imported to use Seaborn?",
    "c": null,
    "o": [
      "import seaborn as sns",
      "import matplotlib.seaborn",
      "import sns as seaborn",
      "import seaborn.pyplot"
    ]
  },
  {
    "q": "Which function is used to change the size of a figure?",
    "c": null,
    "o": [
      "plt.figure(figsize=(width, height))",
      "plt.resize()",
      "plt.set_figsize()",
      "plt.size()"
    ]
  },
  {
    "q": "What does `plt.xlim()` control in a plot?",
    "c": null,
    "o": [
      "The range of values on the x-axis",
      "The label of x-axis",
      "The color of the x-axis",
      "The tick count on x-axis"
    ]
  },
  {
    "q": "Which marker represents a square in Matplotlib plots?",
    "c": null,
    "o": [
      "'s'",
      "'o'",
      "'*'",
      "'^'"
    ]
  },
  {
    "q": "Which line of code adds a subplot in a 2x2 grid at position 3?",
    "c": null,
    "o": [
      "plt.subplot(2, 2, 3)",
      "plt.subplots(3)",
      "plt.add_subplot(2, 2, 3)",
      "plt.grid(2, 2, 3)"
    ]
  },
  {
    "q": "Which of the following plots is best for showing the distribution of a numeric variable?",
    "c": null,
    "o": [
      "Histogram",
      "Bar plot",
      "Line plot",
      "Pie chart"
    ]
  },
  {
    "q": "Which keyword argument in `plt.plot()` changes the line color?",
    "c": null,
    "o": [
      "color",
      "line_color",
      "col",
      "plot_color"
    ]
  },
  {
    "q": "What does `sharex=True` do in `plt.subplots()`?",
    "c": null,
    "o": [
      "Shares x-axis across subplots",
      "Uses the same color on x-axis",
      "Hides x-axis",
      "Fixes x-tick font"
    ]
  },
  {
    "q": "Which function can be used to plot Pandas DataFrame columns directly?",
    "c": null,
    "o": [
      "df.plot()",
      "plt.pandas()",
      "df.matplotlib()",
      "pd.graph()"
    ]
  },
  {
    "q": "What is the purpose of `plt.annotate()`?",
    "c": null,
    "o": [
      "To add text with optional arrows at a specific location",
      "To insert a legend",
      "To adjust tick labels",
      "To export annotation metadata"
    ]
  },
  {
    "q": "What does `plt.clf()` do?",
    "c": null,
    "o": [
      "Clears the current figure",
      "Closes the figure window",
      "Clears the legend only",
      "Formats the chart"
    ]
  },
  {
    "q": "Which Matplotlib function creates a pie chart?",
    "c": null,
    "o": [
      "plt.pie()",
      "plt.piechart()",
      "plt.circle()",
      "plt.donut()"
    ]
  },
  {
    "q": "What is the purpose of `plt.tight_layout()`?",
    "c": null,
    "o": [
      "Adjusts subplots to fit within the figure area",
      "Increases the resolution",
      "Adds padding to plots",
      "Zooms into the chart"
    ]
  },
  {
    "q": "Which of the following enables zooming and panning in a Matplotlib interactive window?",
    "c": null,
    "o": [
      "Using the toolbar in interactive mode",
      "Calling plt.zoom()",
      "Setting plt.interactive = True",
      "Using plt.enable_zoom()"
    ]
  },
  {
    "q": "What does the `label` parameter in `plot()` help with?",
    "c": null,
    "o": [
      "Assigns a name used in the legend",
      "Sets a title for the x-axis",
      "Changes color of the plot",
      "Adds annotation to the plot"
    ]
  },
  {
    "q": "Which color code represents red in Matplotlib?",
    "c": null,
    "o": [
      "'r'",
      "'b'",
      "'g'",
      "'k'"
    ]
  },
  {
    "q": "Which of the following adds a legend to a plot?",
    "c": null,
    "o": [
      "plt.legend()",
      "plt.label()",
      "plt.show_legend()",
      "plt.add_legend()"
    ]
  },
  {
    "q": "In Seaborn, which function is used to draw a violin plot?",
    "c": null,
    "o": [
      "sns.violinplot()",
      "sns.violingraph()",
      "sns.plotviolin()",
      "sns.vioplot()"
    ]
  },
  {
    "q": "How do you clear the current axes in Matplotlib?",
    "c": null,
    "o": [
      "plt.cla()",
      "plt.clear()",
      "plt.reset()",
      "plt.erase()"
    ]
  },
  {
    "q": "Which of the following is a method to show the plot window?",
    "c": null,
    "o": [
      "plt.show()",
      "plt.run()",
      "plt.open()",
      "plt.plot()"
    ]
  },
  {
    "q": "Which of these will rotate x-axis tick labels?",
    "c": null,
    "o": [
      "plt.xticks(rotation=45)",
      "plt.xrotate(45)",
      "plt.tickx(45)",
      "plt.set_xticks(45)"
    ]
  },
  {
    "q": "Which of the following can be used to display multiple plots in a single figure?",
    "c": null,
    "o": [
      "plt.subplot()",
      "plt.multi()",
      "plt.showmany()",
      "plt.plotgrid()"
    ]
  },
  {
    "q": "How can you change the y-axis limits of a plot?",
    "c": null,
    "o": [
      "plt.ylim()",
      "plt.set_ylim()",
      "plt.axis_y()",
      "plt.range_y()"
    ]
  },
  {
    "q": "What is the use of `plt.xlabel()`?",
    "c": null,
    "o": [
      "Sets the label for the x-axis",
      "Sets title for the chart",
      "Adds a comment on x-axis",
      "Hides the x-axis label"
    ]
  },
  {
    "q": "Which backend allows for interactive plots in Matplotlib on Jupyter Notebook?",
    "c": null,
    "o": [
      "%matplotlib notebook",
      "%matplotlib file",
      "%matplotlib static",
      "%plot interactive"
    ]
  },
  {
    "q": "Which NumPy function is commonly used with Matplotlib for creating ranges?",
    "c": null,
    "o": [
      "np.linspace()",
      "np.range()",
      "np.generate()",
      "np.numbers()"
    ]
  },
  {
    "q": "Which function saves the current figure to a file?",
    "c": null,
    "o": [
      "plt.savefig()",
      "plt.export()",
      "plt.tofile()",
      "plt.imagewrite()"
    ]
  },
  {
    "q": "Which line of code will plot a line graph from a Pandas Series `s`?",
    "c": null,
    "o": [
      "s.plot()",
      "plot(s)",
      "plt.line(s)",
      "pd.draw(s)"
    ]
  },
  {
    "q": "What is the purpose of `plt.ylabel()`?",
    "c": null,
    "o": [
      "Labels the y-axis",
      "Hides the y-axis",
      "Rotates the y-ticks",
      "Sets font for y-axis"
    ]
  },
  {
    "q": "Which of these would result in a scatter plot?",
    "c": null,
    "o": [
      "plt.scatter(x, y)",
      "plt.plot(x, y, type='scatter')",
      "plt.dots(x, y)",
      "plt.points(x, y)"
    ]
  },
  {
    "q": "What is the default behavior of `plt.show()`?",
    "c": null,
    "o": [
      "Displays all current figures",
      "Saves all figures to disk",
      "Closes all figures",
      "Clears the screen"
    ]
  },
  {
    "q": "Which Matplotlib function is used to create a line plot?",
    "c": null,
    "o": [
      "plt.plot()",
      "plt.lineplot()",
      "plt.line()",
      "plt.graph()"
    ]
  },
  {
    "q": "What does the parameter `marker='o'` specify in `plt.plot()`?",
    "c": null,
    "o": [
      "Plot points with circle markers",
      "Plot points with square markers",
      "Use dashed lines",
      "Set line color to orange"
    ]
  },
  {
    "q": "Which method is used to add labels to each bar in a bar chart?",
    "c": null,
    "o": [
      "plt.bar_label()",
      "plt.label_bars()",
      "plt.label()",
      "plt.annotate()"
    ]
  },
  {
    "q": "How do you change the figure size in Matplotlib?",
    "c": null,
    "o": [
      "plt.figure(figsize=(width, height))",
      "plt.set_size(width, height)",
      "plt.size(width, height)",
      "plt.resize(width, height)"
    ]
  },
  {
    "q": "What is the use of `ax.set_title()`?",
    "c": null,
    "o": [
      "Sets the title for a specific subplot",
      "Sets the global figure title",
      "Adds annotation to the plot",
      "Labels the x-axis"
    ]
  },
  {
    "q": "Which function is used to create a histogram?",
    "c": null,
    "o": [
      "plt.hist()",
      "plt.histogram()",
      "plt.bar()",
      "plt.plot()"
    ]
  },
  {
    "q": "How do you display a legend on the plot?",
    "c": null,
    "o": [
      "plt.legend()",
      "plt.show_legend()",
      "plt.add_legend()",
      "plt.label_legend()"
    ]
  },
  {
    "q": "Which parameter in `plt.scatter()` controls the size of points?",
    "c": null,
    "o": [
      "s",
      "size",
      "point_size",
      "marker_size"
    ]
  },
  {
    "q": "What does `plt.subplot(2, 2, 4)` do?",
    "c": null,
    "o": [
      "Selects the 4th subplot in a 2x2 grid",
      "Creates 4 subplots stacked vertically",
      "Creates a 2x4 grid of subplots",
      "Selects the 2nd subplot in 4 rows"
    ]
  },
  {
    "q": "Which function in Pandas is commonly used to plot data with Matplotlib?",
    "c": null,
    "o": [
      "df.plot()",
      "pd.plot()",
      "df.matplotlib()",
      "pd.graph()"
    ]
  },
  {
    "q": "Which function creates a new figure in Matplotlib?",
    "c": null,
    "o": [
      "plt.figure()",
      "plt.new()",
      "plt.create()",
      "plt.window()"
    ]
  },
  {
    "q": "How do you add a grid to a plot?",
    "c": null,
    "o": [
      "plt.grid(True)",
      "plt.add_grid()",
      "plt.show_grid()",
      "plt.grid()"
    ]
  },
  {
    "q": "Which parameter controls the color of a plot line?",
    "c": null,
    "o": [
      "color",
      "col",
      "linecolor",
      "shade"
    ]
  },
  {
    "q": "What is the correct way to import Seaborn?",
    "c": null,
    "o": [
      "import seaborn as sns",
      "import sns",
      "from seaborn import *",
      "import seaborn.pyplot"
    ]
  },
  {
    "q": "Which Matplotlib method adds a legend to the plot?",
    "c": null,
    "o": [
      "plt.legend()",
      "plt.add_legend()",
      "plt.show_legend()",
      "plt.label_legend()"
    ]
  },
  {
    "q": "Which function creates a scatter plot?",
    "c": null,
    "o": [
      "plt.scatter()",
      "plt.plot_scatter()",
      "plt.pointplot()",
      "plt.scatterplot()"
    ]
  },
  {
    "q": "How can you display the plot in a Jupyter notebook?",
    "c": null,
    "o": [
      "%matplotlib inline",
      "%show plot",
      "%matplotlib notebook",
      "%plot inline"
    ]
  },
  {
    "q": "Which method is used to clear the current figure?",
    "c": null,
    "o": [
      "plt.clf()",
      "plt.clear()",
      "plt.reset()",
      "plt.clean()"
    ]
  },
  {
    "q": "What does `plt.xlabel('X Axis')` do?",
    "c": null,
    "o": [
      "Sets the label for the x-axis",
      "Sets the label for the y-axis",
      "Adds a title to the plot",
      "Clears the x-axis"
    ]
  },
  {
    "q": "Which function plots data from a Pandas DataFrame?",
    "c": null,
    "o": [
      "df.plot()",
      "pd.plot()",
      "plt.plot(df)",
      "df.matplotlib()"
    ]
  },
  {
    "q": "Which function in Matplotlib is used to create a histogram?",
    "c": null,
    "o": [
      "plt.hist()",
      "plt.bar()",
      "plt.scatter()",
      "plt.plot()"
    ]
  },
  {
    "q": "How do you change the color of a plot line to green?",
    "c": null,
    "o": [
      "Use color='g' in plot()",
      "Use color='greenline'",
      "Use color='gr'",
      "Use color='gl'"
    ]
  },
  {
    "q": "Which function adds labels to the x-axis?",
    "c": null,
    "o": [
      "plt.xlabel()",
      "plt.labelx()",
      "plt.xaxislabel()",
      "plt.xlab()"
    ]
  },
  {
    "q": "What does the `marker` parameter control in `plt.plot()`?",
    "c": null,
    "o": [
      "The style of the points on the line",
      "The color of the line",
      "The thickness of the line",
      "The background color"
    ]
  },
  {
    "q": "Which Matplotlib function creates a pie chart?",
    "c": null,
    "o": [
      "plt.pie()",
      "plt.piechart()",
      "plt.circleplot()",
      "plt.donut()"
    ]
  },
  {
    "q": "How do you add a legend to a plot?",
    "c": null,
    "o": [
      "plt.legend()",
      "plt.showlegend()",
      "plt.addlegend()",
      "plt.labellegend()"
    ]
  },
  {
    "q": "Which method is used to clear the current axes?",
    "c": null,
    "o": [
      "plt.cla()",
      "plt.clf()",
      "plt.clear()",
      "plt.reset()"
    ]
  },
  {
    "q": "How do you save a figure as a PNG file?",
    "c": null,
    "o": [
      "plt.savefig('filename.png')",
      "plt.save('filename.png')",
      "plt.export('filename.png')",
      "plt.store('filename.png')"
    ]
  },
  {
    "q": "Which Seaborn function is used to create a heatmap?",
    "c": null,
    "o": [
      "sns.heatmap()",
      "sns.corrplot()",
      "sns.colorplot()",
      "sns.matrix()"
    ]
  },
  {
    "q": "Which function is used to show the plot?",
    "c": null,
    "o": [
      "plt.show()",
      "plt.display()",
      "plt.render()",
      "plt.open()"
    ]
  },
  {
    "q": "Which method is used to add a title to a Matplotlib plot?",
    "c": null,
    "o": [
      "plt.title()",
      "plt.set_title()",
      "plt.add_title()",
      "plt.plot_title()"
    ]
  },
  {
    "q": "What parameter is used to change marker style in a plot?",
    "c": null,
    "o": [
      "marker",
      "style",
      "shape",
      "point"
    ]
  },
  {
    "q": "Which function is used to create subplots in Matplotlib?",
    "c": null,
    "o": [
      "plt.subplots()",
      "plt.subplot()",
      "plt.multiplot()",
      "plt.plot_grid()"
    ]
  },
  {
    "q": "How do you add a label to the x-axis?",
    "c": null,
    "o": [
      "plt.xlabel()",
      "plt.labelx()",
      "plt.set_xlabel()",
      "plt.xaxis_label()"
    ]
  },
  {
    "q": "Which method adds annotations to a plot?",
    "c": null,
    "o": [
      "ax.annotate()",
      "plt.annotate()",
      "plt.add_annotation()",
      "plt.text()"
    ]
  },
  {
    "q": "What does `plt.show()` do?",
    "c": null,
    "o": [
      "Displays the plot window",
      "Saves the plot to a file",
      "Clears the plot",
      "Creates a new figure"
    ]
  },
  {
    "q": "Which Matplotlib function plots a bar chart?",
    "c": null,
    "o": [
      "plt.bar()",
      "plt.barchart()",
      "plt.hist()",
      "plt.scatter()"
    ]
  },
  {
    "q": "How do you import Matplotlib’s pyplot module?",
    "c": null,
    "o": [
      "import matplotlib.pyplot as plt",
      "import pyplot as plt",
      "import matplotlib.plot as plt",
      "import matplotlib.plt as plt"
    ]
  },
  {
    "q": "Which library provides statistical plotting functions built on top of Matplotlib?",
    "c": null,
    "o": [
      "Seaborn",
      "Pandas",
      "NumPy",
      "SciPy"
    ]
  },
  {
    "q": "Which function clears the current figure in Matplotlib?",
    "c": null,
    "o": [
      "plt.clf()",
      "plt.cla()",
      "plt.clear()",
      "plt.reset()"
    ]
  },
  {
    "q": "What will the following code display?",
    "c": "import matplotlib.pyplot as plt\nplt.plot([1, 2, 3], [4, 5, 6])\nplt.show()",
    "o": [
      "A line plot connecting points (1,4), (2,5), and (3,6)",
      "A scatter plot of points (1,4), (2,5), and (3,6)",
      "A bar chart with bars at 1, 2, 3",
      "An empty plot"
    ]
  },
  {
    "q": "Which line of code creates a scatter plot with x and y arrays?",
    "c": "import matplotlib.pyplot as plt\nx = [1, 2, 3]\ny = [4, 5, 6]",
    "o": [
      "plt.scatter(x, y)",
      "plt.plot(x, y)",
      "plt.bar(x, y)",
      "plt.hist(x)"
    ]
  },
  {
    "q": "What is the effect of `plt.title('Sales Data')`?",
    "c": null,
    "o": [
      "Sets the title of the plot to 'Sales Data'",
      "Labels the x-axis as 'Sales Data'",
      "Labels the y-axis as 'Sales Data'",
      "Changes the plot background"
    ]
  },
  {
    "q": "What does the following code do?",
    "c": "fig, ax = plt.subplots()\nax.plot([1,2,3],[4,5,6])\nax.set_xlabel('X Axis')\nax.set_ylabel('Y Axis')\nplt.show()",
    "o": [
      "Creates a plot with labeled x and y axes",
      "Creates a histogram",
      "Creates a pie chart",
      "Creates an empty figure"
    ]
  },
  {
    "q": "Which code snippet saves the current figure as 'plot.png'?",
    "c": "import matplotlib.pyplot as plt\nplt.plot([1,2,3],[4,5,6])",
    "o": [
      "plt.savefig('plot.png')",
      "plt.save('plot.png')",
      "plt.export('plot.png')",
      "plt.store('plot.png')"
    ]
  },
  {
    "q": "What marker style does `'o'` represent in `plt.plot(x, y, marker='o')`?",
    "c": null,
    "o": [
      "Circle markers at data points",
      "Square markers",
      "Star markers",
      "No markers"
    ]
  },
  {
    "q": "What will the following code produce?",
    "c": "import matplotlib.pyplot as plt\nplt.bar(['A', 'B', 'C'], [5, 7, 3])\nplt.show()",
    "o": [
      "A bar chart with bars for categories A, B, and C",
      "A line plot connecting points A, B, C",
      "A scatter plot with 3 points",
      "An empty plot"
    ]
  },
  {
    "q": "How do you add a legend to a plot in Matplotlib?",
    "c": null,
    "o": [
      "Call `plt.legend()` after plotting with labels",
      "Call `plt.label()`",
      "Call `plt.add_legend()`",
      "Call `plt.show_legend()`"
    ]
  },
  {
    "q": "What does the parameter `figsize=(8,6)` do in `plt.figure(figsize=(8,6))`?",
    "c": null,
    "o": [
      "Sets the figure size to 8 inches wide and 6 inches tall",
      "Sets the font size",
      "Sets the number of subplots",
      "Sets the plot color"
    ]
  },
  {
    "q": "What is the output of this code?",
    "c": "import matplotlib.pyplot as plt\nplt.hist([1, 1, 2, 3, 3, 3, 4, 5])\nplt.show()",
    "o": [
      "A histogram showing the frequency of numbers in the list",
      "A line plot connecting the numbers",
      "A scatter plot",
      "A pie chart"
    ]
  },
  {
    "q": "What does the following code do?",
    "c": "import matplotlib.pyplot as plt\nplt.scatter([1, 2, 3], [4, 5, 6])\nplt.show()",
    "o": [
      "Creates a scatter plot of points (1,4), (2,5), and (3,6)",
      "Creates a line plot connecting points",
      "Creates a bar chart",
      "Creates an empty figure"
    ]
  },
  {
    "q": "Which parameter controls the color of points in `plt.scatter()`?",
    "c": null,
    "o": [
      "c",
      "color",
      "col",
      "point_color"
    ]
  },
  {
    "q": "What will the following code display?",
    "c": "import matplotlib.pyplot as plt\nplt.plot([1, 2, 3], [3, 2, 1], 'ro-')\nplt.show()",
    "o": [
      "A red line plot with circle markers",
      "A blue scatter plot",
      "A bar chart",
      "A green line plot"
    ]
  },
  {
    "q": "How do you add labels to the x-axis and y-axis?",
    "c": null,
    "o": [
      "plt.xlabel() and plt.ylabel()",
      "plt.labelx() and plt.labely()",
      "plt.setxlabel() and plt.setylabel()",
      "plt.xaxislabel() and plt.yaxislabel()"
    ]
  },
  {
    "q": "What does the `plt.subplot(2, 1, 1)` command do?",
    "c": null,
    "o": [
      "Creates the first subplot in a 2-row, 1-column grid",
      "Creates 2 subplots horizontally",
      "Creates a single plot",
      "Clears the figure"
    ]
  },
  {
    "q": "Which method is used to clear the current axes?",
    "c": null,
    "o": [
      "plt.cla()",
      "plt.clf()",
      "plt.clear()",
      "plt.reset()"
    ]
  },
  {
    "q": "What will this code do?",
    "c": "import matplotlib.pyplot as plt\nplt.pie([10, 20, 30], labels=['A', 'B', 'C'])\nplt.show()",
    "o": [
      "Displays a pie chart with 3 slices labeled A, B, and C",
      "Displays a bar chart",
      "Creates a line plot",
      "Creates a histogram"
    ]
  },
  {
    "q": "How can you save the current plot to a file named 'graph.png'?",
    "c": null,
    "o": [
      "plt.savefig('graph.png')",
      "plt.save('graph.png')",
      "plt.export('graph.png')",
      "plt.write('graph.png')"
    ]
  },
  {
    "q": "Which of the following imports Matplotlib’s pyplot module with the common alias?",
    "c": null,
    "o": [
      "import matplotlib.pyplot as plt",
      "import matplotlib.plot as plt",
      "import matplotlib.plt as plt",
      "import pyplot as plt"
    ]
  },
  {
    "q": "What does the code `plt.legend()` do after plotting?",
    "c": null,
    "o": [
      "Displays a legend with labels for plotted elements",
      "Shows the plot window",
      "Clears the figure",
      "Adds a title"
    ]
  },
  {
    "q": "What does the following code produce?",
    "c": "import matplotlib.pyplot as plt\nplt.bar(['x', 'y', 'z'], [5, 7, 3])\nplt.show()",
    "o": [
      "A bar chart with categories x, y, and z",
      "A scatter plot",
      "A line plot",
      "A histogram"
    ]
  },
  {
    "q": "Which function is used to create a histogram of data?",
    "c": null,
    "o": [
      "plt.hist()",
      "plt.bar()",
      "plt.scatter()",
      "plt.plot()"
    ]
  },
  {
    "q": "What does this code snippet do?",
    "c": "import matplotlib.pyplot as plt\nplt.plot([1, 2, 3], [3, 2, 1], 'g--')\nplt.show()",
    "o": [
      "Plots a green dashed line",
      "Plots a blue solid line",
      "Plots a red dotted line",
      "Plots green dots"
    ]
  },
  {
    "q": "How do you display a legend on a Matplotlib plot?",
    "c": null,
    "o": [
      "plt.legend()",
      "plt.show_legend()",
      "plt.add_legend()",
      "plt.label_legend()"
    ]
  },
  {
    "q": "What parameter changes the size of markers in a scatter plot?",
    "c": null,
    "o": [
      "s",
      "size",
      "marker_size",
      "ms"
    ]
  },
  {
    "q": "What is the output of this code?",
    "c": "import matplotlib.pyplot as plt\nplt.subplot(2,2,3)\nplt.plot([1,2,3],[4,5,6])\nplt.show()",
    "o": [
      "Plots a line on the third subplot of a 2x2 grid",
      "Plots a line on a new figure",
      "Raises an error",
      "Plots on the first subplot"
    ]
  },
  {
    "q": "Which of these commands turns on grid lines in a plot?",
    "c": null,
    "o": [
      "plt.grid(True)",
      "plt.show_grid()",
      "plt.enable_grid()",
      "plt.set_grid(True)"
    ]
  },
  {
    "q": "How do you change the label of the y-axis?",
    "c": null,
    "o": [
      "plt.ylabel('label')",
      "plt.set_ylabel('label')",
      "plt.yaxis_label('label')",
      "plt.label_y('label')"
    ]
  },
  {
    "q": "Which of the following imports Seaborn with its common alias?",
    "c": null,
    "o": [
      "import seaborn as sns",
      "import seaborn.pyplot as sns",
      "import sns",
      "import seaborn"
    ]
  },
  {
    "q": "What will this code do?",
    "c": "import matplotlib.pyplot as plt\nplt.hist([1,1,2,3,3,3,4])\nplt.show()",
    "o": [
      "Displays a histogram of the data frequencies",
      "Creates a scatter plot",
      "Creates a pie chart",
      "Plots a line graph"
    ]
  },
  {
    "q": "What will the following code output?",
    "c": "import matplotlib.pyplot as plt\nplt.plot([1, 2, 3], [3, 2, 1], marker='x')\nplt.show()",
    "o": [
      "A line plot with 'x' markers at the points",
      "A scatter plot with circle markers",
      "A bar chart",
      "An empty plot"
    ]
  },
  {
    "q": "Which command creates a figure of size 10x5 inches?",
    "c": null,
    "o": [
      "plt.figure(figsize=(10, 5))",
      "plt.set_size(10, 5)",
      "plt.resize(10, 5)",
      "plt.create_figure(10, 5)"
    ]
  },
  {
    "q": "What does `plt.xlabel('Time')` do?",
    "c": null,
    "o": [
      "Sets the label of the x-axis to 'Time'",
      "Sets the label of the y-axis to 'Time'",
      "Adds a title named 'Time'",
      "Clears the x-axis label"
    ]
  },
  {
    "q": "What kind of plot does `plt.hist()` create?",
    "c": null,
    "o": [
      "Histogram",
      "Bar plot",
      "Scatter plot",
      "Pie chart"
    ]
  },
  {
    "q": "What will this code do?",
    "c": "import matplotlib.pyplot as plt\nplt.bar(['A', 'B'], [10, 20])\nplt.show()",
    "o": [
      "Creates a bar chart with categories A and B",
      "Creates a pie chart",
      "Creates a line plot",
      "Creates a scatter plot"
    ]
  },
  {
    "q": "Which function is used to add a legend to the plot?",
    "c": null,
    "o": [
      "plt.legend()",
      "plt.add_legend()",
      "plt.show_legend()",
      "plt.label_legend()"
    ]
  },
  {
    "q": "What does the 'color' parameter control in `plt.plot()`?",
    "c": null,
    "o": [
      "Line or marker color",
      "Line thickness",
      "Marker shape",
      "Plot size"
    ]
  },
  {
    "q": "How do you import Matplotlib’s pyplot module with the alias plt?",
    "c": null,
    "o": [
      "import matplotlib.pyplot as plt",
      "import matplotlib.plt as plt",
      "import pyplot as plt",
      "import matplotlib as plt"
    ]
  },
  {
    "q": "Which command clears the current figure?",
    "c": null,
    "o": [
      "plt.clf()",
      "plt.cla()",
      "plt.clear()",
      "plt.reset()"
    ]
  },
  {
    "q": "What will this code do?",
    "c": "import matplotlib.pyplot as plt\nplt.pie([30, 70], labels=['A', 'B'])\nplt.show()",
    "o": [
      "Displays a pie chart with two slices labeled A and B",
      "Creates a bar chart",
      "Creates a line plot",
      "Creates a histogram"
    ]
  },
  {
    "q": "What does the following code do?",
    "c": "import matplotlib.pyplot as plt\nplt.plot([10, 20, 30], [1, 4, 9])\nplt.show()",
    "o": [
      "Plots a line connecting points (10,1), (20,4), and (30,9)",
      "Plots a scatter plot",
      "Creates a bar chart",
      "Creates an empty figure"
    ]
  },
  {
    "q": "How do you change the x-axis label of a plot?",
    "c": null,
    "o": [
      "plt.xlabel('Label')",
      "plt.xaxis('Label')",
      "plt.set_xlabel('Label')",
      "plt.label_x('Label')"
    ]
  },
  {
    "q": "Which of these functions creates a scatter plot?",
    "c": null,
    "o": [
      "plt.scatter()",
      "plt.plot()",
      "plt.bar()",
      "plt.hist()"
    ]
  },
  {
    "q": "What is the use of `plt.show()`?",
    "c": null,
    "o": [
      "Displays the current figure",
      "Saves the figure to a file",
      "Clears the figure",
      "Creates a new figure"
    ]
  },
  {
    "q": "How do you set the size of a figure in inches?",
    "c": null,
    "o": [
      "plt.figure(figsize=(width, height))",
      "plt.set_size(width, height)",
      "plt.resize(width, height)",
      "plt.figsize(width, height)"
    ]
  },
  {
    "q": "What does `plt.bar(['A', 'B'], [5, 10])` do?",
    "c": null,
    "o": [
      "Creates a bar chart with two bars labeled A and B",
      "Creates a pie chart",
      "Creates a line plot",
      "Creates a histogram"
    ]
  },
  {
    "q": "Which parameter changes the color of lines or markers in a plot?",
    "c": null,
    "o": [
      "color",
      "size",
      "style",
      "marker"
    ]
  },
  {
    "q": "What does this code produce?",
    "c": "import matplotlib.pyplot as plt\nplt.hist([1,2,2,3,3,3,4,4,4,4])\nplt.show()",
    "o": [
      "A histogram showing frequency of numbers",
      "A bar chart",
      "A line plot",
      "A scatter plot"
    ]
  },
  {
    "q": "How do you add a title to a plot?",
    "c": null,
    "o": [
      "plt.title('My Title')",
      "plt.set_title('My Title')",
      "plt.add_title('My Title')",
      "plt.plot_title('My Title')"
    ]
  },
  {
    "q": "What is the function to clear the current axes in Matplotlib?",
    "c": null,
    "o": [
      "plt.cla()",
      "plt.clf()",
      "plt.clear()",
      "plt.reset()"
    ]
  },
  {
    "q": "What does this code do?",
    "c": "import matplotlib.pyplot as plt\nplt.plot([0, 1, 2], [0, 1, 4], linestyle='--')\nplt.show()",
    "o": [
      "Plots a dashed line connecting points (0,0), (1,1), and (2,4)",
      "Plots a solid line",
      "Plots points with circles",
      "Creates a bar chart"
    ]
  },
  {
    "q": "How do you display multiple plots in one figure?",
    "c": null,
    "o": [
      "Using plt.subplot()",
      "Using plt.multiplot()",
      "Using plt.figure()",
      "Using plt.plot_multiple()"
    ]
  },
  {
    "q": "What does this code display?",
    "c": "import matplotlib.pyplot as plt\nplt.pie([25, 35, 40], labels=['A', 'B', 'C'])\nplt.show()",
    "o": [
      "A pie chart with three slices labeled A, B, and C",
      "A bar chart",
      "A scatter plot",
      "A line plot"
    ]
  },
  {
    "q": "Which parameter changes the marker size in a scatter plot?",
    "c": null,
    "o": [
      "s",
      "size",
      "marker_size",
      "m_size"
    ]
  },
  {
    "q": "What does plt.savefig('output.png') do?",
    "c": null,
    "o": [
      "Saves the current figure to a file named 'output.png'",
      "Displays the figure",
      "Clears the figure",
      "Creates a new figure"
    ]
  },
  {
    "q": "How do you add grid lines to a plot?",
    "c": null,
    "o": [
      "plt.grid(True)",
      "plt.show_grid()",
      "plt.add_grid()",
      "plt.grid()"
    ]
  },
  {
    "q": "What will the following code produce?",
    "c": "import matplotlib.pyplot as plt\nplt.scatter([1, 2, 3], [4, 5, 6], c='red')\nplt.show()",
    "o": [
      "A scatter plot with red points",
      "A line plot",
      "A bar chart",
      "A histogram"
    ]
  },
  {
    "q": "What is the purpose of plt.xlabel('Time')?",
    "c": null,
    "o": [
      "Sets the label of the x-axis to 'Time'",
      "Sets the label of the y-axis to 'Time'",
      "Adds a title",
      "Clears the x-axis label"
    ]
  },
  {
    "q": "Which of the following imports Seaborn with the alias sns?",
    "c": null,
    "o": [
      "import seaborn as sns",
      "import sns",
      "import seaborn.pyplot as sns",
      "import seaborn"
    ]
  },
  {
    "q": "How do you clear the current figure in Matplotlib?",
    "c": null,
    "o": [
      "plt.clf()",
      "plt.cla()",
      "plt.clear()",
      "plt.reset()"
    ]
  },
  {
    "q": "Which method is used to create a 3D scatter plot in Matplotlib?",
    "c": null,
    "o": [
      "ax.scatter(xs, ys, zs)",
      "plt.scatter3D(x, y, z)",
      "plt.plot3D(x, y, z)",
      "plt.scatter(x, y, z)"
    ]
  },
  {
    "q": "What does the following code do?",
    "c": "fig, ax = plt.subplots(2, 2, sharex='col', sharey='row')",
    "o": [
      "Creates a 2x2 grid of subplots sharing x-axis per column and y-axis per row",
      "Creates 2x2 subplots with independent axes",
      "Creates a single subplot with shared axes",
      "Creates subplots sharing x and y axes across all plots"
    ]
  },
  {
    "q": "In a pie chart, which parameter prevents a slice from being displayed as a full circle when sum of values < 1?",
    "c": null,
    "o": [
      "normalize=True",
      "autopct=False",
      "startangle=90",
      "shadow=True"
    ]
  },
  {
    "q": "Which of the following is the correct way to annotate a point (3,5) with label 'Peak'?",
    "c": null,
    "o": [
      "plt.annotate('Peak', xy=(3, 5), xytext=(4, 6), arrowprops=dict(arrowstyle='->'))",
      "plt.label('Peak', at=(3,5), offset=(1,1))",
      "plt.annotate('Peak', (3,5), offset=(1,1))",
      "plt.comment('Peak', location=(3,5), textoffset=(1,1))"
    ]
  },
  {
    "q": "How can you add a secondary y-axis to a plot using Matplotlib's object-oriented API?",
    "c": null,
    "o": [
      "ax2 = ax.twinx()",
      "ax.add_secondary_y()",
      "plt.new_y_axis(ax)",
      "ax.yaxis.secondary()"
    ]
  },
  {
    "q": "Which parameter in `bar()` function sets the color of each individual bar in a bar chart?",
    "c": null,
    "o": [
      "color",
      "bar_color",
      "facecolor",
      "cmap"
    ]
  },
  {
    "q": "Given the DataFrame `df`, which line plots the column 'sales' against index using Pandas with Matplotlib backend?",
    "c": null,
    "o": [
      "df['sales'].plot(kind='line')",
      "plt.plot(df['sales'])",
      "df.plot('sales')",
      "df['sales'].lineplot()"
    ]
  },
  {
    "q": "What will the following code produce?",
    "c": "fig = plt.figure()\nax = fig.add_subplot(111, projection='3d')\nax.plot_surface(X, Y, Z, cmap='viridis')",
    "o": [
      "A 3D surface plot using viridis colormap",
      "A 2D surface heatmap",
      "A wireframe plot",
      "An error due to 2D projection"
    ]
  },
  {
    "q": "How can you enable interactive features like zooming and panning in Jupyter Notebooks?",
    "c": null,
    "o": [
      "%matplotlib notebook",
      "%matplotlib interactive",
      "%matplotlib inline",
      "plt.enable_interaction()"
    ]
  },
  {
    "q": "Which of the following is TRUE when using Seaborn with Matplotlib?",
    "c": null,
    "o": [
      "Seaborn sets default styles and can call Matplotlib functions",
      "Seaborn replaces Matplotlib and cannot use its functions",
      "Seaborn only supports line and bar plots",
      "Seaborn plots are incompatible with Pandas DataFrames"
    ]
  },
  {
    "q": "Which of the following correctly adjusts subplot spacing to prevent overlap of axis labels?",
    "c": null,
    "o": [
      "plt.tight_layout()",
      "plt.subplots_adjust_labels()",
      "fig.adjust_layout()",
      "plt.remove_overlap()"
    ]
  },
  {
    "q": "What is the correct way to display a histogram with cumulative frequency using Matplotlib?",
    "c": null,
    "o": [
      "plt.hist(data, cumulative=True)",
      "plt.histogram(data, cumulative=True)",
      "plt.plot_hist(data, cumulate=True)",
      "plt.cumhist(data)"
    ]
  },
  {
    "q": "When creating a scatter plot with color representing a third variable, which parameter is used?",
    "c": null,
    "o": [
      "c",
      "colorbar",
      "colormap",
      "shade"
    ]
  },
  {
    "q": "Which Matplotlib function allows you to save the current figure to a file?",
    "c": null,
    "o": [
      "plt.savefig('filename.png')",
      "plt.export('filename.png')",
      "fig.export_image('filename.png')",
      "save_plot('filename.png')"
    ]
  },
  {
    "q": "Which method is used to add gridlines to a plot in Matplotlib?",
    "c": null,
    "o": [
      "plt.grid(True)",
      "plt.add_grid()",
      "plt.show_grid()",
      "ax.set_grid(True)"
    ]
  },
  {
    "q": "What does `ax.set_xticks([0, 2, 4])` do in a Matplotlib plot?",
    "c": null,
    "o": [
      "Sets the locations of x-axis ticks to 0, 2, and 4",
      "Sets the labels of the x-axis to '0', '2', '4'",
      "Removes all other ticks except at 0, 2, and 4",
      "Shifts x-axis data points to positions 0, 2, and 4"
    ]
  },
  {
    "q": "How do you create a shared colorbar across multiple subplots showing images?",
    "c": null,
    "o": [
      "Use `fig.colorbar(im, ax=axes, orientation='horizontal')`",
      "Use `plt.colorbar(im, share=True)`",
      "Call `plt.shared_colorbar(im, ax=axes)`",
      "Use `ax.colorbar()` inside each subplot"
    ]
  },
  {
    "q": "Which of the following will plot Pandas DataFrame columns 'A' vs 'B' as a scatter plot?",
    "c": null,
    "o": [
      "df.plot.scatter(x='A', y='B')",
      "df.scatter(x='A', y='B')",
      "plt.scatter(df['A'], df['B'])",
      "df.plot(x='A', y='B', kind='points')"
    ]
  },
  {
    "q": "In the object-oriented Matplotlib API, how do you set the title of a subplot?",
    "c": null,
    "o": [
      "ax.set_title('My Plot')",
      "plt.title(ax, 'My Plot')",
      "fig.title('My Plot')",
      "ax.add_title('My Plot')"
    ]
  },
  {
    "q": "How can you ensure a pie chart starts at the top and is drawn clockwise?",
    "c": null,
    "o": [
      "plt.pie(data, startangle=90, counterclock=False)",
      "plt.pie(data, angle=0, clockwise=True)",
      "plt.pie(data, begin=90, reverse=False)",
      "plt.pie(data, rotate=90, clockwise=True)"
    ]
  },
  {
    "q": "Which method allows dynamic updating of a plot within a loop?",
    "c": null,
    "o": [
      "plt.draw() followed by plt.pause()",
      "plt.show(block=False)",
      "plt.flush_events() only",
      "plt.replot() in every iteration"
    ]
  },
  {
    "q": "What is the effect of setting `zorder` in plot functions?",
    "c": null,
    "o": [
      "It controls the drawing order of elements",
      "It zooms the plot to the specified order",
      "It randomizes axis labels",
      "It sets the priority of axis ticks"
    ]
  },
  {
    "q": "How do you turn off the top and right spines of a plot?",
    "c": null,
    "o": [
      "ax.spines['top'].set_visible(False); ax.spines['right'].set_visible(False)",
      "plt.remove_spines(['top', 'right'])",
      "ax.hide_spines(['top', 'right'])",
      "plt.spines_off(top=True, right=True)"
    ]
  },
  {
    "q": "What does the `sharex=True` argument do in `plt.subplots()`?",
    "c": null,
    "o": [
      "All subplots share the same x-axis scale and ticks",
      "It synchronizes zooming between x and y axes",
      "It creates a linked x and y axis grid",
      "It prevents the x-axis from being shown"
    ]
  },
  {
    "q": "Which Matplotlib toolkit enables more advanced widgets and interactions within GUIs?",
    "c": null,
    "o": [
      "matplotlib.widgets",
      "matplotlib.ui",
      "mpl.interact",
      "matplotlib.gui_core"
    ]
  },
  {
    "q": "How would you apply a log scale to the x-axis using the object-oriented API?",
    "c": null,
    "o": [
      "ax.set_xscale('log')",
      "plt.set_scale(ax, x='log')",
      "ax.xlog(True)",
      "ax.scale(x='log')"
    ]
  },
  {
    "q": "Which parameter in `plt.hist()` controls the number of bins?",
    "c": null,
    "o": [
      "bins",
      "segments",
      "blocks",
      "steps"
    ]
  },
  {
    "q": "What does the `marker` argument do in plot functions?",
    "c": null,
    "o": [
      "Defines the style of individual data points",
      "Sets the grid line marker symbols",
      "Specifies the font used for ticks",
      "Adds a title to each axis point"
    ]
  },
  {
    "q": "How do you create a seaborn-style aesthetic using Matplotlib?",
    "c": null,
    "o": [
      "plt.style.use('seaborn')",
      "plt.theme('seaborn')",
      "sns.as_matplotlib_style()",
      "matplotlib.style.theme('seaborn')"
    ]
  },
  {
    "q": "Which of the following allows embedding interactive Matplotlib plots in a PyQt5 GUI?",
    "c": null,
    "o": [
      "FigureCanvasQTAgg",
      "InteractiveFigureWidget",
      "QtPlotWrapper",
      "AggPyCanvas"
    ]
  },
  {
    "q": "What is the result of setting `label=''` in a plot call followed by `plt.legend()`?",
    "c": null,
    "o": [
      "The legend will ignore that plot line",
      "The legend will show an empty entry",
      "It raises a ValueError",
      "The legend displays 'None' as label"
    ]
  },
  {
    "q": "Which Matplotlib component handles coordinate transformations (data to display)?",
    "c": null,
    "o": [
      "Transform objects",
      "Axes manager",
      "Canvas handler",
      "Renderer core"
    ]
  },
  {
    "q": "What is the effect of `plt.rcParams['axes.prop_cycle']`?",
    "c": null,
    "o": [
      "It sets the default color and style cycle for plots",
      "It resets axis limits after every plot",
      "It defines grid spacing on both axes",
      "It determines subplot layout spacing"
    ]
  },
  {
    "q": "How do you render LaTeX-style math text in Matplotlib plots?",
    "c": null,
    "o": [
      "Wrap the text with `$...$`",
      "Set `mathmode=True`",
      "Use `latex_mode(text)`",
      "Enable `plt.use_tex()`"
    ]
  },
  {
    "q": "Which is true about `fig.add_axes([0.1, 0.1, 0.8, 0.8])`?",
    "c": null,
    "o": [
      "Adds axes at a manual position defined in figure coordinates",
      "Adds a new subplot in automatic grid",
      "Adds axes using pixel coordinates",
      "Adds axes aligned to default subplot layout"
    ]
  },
  {
    "q": "What happens if `plt.show()` is called twice in a script?",
    "c": null,
    "o": [
      "The second call usually has no visible effect",
      "It restarts the plot from scratch",
      "It throws a runtime error",
      "It saves the previous figure and starts a new one"
    ]
  },
  {
    "q": "Which of the following would most likely be used to embed a plot in a web application?",
    "c": null,
    "o": [
      "FigureCanvasAgg with Flask or Django",
      "Qt5Agg backend",
      "nbAgg backend",
      "TkAgg with CGI scripts"
    ]
  },
  {
    "q": "How do you invert the y-axis in a plot?",
    "c": null,
    "o": [
      "ax.invert_yaxis()",
      "plt.reverse_y()",
      "ax.set_yorder('reverse')",
      "plt.yaxis(reverse=True)"
    ]
  },
  {
    "q": "Which function converts a Matplotlib figure into a NumPy array image?",
    "c": null,
    "o": [
      "fig.canvas.tostring_rgb() and np.frombuffer()",
      "plt.to_array()",
      "canvas2array(fig)",
      "ax.render_to_numpy()"
    ]
  },
  {
    "q": "Which backend allows saving plots in SVG format without displaying them?",
    "c": null,
    "o": [
      "Agg",
      "TkAgg",
      "Qt5Agg",
      "WebAgg"
    ]
  },
  {
    "q": "Which property must be set to `True` to enable picking (mouse click detection) on plot elements?",
    "c": null,
    "o": [
      "picker=True",
      "pickable=True",
      "on_click=True",
      "event_pick=True"
    ]
  },
  {
    "q": "Which function is used to display a matrix as an image in Matplotlib?",
    "c": null,
    "o": [
      "plt.imshow()",
      "plt.matshow()",
      "plt.plotmatrix()",
      "plt.gridimage()"
    ]
  },
  {
    "q": "What is the purpose of `Line2D` in Matplotlib?",
    "c": null,
    "o": [
      "It represents a line artist that can be added to an Axes",
      "It defines linear axes transformation",
      "It styles the plot background",
      "It is used for drawing 2D bar charts"
    ]
  },
  {
    "q": "In which scenario would you most likely use `axhline()`?",
    "c": null,
    "o": [
      "To draw a horizontal reference line across the axes",
      "To highlight a histogram bin",
      "To set the horizontal axis label",
      "To annotate a heatmap row"
    ]
  },
  {
    "q": "Which of the following plot types is best suited for visualizing the distribution of data over categories?",
    "c": null,
    "o": [
      "Box plot",
      "Scatter plot",
      "Line plot",
      "3D surface plot"
    ]
  },
  {
    "q": "What does `ax.set_aspect('equal')` achieve?",
    "c": null,
    "o": [
      "It ensures both axes have the same scaling",
      "It centers the plot around the origin",
      "It equalizes tick label size",
      "It ensures axes have equal tick frequency"
    ]
  },
  {
    "q": "Which is the best way to plot multiple lines with different styles using a loop?",
    "c": null,
    "o": [
      "Iterate with `ax.plot(x, y, style)` using a predefined style list",
      "Call `plt.multi_line()` with style tuples",
      "Use `plt.plot(x_list, y_list, styles)`",
      "Append styles using `ax.add_style()`"
    ]
  },
  {
    "q": "Which command is used to rotate x-tick labels by 90 degrees?",
    "c": null,
    "o": [
      "plt.xticks(rotation=90)",
      "ax.xaxis.rotate(90)",
      "ax.set_xticklabels(rotation=90)",
      "plt.set_rotation('x', 90)"
    ]
  },
  {
    "q": "How do you avoid overlapping labels in a pie chart with small slices?",
    "c": null,
    "o": [
      "Use `autopct` and `labeldistance` adjustments",
      "Increase pie radius",
      "Disable legend and labels",
      "Use a bar chart instead"
    ]
  },
  {
    "q": "Which method would you use to programmatically change tick frequency on the y-axis?",
    "c": null,
    "o": [
      "ax.yaxis.set_major_locator(MultipleLocator(value))",
      "ax.set_ytick_frequency(value)",
      "plt.adjust_ticks(y=value)",
      "ax.set_ticks('y', step=value)"
    ]
  },
  {
    "q": "What is the role of the `PathPatch` object in Matplotlib?",
    "c": null,
    "o": [
      "It allows custom geometric shapes to be added to plots",
      "It defines color gradient along the line",
      "It handles patch interpolation for 3D meshes",
      "It creates path animations over time"
    ]
  },
  {
    "q": "What does setting `clip_on=False` do when plotting elements in Matplotlib?",
    "c": null,
    "o": [
      "Allows plot elements to extend beyond the axes boundary",
      "Clips the plot inside the figure window",
      "Forces labels to wrap inside the plot",
      "Enables auto-zooming on plot interaction"
    ]
  },
  {
    "q": "How do you prevent duplicate labels in a legend when plotting in a loop?",
    "c": null,
    "o": [
      "Use `dict.fromkeys()` or a set to filter unique labels before calling `legend()`",
      "Call `plt.legend(unique=True)`",
      "Set `ax.legend(distinct=True)`",
      "Use `plt.filter_duplicate_labels()`"
    ]
  },
  {
    "q": "What is the effect of `plt.xscale('log')` on a plot?",
    "c": null,
    "o": [
      "It transforms the x-axis to logarithmic scale",
      "It logs x-values before plotting",
      "It compresses the data points into a bar chart",
      "It plots only positive x-values"
    ]
  },
  {
    "q": "How can you modify the resolution (DPI) of a saved figure?",
    "c": null,
    "o": [
      "Use `plt.savefig('plot.png', dpi=300)`",
      "Set `plt.dpi = 300` before saving",
      "Use `fig.set_dpi(300)` and call `fig.save()`",
      "Set `figsize=(dpi=300)` in `plt.figure()`"
    ]
  },
  {
    "q": "Which object in Matplotlib is responsible for handling events like clicks and key presses?",
    "c": null,
    "o": [
      "Canvas",
      "FigureManager",
      "Toolbar",
      "LegendHandler"
    ]
  },
  {
    "q": "Which of the following helps in modifying the tick labels using a custom function?",
    "c": null,
    "o": [
      "ax.set_yticklabels([formatter(y) for y in ax.get_yticks()])",
      "plt.update_ticks_with(formatter)",
      "ax.label_format(callback=formatter)",
      "plt.xticklabel_format(custom=formatter)"
    ]
  },
  {
    "q": "What is the function of `ax.figure.canvas.draw_idle()` in interactive updates?",
    "c": null,
    "o": [
      "It schedules a figure redraw without immediate execution",
      "It immediately renders the updated plot",
      "It clears the figure canvas",
      "It disables future redraw calls"
    ]
  },
  {
    "q": "Which type of artist is returned by `ax.bar()`?",
    "c": null,
    "o": [
      "BarContainer",
      "PatchList",
      "RectangleArtist",
      "PolygonSeries"
    ]
  },
  {
    "q": "What does the parameter `rstride` control in `plot_surface()` for 3D plots?",
    "c": null,
    "o": [
      "The row stride (step) for drawing grid lines on surface",
      "Rotation speed of the surface",
      "Radius for circular 3D projections",
      "Resolution of the surface color gradient"
    ]
  },
  {
    "q": "What is the effect of calling `plt.cla()` in a script?",
    "c": null,
    "o": [
      "Clears the current axes without closing the figure",
      "Closes the active figure window",
      "Clears all variables in current plot scope",
      "Adds a blank canvas to the figure"
    ]
  },
  {
    "q": "Which method would you use to render a filled contour plot?",
    "c": null,
    "o": [
      "plt.contourf(X, Y, Z)",
      "plt.contourfill(X, Y, Z)",
      "ax.fill_contours(X, Y, Z)",
      "plt.density_plot(X, Y, Z)"
    ]
  },
  {
    "q": "What does setting `frameon=False` do in `plt.legend()`?",
    "c": null,
    "o": [
      "Removes the surrounding box of the legend",
      "Disables shadow in the legend",
      "Hides legend labels",
      "Disables interaction with the legend"
    ]
  },
  {
    "q": "What’s the purpose of `set_clip_path()` when used on a Matplotlib artist?",
    "c": null,
    "o": [
      "It restricts rendering of the artist to a specific shape",
      "It crops the artist to fit the axis limits",
      "It draws a shape around a plot line",
      "It sets transparency clipping for colorbars"
    ]
  },
  {
    "q": "Which property defines whether an artist is visible in a figure?",
    "c": null,
    "o": [
      "set_visible(True/False)",
      "set_displayed(True/False)",
      "show_on_plot(True/False)",
      "render_mode='on'/'off'"
    ]
  },
  {
    "q": "What does `plt.eventplot()` visualize?",
    "c": null,
    "o": [
      "Event sequences or timestamps as line markers",
      "Event listeners on GUI elements",
      "Interactive plot click events",
      "Timing of subplot redraws"
    ]
  },
  {
    "q": "Which function is used to draw a horizontal bar chart?",
    "c": null,
    "o": [
      "plt.barh(y, width)",
      "plt.bar_horizontal(y, width)",
      "plt.hbar(y, width)",
      "plt.plot_bar(y, width, orientation='horizontal')"
    ]
  },
  {
    "q": "Which keyword argument lets you assign a specific figure to an `Axes` object when creating it?",
    "c": null,
    "o": [
      "figure",
      "parent",
      "container",
      "fig_ref"
    ]
  },
  {
    "q": "Which argument in `imshow()` sets the origin of the axes to the top-left corner?",
    "c": null,
    "o": [
      "origin='upper'",
      "topdown=True",
      "ax.set_origin('top')",
      "start_corner='top-left'"
    ]
  },
  {
    "q": "Which parameter in `plt.subplots()` allows you to return a flattened 1D array of axes?",
    "c": null,
    "o": [
      "flatten=True",
      "squeeze=False",
      "as_array=True",
      "ravel_axes=True"
    ]
  },
  {
    "q": "How can you force a redraw of a figure in interactive mode after modifying an artist?",
    "c": null,
    "o": [
      "fig.canvas.draw()",
      "plt.redraw()",
      "ax.render_now()",
      "plt.replot(force=True)"
    ]
  },
  {
    "q": "What is the role of `ScalarMappable` in Matplotlib?",
    "c": null,
    "o": [
      "It connects data values to colormaps for colorbars",
      "It handles tick label formatting",
      "It transforms scalar data to polar plots",
      "It maps plot elements to axes coordinates"
    ]
  },
  {
    "q": "What happens if you try to add a legend without labels in a plot?",
    "c": null,
    "o": [
      "The legend will be empty or skipped entirely",
      "It shows default labels like Line1, Line2",
      "It causes an exception",
      "It displays a blank legend with border"
    ]
  },
  {
    "q": "Which module contains `MultipleLocator`, `AutoLocator`, and similar utilities?",
    "c": null,
    "o": [
      "matplotlib.ticker",
      "matplotlib.axis_utils",
      "matplotlib.axis_styles",
      "matplotlib.tools.locators"
    ]
  },
  {
    "q": "Which argument in `ax.text()` allows rotation of the text?",
    "c": null,
    "o": [
      "rotation",
      "angle",
      "transform",
      "orientation"
    ]
  },
  {
    "q": "What does the `transform=ax.transAxes` argument do when used in `ax.text()`?",
    "c": null,
    "o": [
      "Places the text using Axes-relative coordinates (0 to 1)",
      "Applies a rotation transformation to the text",
      "Moves text outside the axes limits",
      "Sets the coordinate system to figure pixels"
    ]
  },
  {
    "q": "What does `ax.get_lines()` return?",
    "c": null,
    "o": [
      "A list of all Line2D objects in the axes",
      "All artists including bars, texts, and lines",
      "Only the labels of line plots",
      "A generator of drawing commands for the figure"
    ]
  },
  {
    "q": "What does `ax.set_facecolor('black')` do?",
    "c": null,
    "o": [
      "Sets the background color of the plotting area to black",
      "Changes the canvas color to black",
      "Changes line colors to black",
      "Changes text color to black"
    ]
  },
  {
    "q": "What is the result of calling `fig.delaxes(ax)`?",
    "c": null,
    "o": [
      "Removes the specified Axes object from the figure",
      "Deletes all plots from the axes",
      "Deletes the figure containing the axes",
      "Disables interactivity for that axes"
    ]
  },
  {
    "q": "What does `blit=True` do when used with `FuncAnimation`?",
    "c": null,
    "o": [
      "Optimizes redrawing by only updating changed parts of the figure",
      "Combines all frames into a single static image",
      "Adds blending effects between frames",
      "Caches the animation as a GIF file"
    ]
  },
  {
    "q": "Which function adds a colorbar next to a plot generated with `imshow()`?",
    "c": null,
    "o": [
      "plt.colorbar()",
      "plt.colormap()",
      "ax.add_colorbar()",
      "plt.legend(cmap=True)"
    ]
  },
  {
    "q": "What does setting `alpha=0.5` do in a plot function?",
    "c": null,
    "o": [
      "Sets the transparency of the plot element to 50%",
      "Applies 50% blur to the background",
      "Defines the resolution scale of the image",
      "Controls the color intensity of the plot"
    ]
  },
  {
    "q": "Which Matplotlib backend is commonly used for rendering in headless (non-GUI) environments?",
    "c": null,
    "o": [
      "Agg",
      "TkAgg",
      "QtAgg",
      "GTK3Agg"
    ]
  },
  {
    "q": "What does `plt.rcParams['axes.titlesize'] = 'large'` affect?",
    "c": null,
    "o": [
      "Sets the default title font size for all axes",
      "Sets the size of axis labels",
      "Adjusts tick label spacing",
      "Resizes all text inside legends"
    ]
  },
  {
    "q": "Which command is used to draw a filled polygon in Matplotlib?",
    "c": null,
    "o": [
      "plt.fill(x, y)",
      "plt.patch(x, y)",
      "plt.polygon(x, y)",
      "plt.area(x, y)"
    ]
  },
  {
    "q": "What is the result of calling `fig.set_size_inches(8, 6)`?",
    "c": null,
    "o": [
      "Sets the figure size to 8 inches wide and 6 inches tall",
      "Sets DPI to 8×6",
      "Sets axis scaling based on inches",
      "Defines margins between subplots"
    ]
  },
  {
    "q": "How can you embed an image inside a Matplotlib plot?",
    "c": null,
    "o": [
      "Use `ax.imshow(img_array)`",
      "Use `plt.plot_image(img_path)`",
      "Use `ax.set_background(img)`",
      "Use `plt.insert_image(img_array)`"
    ]
  },
  {
    "q": "What does `plt.gca()` return?",
    "c": null,
    "o": [
      "The current active Axes object",
      "The canvas manager object",
      "A new set of axis ticks",
      "The global chart attributes"
    ]
  },
  {
    "q": "Which method disables autoscaling on a specific axis?",
    "c": null,
    "o": [
      "ax.set_autoscale_on(False)",
      "plt.autoscale(disable=True)",
      "ax.autoscale_mode('off')",
      "ax.set_manual_limits(True)"
    ]
  },
  {
    "q": "What’s the result of calling `ax.axis('equal')`?",
    "c": null,
    "o": [
      "Sets both x and y axes to have equal unit lengths",
      "Equalizes the number of ticks on both axes",
      "Zooms out the plot to default limits",
      "Centers the origin in the plot"
    ]
  },
  {
    "q": "What is the purpose of `ax.invert_yaxis()` in a Matplotlib plot?",
    "c": null,
    "o": [
      "Reverses the y-axis so that higher values appear at the bottom",
      "Flips the plot upside down",
      "Swaps x and y axes",
      "Converts y-axis to a logarithmic scale"
    ]
  },
  {
    "q": "Which method is used to draw vertical span regions in a plot?",
    "c": null,
    "o": [
      "ax.axvspan(xmin, xmax)",
      "ax.fill_betweenx()",
      "ax.plot_span('v')",
      "plt.fill_vertical(x1, x2)"
    ]
  },
  {
    "q": "What does `plt.cla()` do?",
    "c": null,
    "o": [
      "Clears the current axes",
      "Closes all open figures",
      "Creates a new axis",
      "Clears all annotations from the figure"
    ]
  },
  {
    "q": "Which function adjusts subplot spacing in a figure?",
    "c": null,
    "o": [
      "plt.subplots_adjust()",
      "plt.subplot_spacing()",
      "plt.spacing()",
      "fig.layout_adjust()"
    ]
  },
  {
    "q": "What is the correct way to hide the x-axis in a Matplotlib plot?",
    "c": null,
    "o": [
      "ax.get_xaxis().set_visible(False)",
      "ax.set_axis_off('x')",
      "plt.axis(x=False)",
      "ax.xaxis().disable()"
    ]
  },
  {
    "q": "What does the `bbox_inches='tight'` parameter do in `plt.savefig()`?",
    "c": null,
    "o": [
      "Trims extra whitespace around the figure",
      "Draws a bounding box on the figure",
      "Fits the figure inside the bounding box",
      "Adds padding to the saved image"
    ]
  },
  {
    "q": "Which of the following is used to create twin y-axes in Matplotlib?",
    "c": null,
    "o": [
      "ax.twinx()",
      "ax.twiny()",
      "plt.duplicate_axis('y')",
      "plt.double_yaxis()"
    ]
  },
  {
    "q": "What does `ax.format_coord(x, y)` return?",
    "c": null,
    "o": [
      "Formatted coordinate string for the mouse hover",
      "Formatted axis label",
      "Formatted axis tick values",
      "Formatted legend text"
    ]
  },
  {
    "q": "Which of the following allows you to draw a table inside a Matplotlib plot?",
    "c": null,
    "o": [
      "ax.table()",
      "plt.insert_table()",
      "ax.add_table()",
      "plt.show_table()"
    ]
  },
  {
    "q": "How do you plot a histogram with density normalization in Matplotlib?",
    "c": null,
    "o": [
      "plt.hist(data, density=True)",
      "plt.hist(data, normalize=True)",
      "plt.hist(data, scale='pdf')",
      "plt.hist(data, mode='density')"
    ]
  },
  {
    "q": "What is the primary difference between `plt.imshow()` and `plt.matshow()`?",
    "c": null,
    "o": [
      "`plt.matshow()` is optimized for displaying matrices and adds axis labels",
      "`plt.imshow()` automatically transposes the input",
      "`plt.matshow()` supports only grayscale images",
      "`plt.imshow()` always applies interpolation by default"
    ]
  },
  {
    "q": "Which Matplotlib function helps in creating inset axes inside a main plot?",
    "c": null,
    "o": [
      "inset_axes() from mpl_toolkits.axes_grid1",
      "plt.add_subplot_inset()",
      "ax.add_nested_axes()",
      "fig.new_sub_axes()"
    ]
  },
  {
    "q": "How can you enable interactive zoom and pan in a Jupyter Notebook with Matplotlib?",
    "c": null,
    "o": [
      "%matplotlib notebook",
      "%matplotlib inline",
      "%enable interactive",
      "%matplotlib interactive"
    ]
  },
  {
    "q": "Which method allows you to make axis ticks point inward in Matplotlib?",
    "c": null,
    "o": [
      "ax.tick_params(direction='in')",
      "plt.set_tickdir('in')",
      "ax.axis_ticks(inward=True)",
      "ax.set_ticks_position('in')"
    ]
  },
  {
    "q": "What is the effect of setting `sharex=True` in `plt.subplots()`?",
    "c": null,
    "o": [
      "All subplots share the same x-axis scale and ticks",
      "The x-axis ticks are hidden",
      "The figure size is doubled",
      "All x-ticks are removed from inner subplots"
    ]
  },
  {
    "q": "What does the `anchor` parameter do in `fig.colorbar()`?",
    "c": null,
    "o": [
      "Specifies where the colorbar should be anchored relative to the axes",
      "Anchors the color scale to a specific data range",
      "Aligns colorbar labels to a grid",
      "Locks the colorbar position to the title"
    ]
  },
  {
    "q": "What is the output of `plt.gca()`?",
    "c": null,
    "o": [
      "Returns the current Axes instance",
      "Returns the current Figure instance",
      "Returns the global axis",
      "Returns a new axis with default settings"
    ]
  },
  {
    "q": "How do you display the legend outside the plot area to the right?",
    "c": null,
    "o": [
      "plt.legend(loc='center left', bbox_to_anchor=(1, 0.5))",
      "plt.legend(outside=True)",
      "ax.set_legend(position='right')",
      "plt.place_legend(x='right')"
    ]
  },
  {
    "q": "Which module can be used to export Matplotlib plots as interactive HTML visualizations?",
    "c": null,
    "o": [
      "mpld3",
      "matplothtml",
      "mplplotly",
      "plotmathtml"
    ]
  },
  {
    "q": "What does `tight_layout()` do in Matplotlib?",
    "c": null,
    "o": [
      "Automatically adjusts subplot parameters to fit the figure area",
      "Zooms in on the plot area tightly",
      "Locks the layout size to prevent resizing",
      "Adds tight borders around each subplot"
    ]
  },
  {
    "q": "What is the effect of setting `zorder` in a Matplotlib plot element?",
    "c": null,
    "o": [
      "Controls the draw order (stacking) of plot elements",
      "Zooms the element to the front",
      "Locks the element to the bottom axis",
      "Adds a shadow effect to the element"
    ]
  },
  {
    "q": "How can you create a twin y-axis that shares the same x-axis in Matplotlib?",
    "c": null,
    "o": [
      "ax2 = ax.twinx()",
      "ax2 = ax.sharex()",
      "ax2 = ax.copyy()",
      "ax2 = ax.duplicate(axis='y')"
    ]
  },
  {
    "q": "Which artist property would you modify to set transparency for a patch or line?",
    "c": null,
    "o": [
      "alpha",
      "zorder",
      "markeredgewidth",
      "facevisibility"
    ]
  },
  {
    "q": "What does `plt.xkcd()` do in Matplotlib?",
    "c": null,
    "o": [
      "Switches to a hand-drawn comic style for plots",
      "Adds a cartoon image background",
      "Disables grid and legend",
      "Renders axes in a comic sans font"
    ]
  },
  {
    "q": "How can you plot a 3D surface plot using Matplotlib?",
    "c": null,
    "o": [
      "Using `ax.plot_surface()` from a `mpl_toolkits.mplot3d` Axes3D object",
      "Using `plt.plot3d_surface()`",
      "Using `plt.surface3d()`",
      "Using `ax.plot_3d_surface()` from `pyplot`"
    ]
  },
  {
    "q": "What does `fig.add_axes([0.1, 0.1, 0.8, 0.8])` do?",
    "c": null,
    "o": [
      "Adds a new axes at specified position in figure coordinates (left, bottom, width, height)",
      "Adds grid lines at intervals",
      "Adds subplots in 0.1 unit spacing",
      "Adds a zoomed inset of current axes"
    ]
  },
  {
    "q": "How can you apply a logarithmic scale to the x-axis?",
    "c": null,
    "o": [
      "ax.set_xscale('log')",
      "plt.log_scale('x')",
      "ax.xaxis.set_log()",
      "plt.set_log_xaxis()"
    ]
  },
  {
    "q": "What does `Line2D.set_dashes([5, 2, 2, 2])` do?",
    "c": null,
    "o": [
      "Sets a custom dash pattern for the line: 5 on, 2 off, 2 on, 2 off",
      "Sets thickness and spacing of a dotted line",
      "Converts a solid line to dashed and thick",
      "Resets dashes to default style"
    ]
  },
  {
    "q": "What is the purpose of `constrained_layout=True` in `plt.subplots()`?",
    "c": null,
    "o": [
      "Automatically adjusts subplots to avoid overlap, including labels",
      "Fixes the aspect ratio of each plot",
      "Forces tight margins for all plots",
      "Enables subplot rescaling interactively"
    ]
  },
  {
    "q": "What happens when you set `ax.set_aspect('equal')`?",
    "c": null,
    "o": [
      "Ensures that one unit in x is the same length as one unit in y",
      "Equalizes the font size of axis labels",
      "Makes x and y limits equal to each other",
      "Adds a 1:1 scale grid"
    ]
  },
  {
    "q": "In a 3D plot using `mpl_toolkits.mplot3d`, which method is used to plot 3D scatter points?",
    "c": null,
    "o": [
      "ax.scatter",
      "ax.plot_surface",
      "ax.plot_wireframe",
      "ax.contour3D"
    ]
  },
  {
    "q": "Which of the following submodules is required to create interactive widgets in Matplotlib?",
    "c": null,
    "o": [
      "matplotlib.widgets",
      "matplotlib.interact",
      "matplotlib.controls",
      "matplotlib.ui"
    ]
  },
  {
    "q": "What does the following code output visually?",
    "c": "plt.bar([1, 2, 3], [3, 2, 5], color=['red', 'green', 'blue'])\nplt.show()",
    "o": [
      "Three bars with red, green, and blue colors",
      "A single multicolored bar",
      "Bars with default color mapping",
      "Error due to incorrect color assignment"
    ]
  },
  {
    "q": "How can you enable interactive navigation (zoom/pan) when using `%matplotlib inline` in Jupyter?",
    "c": null,
    "o": [
      "%matplotlib notebook",
      "%matplotlib auto",
      "%matplotlib qt",
      "%matplotlib classic"
    ]
  },
  {
    "q": "Which argument controls the number of bins in a histogram?",
    "c": null,
    "o": [
      "bins",
      "segments",
      "splits",
      "levels"
    ]
  },
  {
    "q": "What is the purpose of `ax.set_xticks()`?",
    "c": null,
    "o": [
      "Manually specify the tick locations on the x-axis",
      "Enable automatic tick labeling",
      "Set the range of the x-axis",
      "Remove all x-axis ticks"
    ]
  },
  {
    "q": "Which method allows combining multiple plots using different y-axes in the same figure?",
    "c": null,
    "o": [
      "twinx()",
      "subplot2grid()",
      "sharey=True",
      "add_axes()"
    ]
  },
  {
    "q": "Which argument in `plt.scatter()` is used to set marker transparency?",
    "c": null,
    "o": [
      "alpha",
      "transparency",
      "opacity",
      "visible"
    ]
  },
  {
    "q": "Which of the following is used to annotate a point on a plot?",
    "c": "plt.annotate('Peak', xy=(x, y), xytext=(x+1, y+1), arrowprops=dict(facecolor='black'))",
    "o": [
      "Adds a label with an arrow pointing to a peak",
      "Highlights the region around a point",
      "Changes the shape of the plotted point",
      "Plots a vertical line at x"
    ]
  },
  {
    "q": "When integrating Pandas with Matplotlib, what is a convenient method for plotting directly from a DataFrame?",
    "c": null,
    "o": [
      "df.plot()",
      "df.show()",
      "df.visualize()",
      "df.draw()"
    ]
  },
  {
    "q": "Which Matplotlib function is used to create a filled contour plot?",
    "c": null,
    "o": [
      "plt.contourf()",
      "plt.contour()",
      "plt.imshow()",
      "plt.fill_between()"
    ]
  },
  {
    "q": "What does `plt.tight_layout()` do in a Matplotlib plot?",
    "c": null,
    "o": [
      "Adjusts subplot spacing to prevent overlap",
      "Resizes the figure window",
      "Adds tight borders to the plot",
      "Removes empty space around axes"
    ]
  },
  {
    "q": "Which of the following is the correct way to rotate x-axis labels by 90 degrees?",
    "c": "plt.xticks(rotation=90)",
    "o": [
      "Rotates x-axis labels by 90 degrees",
      "Rotates the x-axis itself",
      "Sets the font size of x-axis labels",
      "Hides x-axis labels"
    ]
  },
  {
    "q": "Which method allows saving a Matplotlib figure to a file?",
    "c": null,
    "o": [
      "plt.savefig('filename.png')",
      "plt.export('filename.png')",
      "plt.writefig('filename.png')",
      "plt.plot.save('filename.png')"
    ]
  },
  {
    "q": "What does `fig, ax = plt.subplots(2, 1)` create?",
    "c": null,
    "o": [
      "A figure with 2 vertically stacked subplots",
      "A figure with 2 horizontally stacked subplots",
      "Two separate figures",
      "One subplot with 2 axes"
    ]
  },
  {
    "q": "Which argument in `plt.plot()` controls the line style?",
    "c": null,
    "o": [
      "linestyle",
      "line",
      "style",
      "pattern"
    ]
  },
  {
    "q": "What is the purpose of `ax.legend()` in a plot?",
    "c": null,
    "o": [
      "Displays a legend for labeled elements",
      "Adds a title to the figure",
      "Rotates the axis labels",
      "Removes duplicates from the plot"
    ]
  },
  {
    "q": "Which color code represents the color yellow in Matplotlib?",
    "c": null,
    "o": [
      "'y'",
      "'g'",
      "'r'",
      "'c'"
    ]
  },
  {
    "q": "What does `ax.set_aspect('equal')` do?",
    "c": null,
    "o": [
      "Ensures equal scaling on x and y axes",
      "Sets default spacing for the subplot",
      "Fixes axis limits to default values",
      "Changes the plot background"
    ]
  },
  {
    "q": "How can you create a vertical line at x=2 using Matplotlib?",
    "c": null,
    "o": [
      "plt.axvline(x=2)",
      "plt.vline(2)",
      "plt.line(x=2)",
      "plt.axline(2)"
    ]
  },
  {
    "q": "Which function in Matplotlib can be used to create a histogram?",
    "c": null,
    "o": [
      "plt.hist()",
      "plt.bars()",
      "plt.plot_hist()",
      "plt.barh()"
    ]
  },
  {
    "q": "What does the 'alpha' parameter in Matplotlib functions control?",
    "c": null,
    "o": [
      "Transparency of the plot elements",
      "Font style of axis labels",
      "Line thickness",
      "Rotation angle of text"
    ]
  },
  {
    "q": "How do you specify a dashed red line in `plt.plot()`?",
    "c": "plt.plot(x, y, 'r--')",
    "o": [
      "Plots with a dashed red line",
      "Plots with a dotted blue line",
      "Plots with a solid green line",
      "Plots with a thick black line"
    ]
  },
  {
    "q": "What is the use of `ax.set_xlim()` and `ax.set_ylim()`?",
    "c": null,
    "o": [
      "To manually set the limits of the axes",
      "To reset the view to default",
      "To add labels to the axes",
      "To draw axis lines"
    ]
  },
  {
    "q": "Which method displays a grid on a plot?",
    "c": null,
    "o": [
      "plt.grid(True)",
      "plt.show_grid()",
      "plt.axisgrid(True)",
      "plt.gridon()"
    ]
  },
  {
    "q": "How can you create multiple subplots in a 2x2 layout?",
    "c": "fig, axs = plt.subplots(2, 2)",
    "o": [
      "Creates 4 subplots in 2 rows and 2 columns",
      "Creates 2 subplots stacked vertically",
      "Creates 2 subplots side by side",
      "Creates a single plot with 2 axes"
    ]
  },
  {
    "q": "What does `plt.barh()` create?",
    "c": null,
    "o": [
      "A horizontal bar chart",
      "A vertical bar chart",
      "A line chart with bars",
      "A histogram with horizontal bins"
    ]
  },
  {
    "q": "How do you add a title to a Matplotlib plot?",
    "c": null,
    "o": [
      "plt.title('My Plot')",
      "plt.plot_title('My Plot')",
      "plt.add_title('My Plot')",
      "plt.graph_title('My Plot')"
    ]
  },
  {
    "q": "What does `plt.errorbar()` help visualize?",
    "c": null,
    "o": [
      "Data with error margins",
      "Data with confidence intervals",
      "Multiple line plots",
      "Only categorical data"
    ]
  },
  {
    "q": "Which parameter in `plt.scatter()` sets the color of each point?",
    "c": null,
    "o": [
      "c",
      "color",
      "clr",
      "colormap"
    ]
  },
  {
    "q": "Which Matplotlib function is used to create a pie chart?",
    "c": null,
    "o": [
      "plt.pie()",
      "plt.piechart()",
      "plt.circle()",
      "plt.donut()"
    ]
  },
  {
    "q": "How can you save a Matplotlib figure to a file?",
    "c": null,
    "o": [
      "plt.savefig('figure.png')",
      "plt.export('figure.png')",
      "plt.writefile('figure.png')",
      "plt.output('figure.png')"
    ]
  },
  {
    "q": "Which parameter in `plt.plot()` changes the line width?",
    "c": null,
    "o": [
      "linewidth",
      "lineweight",
      "thickness",
      "width"
    ]
  },
  {
    "q": "What does `plt.legend()` do in a Matplotlib plot?",
    "c": null,
    "o": [
      "Displays labels for different plot elements",
      "Changes axis limits",
      "Draws a grid",
      "Rotates axis labels"
    ]
  },
  {
    "q": "Which of the following is true about `plt.scatter()`?",
    "c": null,
    "o": [
      "It creates a scatter plot of x vs. y",
      "It creates a bar plot",
      "It draws a histogram",
      "It displays only the x-axis"
    ]
  },
  {
    "q": "What is the default backend used by Matplotlib for rendering plots?",
    "c": null,
    "o": [
      "Agg",
      "TkAgg",
      "Qt5Agg",
      "WXAgg"
    ]
  },
  {
    "q": "How do you change the figure size in Matplotlib?",
    "c": null,
    "o": [
      "plt.figure(figsize=(width, height))",
      "plt.size(width, height)",
      "plt.set_figsize(width, height)",
      "plt.figsize(width, height)"
    ]
  },
  {
    "q": "What does the `sharex=True` argument do in `plt.subplots()`?",
    "c": null,
    "o": [
      "Shares the x-axis across all subplots",
      "Shares the y-axis across all subplots",
      "Adds a legend to all subplots",
      "Combines all plots into one figure"
    ]
  },
  {
    "q": "Which function is used to draw contour plots in Matplotlib?",
    "c": null,
    "o": [
      "plt.contour()",
      "plt.contourf()",
      "plt.plot_contour()",
      "plt.surface()"
    ]
  },
  {
    "q": "What is the purpose of `plt.tight_layout()`?",
    "c": null,
    "o": [
      "Automatically adjusts subplot params to fit the figure area",
      "Adds padding to the plot",
      "Makes the layout larger",
      "Fixes the aspect ratio"
    ]
  },
  {
    "q": "Which function in Matplotlib is used to create 3D plots?",
    "c": null,
    "o": [
      "Axes3D",
      "plot3d",
      "plt.3dplot",
      "plt.surfaceplot"
    ]
  },
  {
    "q": "To enable 3D plotting in Matplotlib, what module must be imported?",
    "c": null,
    "o": [
      "mpl_toolkits.mplot3d",
      "matplotlib.3d",
      "matplotlib.surface",
      "mpl.plot3d"
    ]
  },
  {
    "q": "Which method is used to plot 3D surface plots?",
    "c": null,
    "o": [
      "ax.plot_surface(X, Y, Z)",
      "ax.plot3d(X, Y, Z)",
      "ax.surface(X, Y, Z)",
      "ax.surface_plot(X, Y, Z)"
    ]
  },
  {
    "q": "What is the correct way to create a 3D subplot?",
    "c": null,
    "o": [
      "fig.add_subplot(111, projection='3d')",
      "fig.plot_3d()",
      "plt.add_subplot(3d=True)",
      "fig.add_subplot3d(111)"
    ]
  },
  {
    "q": "Which of the following can add interactivity to Matplotlib plots?",
    "c": null,
    "o": [
      "mplcursors",
      "plotmagic",
      "pyplot_ui",
      "matplotzoom"
    ]
  },
  {
    "q": "How do you create an animation in Matplotlib?",
    "c": null,
    "o": [
      "Using `matplotlib.animation.FuncAnimation`",
      "Using `plt.animate()`",
      "Using `mpl.animate_plot()`",
      "Using `pyplot.run()`"
    ]
  },
  {
    "q": "Which parameter in `plot_surface` controls the color mapping?",
    "c": null,
    "o": [
      "cmap",
      "color",
      "hue",
      "shade"
    ]
  },
  {
    "q": "Which Matplotlib function is used to update frames in animation?",
    "c": null,
    "o": [
      "FuncAnimation",
      "UpdatePlot",
      "RedrawFigure",
      "AnimatePlot"
    ]
  },
  {
    "q": "How can you rotate a 3D plot for visualization?",
    "c": null,
    "o": [
      "By adjusting the `elev` and `azim` of the Axes3D",
      "Using `plt.rotate()`",
      "Dragging with the mouse",
      "Calling `rotate_plot()`"
    ]
  },
  {
    "q": "Which Matplotlib backend allows for interactivity like zooming and panning?",
    "c": null,
    "o": [
      "TkAgg",
      "Agg",
      "SVG",
      "PDF"
    ]
  },
  {
    "q": "Which method in Matplotlib is used to create a 3D scatter plot?",
    "c": null,
    "o": [
      "ax.scatter(xs, ys, zs)",
      "ax.plot3d(xs, ys, zs)",
      "ax.scatter3d(xs, ys, zs)",
      "plt.scatter3(xs, ys, zs)"
    ]
  },
  {
    "q": "What argument should be passed to `plot_surface` to apply transparency?",
    "c": null,
    "o": [
      "alpha",
      "opacity",
      "transparent",
      "trans"
    ]
  },
  {
    "q": "Which color map is commonly used for elevation data in surface plots?",
    "c": null,
    "o": [
      "terrain",
      "grayscale",
      "hot",
      "coolwarm"
    ]
  },
  {
    "q": "How do you display a color bar beside a 3D surface plot?",
    "c": null,
    "o": [
      "plt.colorbar(surf)",
      "plt.add_colorbar(surf)",
      "ax.show_colorbar(surf)",
      "plt.set_colorbar(surf)"
    ]
  },
  {
    "q": "Which method is used to set the elevation and azimuth of a 3D plot?",
    "c": null,
    "o": [
      "ax.view_init(elev, azim)",
      "ax.set_view(elev, azim)",
      "ax.camera(elev, azim)",
      "ax.rotate(elev, azim)"
    ]
  },
  {
    "q": "Which parameter changes the grid spacing in a 3D plot?",
    "c": null,
    "o": [
      "rstride and cstride",
      "spacing",
      "stepx and stepy",
      "interval"
    ]
  },
  {
    "q": "What is the correct way to add a title to a 3D subplot?",
    "c": null,
    "o": [
      "ax.set_title('My 3D Plot')",
      "ax.title('My 3D Plot')",
      "plt.title3d('My 3D Plot')",
      "ax.add_title('My 3D Plot')"
    ]
  },
  {
    "q": "To animate a rotating 3D plot, which of the following is essential?",
    "c": null,
    "o": [
      "Updating `azim` value in a loop",
      "Changing `cmap` dynamically",
      "Using `ax.plot_surface` repeatedly",
      "Calling `ax.reset()` each frame"
    ]
  },
  {
    "q": "Which method helps limit the axes range in 3D plots?",
    "c": null,
    "o": [
      "ax.set_xlim(), ax.set_ylim(), ax.set_zlim()",
      "ax.limit_axes()",
      "plt.set_bounds()",
      "ax.axis_limit()"
    ]
  },
  {
    "q": "How can you save a Matplotlib 3D plot as an image?",
    "c": null,
    "o": [
      "plt.savefig('plot.png')",
      "ax.save3d('plot.png')",
      "plt.export_3d('plot.png')",
      "ax.export_plot('plot.png')"
    ]
  },
  {
    "q": "Which function is used to create a wireframe plot in Matplotlib 3D?",
    "c": null,
    "o": [
      "ax.plot_wireframe(X, Y, Z)",
      "ax.wireframe_plot(X, Y, Z)",
      "plt.plot_wireframe(X, Y, Z)",
      "ax.plot3d_wire(X, Y, Z)"
    ]
  },
  {
    "q": "What does the `shade` parameter control in `plot_surface`?",
    "c": null,
    "o": [
      "Lighting effect on the surface",
      "Wireframe thickness",
      "Background color",
      "Axis labels visibility"
    ]
  },
  {
    "q": "To plot contour lines on a 3D plot, which method is used?",
    "c": null,
    "o": [
      "ax.contour3D(X, Y, Z)",
      "plt.contour3(X, Y, Z)",
      "ax.plot_contours(X, Y, Z)",
      "ax.draw3DContours(X, Y, Z)"
    ]
  },
  {
    "q": "Which Matplotlib module is required to enable 3D plotting?",
    "c": null,
    "o": [
      "mpl_toolkits.mplot3d",
      "matplotlib.threeD",
      "mpl.3d",
      "matplotlib.3Dplot"
    ]
  },
  {
    "q": "What does `rstride` control in `plot_surface`?",
    "c": null,
    "o": [
      "Row step size for plotting surface",
      "Rotation stride",
      "Red color intensity",
      "Render stride for wireframe"
    ]
  },
  {
    "q": "Which of these creates a 3D bar plot?",
    "c": null,
    "o": [
      "ax.bar3d(x, y, z, dx, dy, dz)",
      "ax.bar(x, y, z)",
      "plt.bar_3d(x, y, z)",
      "ax.plot_bar3(x, y, z)"
    ]
  },
  {
    "q": "How do you enable interactive 3D rotation in a Jupyter Notebook?",
    "c": null,
    "o": [
      "%matplotlib notebook",
      "%enable3D",
      "%plot3D interactive",
      "%matplotlib interactive3D"
    ]
  },
  {
    "q": "Which parameter defines the stride for columns in surface plotting?",
    "c": null,
    "o": [
      "cstride",
      "colstride",
      "xstride",
      "stride_c"
    ]
  },
  {
    "q": "Which method is used to add scatter points in 3D with color mapping?",
    "c": null,
    "o": [
      "ax.scatter(x, y, z, c=values, cmap='viridis')",
      "ax.plot3d(x, y, z, colors=values)",
      "ax.color_scatter(x, y, z)",
      "ax.scattermap(x, y, z, values)"
    ]
  },
  {
    "q": "Which attribute is modified to zoom into a 3D plot?",
    "c": null,
    "o": [
      "ax.dist",
      "ax.zoom_level",
      "ax.set_zoom()",
      "ax.scale3D"
    ]
  },
  {
    "q": "What is the purpose of `plot_trisurf()` in Matplotlib 3D?",
    "c": null,
    "o": [
      "To plot a 3D surface using unstructured triangular grids",
      "To draw triangular wireframes in 2D",
      "To create stacked area charts",
      "To generate 3D contour lines"
    ]
  },
  {
    "q": "Which parameter in `plot_surface()` defines the color shading method?",
    "c": null,
    "o": [
      "cmap",
      "color",
      "facecolor",
      "edgecolor"
    ]
  },
  {
    "q": "Which of the following is used to set the elevation and azimuth angle of a 3D plot?",
    "c": null,
    "o": [
      "ax.view_init(elev, azim)",
      "ax.set_view(elev, azim)",
      "ax.rotate3d(elev, azim)",
      "ax.set_3d_view(elev, azim)"
    ]
  },
  {
    "q": "How do you add a color bar to a 3D surface plot?",
    "c": null,
    "o": [
      "fig.colorbar(surface_plot)",
      "ax.colorbar(surface_plot)",
      "plt.add_colorbar(surface_plot)",
      "ax.set_colorbar(surface_plot)"
    ]
  },
  {
    "q": "Which collection is used to manually create custom 3D surfaces from polygons?",
    "c": null,
    "o": [
      "Poly3DCollection",
      "Polygon3DSet",
      "SurfacePatch3D",
      "PolygonSurface3D"
    ]
  },
  {
    "q": "Which method is used to plot a filled contour in 3D?",
    "c": null,
    "o": [
      "ax.contourf(X, Y, Z, zdir='z', offset=value)",
      "ax.plot_surface_filled(X, Y, Z)",
      "ax.fill3d_contour(X, Y, Z)",
      "ax.contourfill3d(X, Y, Z)"
    ]
  },
  {
    "q": "To animate a 3D plot, which Matplotlib module is typically used?",
    "c": null,
    "o": [
      "matplotlib.animation",
      "mpl_toolkits.mplot3d.animation3d",
      "matplotlib.3d.animation",
      "mpl.animation3d"
    ]
  },
  {
    "q": "Which axes method is used to set a title for a 3D subplot?",
    "c": null,
    "o": [
      "ax.set_title('Title')",
      "ax.title('Title')",
      "ax.3dtitle('Title')",
      "ax.set3d_title('Title')"
    ]
  },
  {
    "q": "Which of these arguments is used in `plot_surface()` to improve lighting effects?",
    "c": null,
    "o": [
      "shade=True",
      "light=True",
      "highlight=True",
      "depthshade=True"
    ]
  },
  {
    "q": "Which projection type enables 3D plotting in Matplotlib?",
    "c": null,
    "o": [
      "projection='3d'",
      "plot_type='3d'",
      "axes_type='3D'",
      "dimensionality='3'"
    ]
  },
  {
    "q": "Which of the following is required to create a 3D plot in Matplotlib?",
    "c": null,
    "o": [
      "from mpl_toolkits.mplot3d import Axes3D",
      "from matplotlib.pyplot import Axes3D",
      "from matplotlib.animation import Func3D",
      "from mpl_toolkits import plot3D"
    ]
  },
  {
    "q": "What does the `rstride` and `cstride` arguments in `plot_surface()` represent?",
    "c": null,
    "o": [
      "Row and column stride for surface plotting",
      "Rotation and curvature stride",
      "Row and column scaling factor",
      "Radius and curvature stride"
    ]
  },
  {
    "q": "How can you change the limits of a 3D z-axis in Matplotlib?",
    "c": null,
    "o": [
      "ax.set_zlim(min, max)",
      "ax.zlim(min, max)",
      "ax.set_ylim('z', min, max)",
      "ax.set_axis_z(min, max)"
    ]
  },
  {
    "q": "Which method plots 3D line plots in Matplotlib?",
    "c": null,
    "o": [
      "ax.plot3D(x, y, z)",
      "ax.plot3(x, y, z)",
      "plt.plot_3D(x, y, z)",
      "ax.line3D(x, y, z)"
    ]
  },
  {
    "q": "In a 3D scatter plot, which argument controls point size?",
    "c": null,
    "o": [
      "s",
      "size",
      "r",
      "scale"
    ]
  },
  {
    "q": "What is the result of calling `ax.scatter(xs, ys, zs, marker='^')`?",
    "c": null,
    "o": [
      "Plots 3D scatter points using triangle-up markers",
      "Plots 2D scatter points with arrows",
      "Plots a wireframe with triangular surfaces",
      "Plots a contour plot with triangle mesh"
    ]
  },
  {
    "q": "Which axis method sets custom tick labels for the Z-axis in 3D?",
    "c": null,
    "o": [
      "ax.set_zticklabels(labels)",
      "ax.set_zlabels(labels)",
      "ax.set_ticklabels('z', labels)",
      "ax.set_axis_labels('z', labels)"
    ]
  },
  {
    "q": "Which method is used to draw a 3D contour surface?",
    "c": null,
    "o": [
      "ax.contour3D(X, Y, Z)",
      "ax.contour_surface(X, Y, Z)",
      "ax.plot_contour3d(X, Y, Z)",
      "ax.contourf3D(X, Y, Z)"
    ]
  },
  {
    "q": "Which function is used to create a 3D subplot?",
    "c": null,
    "o": [
      "fig.add_subplot(111, projection='3d')",
      "fig.create_3d_subplot()",
      "plt.add_subplot(3d=True)",
      "fig.axes3D()"
    ]
  },
  {
    "q": "How can you hide the 3D axes panes in Matplotlib?",
    "c": null,
    "o": [
      "ax.xaxis.pane.set_visible(False)",
      "ax.set_xaxis_visibility(False)",
      "ax.remove_pane('x')",
      "ax.hide_axis_pane('x')"
    ]
  },
  {
    "q": "Which method in Matplotlib is used to create a 3D bar plot?",
    "c": null,
    "o": [
      "ax.bar3d(x, y, z, dx, dy, dz)",
      "ax.bar_3D(x, y, z, dx, dy, dz)",
      "ax.plot_bar3d(x, y, z)",
      "ax.bar3(x, y, z)"
    ]
  },
  {
    "q": "What does the `dz` parameter specify in a `bar3d()` function?",
    "c": null,
    "o": [
      "Height of the 3D bar",
      "Width of the 3D bar",
      "Depth of the bar base",
      "Z-axis limit for the bar plot"
    ]
  },
  {
    "q": "Which attribute is used to change the elevation angle in a 3D plot view?",
    "c": null,
    "o": [
      "ax.view_init(elev=angle, azim=angle)",
      "ax.set_elev_angle(angle)",
      "ax.set_view(angle)",
      "ax.set_3d_rotation(elevation=angle)"
    ]
  },
  {
    "q": "Which method is used to create a 3D wireframe plot?",
    "c": null,
    "o": [
      "ax.plot_wireframe(X, Y, Z)",
      "ax.wireframe_plot(X, Y, Z)",
      "plt.wireframe3D(X, Y, Z)",
      "ax.wire_plot(X, Y, Z)"
    ]
  },
  {
    "q": "What is the primary difference between `plot_surface()` and `plot_wireframe()`?",
    "c": null,
    "o": [
      "`plot_surface()` creates a solid surface; `plot_wireframe()` creates a mesh outline",
      "`plot_surface()` is 2D; `plot_wireframe()` is 3D",
      "`plot_wireframe()` uses color gradients; `plot_surface()` does not",
      "There is no difference"
    ]
  },
  {
    "q": "What role does the `shade` parameter play in `plot_surface()`?",
    "c": null,
    "o": [
      "Adds lighting effect for better depth perception",
      "Sets transparency of the surface",
      "Controls the gridline thickness",
      "Rotates the surface automatically"
    ]
  },
  {
    "q": "Which method is used to animate 3D plots in Matplotlib?",
    "c": null,
    "o": [
      "FuncAnimation from matplotlib.animation",
      "ax.animate3D()",
      "plt.3d_animate()",
      "plot3D.animate_frame()"
    ]
  },
  {
    "q": "How can you change the background color of a 3D plot?",
    "c": null,
    "o": [
      "ax.set_facecolor('color')",
      "ax.set_background('color')",
      "ax.plot_background('color')",
      "ax.bgcolor('color')"
    ]
  },
  {
    "q": "Which command adds a color bar to a 3D surface plot?",
    "c": null,
    "o": [
      "fig.colorbar(surf)",
      "ax.colorbar(surf)",
      "plt.color_map(surf)",
      "ax.plot_colorbar(surf)"
    ]
  },
  {
    "q": "In a 3D plot, how do you set the aspect ratio to be equal on all axes?",
    "c": null,
    "o": [
      "ax.set_box_aspect([1,1,1])",
      "ax.equal_aspect()",
      "ax.set_aspect_ratio(equal=True)",
      "ax.axis_equal3D()"
    ]
  },
  {
    "q": "Which backend must be enabled to use interactive 3D plotting with Matplotlib in Jupyter Notebook?",
    "c": null,
    "o": [
      "%matplotlib notebook",
      "%matplotlib inline",
      "%matplotlib widget",
      "%plot3d enable"
    ]
  },
  {
    "q": "In a 3D scatter plot using `ax.scatter()`, which parameter controls the size of the markers?",
    "c": null,
    "o": [
      "s",
      "marker_size",
      "size",
      "m"
    ]
  },
  {
    "q": "What does `ax.plot_trisurf()` specifically require in addition to X, Y, Z data?",
    "c": null,
    "o": [
      "A triangulation or Delaunay triangulation data",
      "Grid layout matrix",
      "Surface normals",
      "Surface colormap"
    ]
  },
  {
    "q": "Which attribute of `Axes3D` can you modify to hide the pane backgrounds in a 3D plot?",
    "c": null,
    "o": [
      "ax.xaxis.pane.set_visible(False)",
      "ax.set_pane_visibility(False)",
      "ax.hide_pane()",
      "ax.set_pane_background(None)"
    ]
  },
  {
    "q": "Which of the following is true about `plot_surface()` and color mapping?",
    "c": null,
    "o": [
      "You must pass a colormap using the `cmap` parameter for color gradients",
      "It uses `color` parameter by default for smooth gradients",
      "`c` is used to provide color mapping in surface plots",
      "Color mapping is automatic and can't be customized"
    ]
  },
  {
    "q": "What happens if you try to use 2D arrays with unequal shapes in `plot_surface(X, Y, Z)`?",
    "c": null,
    "o": [
      "It raises a `ValueError` due to shape mismatch",
      "It automatically reshapes them using broadcasting",
      "It clips the arrays to the smallest shape",
      "It transposes the arrays to match dimensions"
    ]
  },
  {
    "q": "Which method would you use to save a Matplotlib 3D plot in high DPI?",
    "c": null,
    "o": [
      "plt.savefig('plot.png', dpi=300)",
      "ax.save3d('plot.png', quality='high')",
      "fig.export_3d('plot.png')",
      "plt.export3d('plot.png', resolution=300)"
    ]
  },
  {
    "q": "How can you change the transparency of a surface in `plot_surface()`?",
    "c": null,
    "o": [
      "Set `alpha` parameter between 0 and 1",
      "Set `transparency=True`",
      "Use `face_alpha` parameter",
      "Call `ax.set_alpha()` on surface object"
    ]
  },
  {
    "q": "Which combination is valid for setting custom ticks in a 3D plot?",
    "c": null,
    "o": [
      "ax.set_xticks([...]); ax.set_yticks([...]); ax.set_zticks([...])",
      "plt.ticks3d(x, y, z)",
      "ax.set_ticks_3d([...])",
      "ax.xticks3d([...])"
    ]
  },
  {
    "q": "Which technique is used to improve rendering speed of dense `plot_surface()` data?",
    "c": null,
    "o": [
      "Reducing stride values (rstride, cstride)",
      "Increasing alpha to 1.0",
      "Using `ax.optimized_surface()`",
      "Switching to `ax.plot_wireframe()`"
    ]
  },
  {
    "q": "What does `ax.view_init(elev, azim)` do in a 3D Matplotlib plot?",
    "c": null,
    "o": [
      "Sets the elevation and azimuthal angle for the 3D view",
      "Zooms the 3D plot in or out",
      "Initializes a new 3D canvas",
      "Rotates only the Z-axis projection"
    ]
  },
  {
    "q": "Which method is used to change the axis scaling mode in a 3D plot?",
    "c": null,
    "o": [
      "ax.set_box_aspect()",
      "ax.set_aspect_ratio()",
      "plt.set_3dscale()",
      "ax.scale_3d()"
    ]
  },
  {
    "q": "How can you plot a parametric 3D spiral in Matplotlib?",
    "c": null,
    "o": [
      "Use parametric equations for x, y, z and `ax.plot3D(x, y, z)`",
      "Call `ax.plot_spiral(x, y, z)`",
      "Use `ax.plot_wireframe()` with circular coordinates",
      "Use `ax.spiral3D()` with polar inputs"
    ]
  },
  {
    "q": "Which function helps in converting 2D meshgrids into flattened coordinate arrays for 3D plotting?",
    "c": null,
    "o": [
      "ravel()",
      "reshape(-1)",
      "flatten()",
      "unroll()"
    ]
  },
  {
    "q": "Which is **NOT** a valid 3D plotting function in Matplotlib?",
    "c": null,
    "o": [
      "ax.plot_density()",
      "ax.plot_surface()",
      "ax.plot_wireframe()",
      "ax.scatter3D()"
    ]
  },
  {
    "q": "What does `ax.quiver()` do in a 3D plot?",
    "c": null,
    "o": [
      "Draws 3D vectors as arrows at specified positions",
      "Creates 3D spiral lines",
      "Plots a contour surface",
      "Displays heatmap of gradients"
    ]
  },
  {
    "q": "Which command is used to convert a 2D subplot into a 3D one?",
    "c": null,
    "o": [
      "ax = fig.add_subplot(111, projection='3d')",
      "plt.set_3d(True)",
      "fig.make_3d_plot()",
      "ax.convert_3d()"
    ]
  },
  {
    "q": "What does the `shade` parameter in `plot_surface()` affect?",
    "c": null,
    "o": [
      "Controls whether lighting and shading effects are applied",
      "Applies a shadow to the axes",
      "Makes the plot transparent",
      "Applies edge highlighting only"
    ]
  },
  {
    "q": "Which Matplotlib feature allows combining 3D plots with 2D subplots in the same figure?",
    "c": null,
    "o": [
      "Using `subplot2grid()` or `gridspec`",
      "Calling `ax.join_axes()`",
      "Setting `ax.multi3d()`",
      "Using `fig.merge_plots()`"
    ]
  },
  {
    "q": "How can you control the Z-order of a 3D surface to prevent overlap with other objects?",
    "c": null,
    "o": [
      "Use `zorder` parameter in the plotting function",
      "Call `ax.set_layer()`",
      "Set `depth=priority_value`",
      "Change draw order using `reorder_z()`"
    ]
  },
  {
    "q": "What is the purpose of `ax.plot_trisurf()` in Matplotlib's 3D module?",
    "c": null,
    "o": [
      "To create a triangular surface plot from scattered points",
      "To plot 3D wireframe from regular grid data",
      "To create isosurface visualization",
      "To generate 3D heatmaps"
    ]
  },
  {
    "q": "Which condition must be met when using `ax.plot_surface(X, Y, Z)`?",
    "c": null,
    "o": [
      "X, Y, and Z must be 2D arrays of the same shape",
      "Z must be a 1D array",
      "X and Y must be meshgrids but Z can be any shape",
      "Z must be a scalar function"
    ]
  },
  {
    "q": "Which method can be used to plot multiple 3D surfaces in a single plot?",
    "c": null,
    "o": [
      "Call `ax.plot_surface()` multiple times",
      "Use `ax.multi_surface()`",
      "Use `ax.merge_surfaces()`",
      "Only one surface can be drawn at a time"
    ]
  },
  {
    "q": "What does `ax.set_proj_type('ortho')` do in a 3D plot?",
    "c": null,
    "o": [
      "Changes the projection to orthographic (no perspective distortion)",
      "Rotates the 3D axis 90 degrees",
      "Changes from 3D to 2D projection",
      "Disables shading effects"
    ]
  },
  {
    "q": "What does the `stride` parameter control in `plot_wireframe()` and `plot_surface()`?",
    "c": null,
    "o": [
      "Spacing between lines drawn on the surface",
      "Line width of the wireframe",
      "Transparency level of the surface",
      "Rate of plot update in animations"
    ]
  },
  {
    "q": "Which of the following is used to render contour plots on 3D axes?",
    "c": null,
    "o": [
      "ax.contour3D()",
      "ax.plot_contour3()",
      "ax.surface_contour()",
      "ax.draw_iso()"
    ]
  },
  {
    "q": "In `scatter3D`, how can the color of each point be dynamically mapped to a value?",
    "c": null,
    "o": [
      "Using the `c` parameter with a value array",
      "Assigning color in `z` directly",
      "Using `color_map = True`",
      "Specifying `dynamic_colors=True`"
    ]
  },
  {
    "q": "Which argument in `plot_surface()` helps define the surface's smoothness?",
    "c": null,
    "o": [
      "rstride and cstride",
      "zlevel",
      "granularity",
      "alpha_smooth"
    ]
  },
  {
    "q": "What is the purpose of `ax.set_box_aspect([1, 1, 1])`?",
    "c": null,
    "o": [
      "Ensures equal scaling along all 3 axes",
      "Draws box around the plot",
      "Fixes the plot's size on screen",
      "Removes padding in figure"
    ]
  },
  {
    "q": "Which of the following is true about `ax.plot_surface(..., facecolors=...)`?",
    "c": null,
    "o": [
      "It allows coloring individual surface patches with an RGBA array",
      "It sets a global face color for the surface",
      "It changes edge color of the mesh",
      "It adjusts color of axes labels"
    ]
  },
  {
    "q": "Which method is used to add a 3D subplot to a Matplotlib figure?",
    "c": null,
    "o": [
      "fig.add_subplot(111, projection='3d')",
      "fig.add_subplot3D()",
      "plt.subplot3d()",
      "fig.set_projection('3d')"
    ]
  },
  {
    "q": "What will happen if you try to use `plot_surface()` with mismatched X, Y, Z shapes?",
    "c": null,
    "o": [
      "A ValueError will be raised",
      "It will auto-correct the shapes",
      "It will plot a flat plane",
      "Z values will be ignored"
    ]
  },
  {
    "q": "Which method is ideal for plotting 3D line paths in Matplotlib?",
    "c": null,
    "o": [
      "ax.plot3D(x, y, z)",
      "ax.line_path_3d(x, y, z)",
      "ax.plot_surface(x, y, z)",
      "ax.draw_curve3D(x, y, z)"
    ]
  },
  {
    "q": "What does `ax.azim` and `ax.elev` control in a 3D plot?",
    "c": null,
    "o": [
      "The azimuth and elevation angles of the view",
      "The width and height of the figure",
      "Z-axis scaling and grid style",
      "Line color and opacity"
    ]
  },
  {
    "q": "How do you remove grid lines from a 3D plot?",
    "c": null,
    "o": [
      "ax.grid(False)",
      "ax.set_grid_style('none')",
      "plt.hide_3d_grid()",
      "ax.remove_grid()"
    ]
  },
  {
    "q": "Which parameter in `plot_surface()` adjusts the transparency of the surface?",
    "c": null,
    "o": [
      "alpha",
      "shade",
      "depth",
      "opacity_level"
    ]
  },
  {
    "q": "Which module must be imported to enable 3D plotting in Matplotlib?",
    "c": null,
    "o": [
      "mpl_toolkits.mplot3d",
      "matplotlib.plot3d",
      "mpl_3dtools",
      "matplotlib.toolkits.surface"
    ]
  },
  {
    "q": "Which 3D plot is suitable for showing only the edges (no surface)?",
    "c": null,
    "o": [
      "ax.plot_wireframe()",
      "ax.plot_surface(..., alpha=0)",
      "ax.meshgrid_lines()",
      "ax.contour3D()"
    ]
  },
  {
    "q": "How can you set the axis labels for a 3D plot?",
    "c": null,
    "o": [
      "Using ax.set_xlabel(), ax.set_ylabel(), and ax.set_zlabel()",
      "By calling plt.label_axes_3d()",
      "With ax.set_label3D()",
      "With ax.label('x', 'y', 'z')"
    ]
  },
  {
    "q": "Which function helps generate grid data for 3D plotting from 1D arrays?",
    "c": null,
    "o": [
      "numpy.meshgrid()",
      "matplotlib.grid_3d()",
      "numpy.grid3d()",
      "mpl.create_grid()"
    ]
  },
  {
    "q": "Which argument in `plot_surface()` controls the color mapping of the surface?",
    "c": null,
    "o": [
      "cmap",
      "color",
      "colormap",
      "surface_color"
    ]
  },
  {
    "q": "What is the effect of setting `rstride` and `cstride` in `plot_surface()`?",
    "c": null,
    "o": [
      "It controls the stride (step) size for row and column sampling",
      "It changes the axis range",
      "It adds noise to the surface",
      "It smoothens the plot surface"
    ]
  },
  {
    "q": "How can you add a color bar to a 3D surface plot in Matplotlib?",
    "c": null,
    "o": [
      "fig.colorbar(surf)",
      "ax.add_colorbar(surf)",
      "ax.colorbar3D()",
      "plt.colorbar_3d(surf)"
    ]
  },
  {
    "q": "What does the `shade` parameter do in `plot_surface()`?",
    "c": null,
    "o": [
      "It enables/disables shading based on light source",
      "It sets the color gradient of surface",
      "It controls line width",
      "It rotates the surface"
    ]
  },
  {
    "q": "Which Matplotlib object type is returned by `plot_wireframe()`?",
    "c": null,
    "o": [
      "Line3DCollection",
      "Poly3DCollection",
      "Path3D",
      "WireframePatch"
    ]
  },
  {
    "q": "Which method is used to animate a rotating 3D plot in Matplotlib?",
    "c": null,
    "o": [
      "FuncAnimation from matplotlib.animation",
      "ax.rotate3d()",
      "animate3D() from mpl_toolkits",
      "plt.3d_anim()"
    ]
  },
  {
    "q": "Which axis method sets equal aspect ratio for 3D plots?",
    "c": null,
    "o": [
      "ax.set_box_aspect([1,1,1])",
      "ax.set_aspect_equal()",
      "ax.set_equal_3d()",
      "ax.aspect_mode('equal')"
    ]
  },
  {
    "q": "What is the purpose of `ax.dist` in 3D plots?",
    "c": null,
    "o": [
      "It controls the distance of the viewer from the plot",
      "It sets the distance between ticks",
      "It scales the z-axis",
      "It changes plot resolution"
    ]
  },
  {
    "q": "What does `ax.view_init()` do in 3D plotting?",
    "c": null,
    "o": [
      "It sets the elevation and azimuth angle of view",
      "It sets the initial zoom level",
      "It adjusts light direction",
      "It sets plot origin"
    ]
  },
  {
    "q": "Which 3D function is suitable for contour plotting on 3D surfaces?",
    "c": null,
    "o": [
      "ax.contour3D()",
      "ax.plot_contour_surface()",
      "plt.contourf_3d()",
      "ax.surface_contour()"
    ]
  },
  {
    "q": "Which of the following can be used to add transparency to a surface in `plot_surface()`?",
    "c": null,
    "o": [
      "alpha",
      "transparency",
      "opacity",
      "fade"
    ]
  },
  {
    "q": "What happens if `rstride` and `cstride` are too high in `plot_surface()`?",
    "c": null,
    "o": [
      "The surface appears blocky due to under-sampling",
      "The surface becomes smoother",
      "The plot throws a ValueError",
      "It disables the z-axis"
    ]
  },
  {
    "q": "How can you plot a 3D bar chart in Matplotlib?",
    "c": null,
    "o": [
      "Using ax.bar3d()",
      "Using ax.bar()",
      "Using plt.bar3d()",
      "Using plot_surface() with bar=True"
    ]
  },
  {
    "q": "In `ax.plot_surface()`, how are the facecolors controlled?",
    "c": null,
    "o": [
      "By the `facecolors` parameter using an array or colormap",
      "By setting `edgecolor` to 'face'",
      "Only by `cmap`, nothing else",
      "Through `surface_color_map()`"
    ]
  },
  {
    "q": "What does setting `antialiased=False` do in `plot_surface()`?",
    "c": null,
    "o": [
      "Disables smoothing of surface edges",
      "Increases resolution of the surface",
      "Disables surface rendering",
      "Changes surface to wireframe"
    ]
  },
  {
    "q": "Which of the following is a valid argument to set z-axis scale?",
    "c": null,
    "o": [
      "ax.set_zscale('log')",
      "ax.zaxis('log')",
      "ax.set_zlog()",
      "ax.zscale('log')"
    ]
  },
  {
    "q": "Which module provides 3D plotting tools in Matplotlib?",
    "c": null,
    "o": [
      "mpl_toolkits.mplot3d",
      "matplotlib.plot3d",
      "matplotlib.surface",
      "mpl_3dtoolkit"
    ]
  },
  {
    "q": "What is the shape requirement of `X`, `Y`, and `Z` in `plot_surface()`?",
    "c": null,
    "o": [
      "They must all be 2D arrays of the same shape",
      "They must be 1D arrays of equal length",
      "Only `Z` needs to be 2D",
      "They must all be scalar values"
    ]
  },
  {
    "q": "What does `ax.invert_zaxis()` do in a 3D plot?",
    "c": null,
    "o": [
      "Flips the z-axis direction",
      "Disables the z-axis rendering",
      "Swaps x and z axes",
      "Sets z-axis to default range"
    ]
  },
  {
    "q": "Which of the following is used to generate a 3D contour plot?",
    "c": null,
    "o": [
      "ax.contour3D(X, Y, Z)",
      "ax.plot_surface_contour(X, Y, Z)",
      "plt.contour3D(X, Y, Z)",
      "ax.surface3D_contour()"
    ]
  },
  {
    "q": "Which Matplotlib function is used to project 3D plots onto a 2D plane?",
    "c": null,
    "o": [
      "ax.view_init()",
      "ax.project()",
      "ax.render2D()",
      "ax.flatten()"
    ]
  },
  {
    "q": "What happens if the lengths of X, Y, and Z are inconsistent in `ax.plot3D()`?",
    "c": null,
    "o": [
      "A ValueError is raised",
      "The plot ignores mismatched values",
      "It fills missing values with 0",
      "The Z-axis is automatically scaled"
    ]
  },
  {
    "q": "Which method in Matplotlib's 3D API allows adding text at 3D coordinates?",
    "c": null,
    "o": [
      "ax.text(x, y, z, s)",
      "ax.text3D(x, y, z, s)",
      "ax.add_text(x, y, z, s)",
      "plt.text(x, y, z, s)"
    ]
  },
  {
    "q": "What does `ax.plot_wireframe()` render?",
    "c": null,
    "o": [
      "A wireframe grid over 3D data",
      "Only the z-axis curve",
      "A solid filled surface",
      "A 2D mesh with 3D projection"
    ]
  },
  {
    "q": "How do you rotate a 3D plot interactively in Matplotlib?",
    "c": null,
    "o": [
      "Using the toolbar in interactive backends like `TkAgg`",
      "Calling `ax.rotate(…)`",
      "Enabling `interactive=True` in `plot_surface()`",
      "Using `ax.view_rotate()`"
    ]
  },
  {
    "q": "What does `ax.grid(False)` do in a 3D plot?",
    "c": null,
    "o": [
      "Hides the background grid",
      "Disables axis limits",
      "Disables 3D rotation",
      "Removes all plotted lines"
    ]
  },
  {
    "q": "Which of the following is **not** a valid projection type for a 3D plot?",
    "c": null,
    "o": [
      "cylindrical",
      "perspective",
      "ortho",
      "auto"
    ]
  },
  {
    "q": "What does `shade=False` do in `plot_surface()`?",
    "c": null,
    "o": [
      "Disables light shading and uses flat colors",
      "Disables the color bar",
      "Inverts the z-axis shading",
      "Applies a grayscale filter"
    ]
  },
  {
    "q": "Which command is used to set equal aspect ratio for all axes in 3D?",
    "c": null,
    "o": [
      "ax.set_box_aspect([1,1,1])",
      "ax.set_aspect('equal')",
      "ax.equalize_axes()",
      "ax.aspect3D(1)"
    ]
  },
  {
    "q": "To create a 3D scatter plot with colored points based on Z, which parameter is used?",
    "c": null,
    "o": [
      "c=Z",
      "color_map=Z",
      "zcolor=Z",
      "scatter_by_z=Z"
    ]
  },
  {
    "q": "In Matplotlib's 3D plotting, what is the purpose of `ax.plot_surface(X, Y, Z, cmap='viridis')`?",
    "c": null,
    "o": [
      "It colors the surface using the 'viridis' colormap",
      "It adds a wireframe on top of the surface",
      "It removes depth perception from the surface",
      "It plots a transparent surface"
    ]
  },
  {
    "q": "What does `ax.contour3D(X, Y, Z, 50)` plot?",
    "c": null,
    "o": [
      "3D contour lines with 50 levels",
      "A wireframe with 50 segments",
      "A 2D contour projected on 3D axes",
      "A bar chart in 3D"
    ]
  },
  {
    "q": "Which keyword argument controls transparency in `plot_surface()`?",
    "c": null,
    "o": [
      "alpha",
      "opacity",
      "transparency",
      "visible"
    ]
  },
  {
    "q": "In `plot_wireframe()`, what happens if the stride values are too high?",
    "c": null,
    "o": [
      "Fewer lines are drawn, resulting in a sparser wireframe",
      "The plot raises an error",
      "The wireframe becomes invisible",
      "The mesh becomes solid filled"
    ]
  },
  {
    "q": "How can you label the z-axis in a 3D Matplotlib plot?",
    "c": null,
    "o": [
      "ax.set_zlabel('Z Axis')",
      "ax.zlabel('Z Axis')",
      "ax.label_z('Z Axis')",
      "plt.zlabel('Z Axis')"
    ]
  },
  {
    "q": "Which method allows changing the viewing angle in a 3D plot?",
    "c": null,
    "o": [
      "ax.view_init(elev, azim)",
      "ax.set_angle(elev, azim)",
      "plt.view3D(elev, azim)",
      "ax.set_viewport(elev, azim)"
    ]
  },
  {
    "q": "What is the role of `projection='3d'` in `add_subplot()`?",
    "c": null,
    "o": [
      "It enables 3D plotting capabilities",
      "It sets the plot to orthographic view",
      "It disables 2D axes scaling",
      "It creates 3 plots stacked in 3D"
    ]
  },
  {
    "q": "Which of the following creates a 3D bar chart?",
    "c": null,
    "o": [
      "ax.bar3d(x, y, z, dx, dy, dz)",
      "ax.plot_bar(x, y, z)",
      "ax.bar(x, y, z)",
      "ax.bars3D(x, y, z)"
    ]
  },
  {
    "q": "How can you customize tick locations on a 3D z-axis?",
    "c": null,
    "o": [
      "ax.set_zticks([0, 1, 2])",
      "plt.zticks([0, 1, 2])",
      "ax.zticks = [0, 1, 2]",
      "ax.zaxis.ticks([0, 1, 2])"
    ]
  },
  {
    "q": "Which attribute gives access to the 3D axes object in Matplotlib?",
    "c": null,
    "o": [
      "Axes3D",
      "Axis3D",
      "Axes.plot3D",
      "Figure3D"
    ]
  },
  {
    "q": "What is the function of `ax.scatter3D(x, y, z)` in Matplotlib?",
    "c": null,
    "o": [
      "It creates a 3D scatter plot",
      "It creates a 3D line plot",
      "It creates a 2D scatter plot projected in 3D",
      "It creates a bar chart with depth"
    ]
  },
  {
    "q": "Which of the following is needed to use 3D plotting in Matplotlib?",
    "c": null,
    "o": [
      "from mpl_toolkits.mplot3d import Axes3D",
      "import matplotlib.pyplot as plt3D",
      "import mpl_3d as mplot",
      "from matplotlib import threeD"
    ]
  },
  {
    "q": "In a 3D plot, what does `ax.plot3D(x, y, z)` do?",
    "c": null,
    "o": [
      "Plots a 3D line connecting the (x, y, z) coordinates",
      "Creates a surface plot from x, y, z meshgrids",
      "Plots 2D data on a 3D axis",
      "Renders a 3D bar chart"
    ]
  },
  {
    "q": "What is required to generate a surface plot using `plot_surface()`?",
    "c": null,
    "o": [
      "X, Y, and Z should be 2D arrays of the same shape",
      "X, Y, Z should be 1D arrays of equal length",
      "Only Z needs to be a 2D array",
      "X and Y should be lists, Z must be a numpy matrix"
    ]
  },
  {
    "q": "Which method sets the title of a 3D plot?",
    "c": null,
    "o": [
      "ax.set_title('Title')",
      "plt.title3D('Title')",
      "ax.title3D('Title')",
      "ax.plot_title('Title')"
    ]
  },
  {
    "q": "What does `ax.text(x, y, z, 'label')` do in a 3D plot?",
    "c": null,
    "o": [
      "Adds a 3D text label at the specified coordinates",
      "Adds a legend with label",
      "Draws a line labeled at the z-position",
      "Inserts a 2D label outside the 3D plot"
    ]
  },
  {
    "q": "Which method is used to create filled 3D contours?",
    "c": null,
    "o": [
      "ax.contourf3D(X, Y, Z, levels)",
      "ax.fill3D(X, Y, Z)",
      "ax.contour_fill(X, Y, Z)",
      "plt.filled3D(X, Y, Z)"
    ]
  },
  {
    "q": "What is the use of `cmap` in 3D plotting?",
    "c": null,
    "o": [
      "To apply a color gradient based on Z values",
      "To define the canvas background color",
      "To set axis label colors",
      "To control the colormap of gridlines only"
    ]
  },
  {
    "q": "What does `ax.grid(True)` do in a 3D Matplotlib plot?",
    "c": null,
    "o": [
      "Enables gridlines on all three axes",
      "Adds tick labels",
      "Makes the surface plot visible",
      "Projects the z-axis to 2D"
    ]
  },
  {
    "q": "Which attribute sets limits for the z-axis?",
    "c": null,
    "o": [
      "ax.set_zlim(min, max)",
      "ax.limit_z(min, max)",
      "ax.zaxis.range(min, max)",
      "plt.zlim(min, max)"
    ]
  },
  {
    "q": "Which function is commonly used to generate coordinate matrices for 3D plots?",
    "c": null,
    "o": [
      "numpy.meshgrid()",
      "matplotlib.grid3D()",
      "axes3D.coord_matrix()",
      "numpy.coord3d()"
    ]
  },
  {
    "q": "In a 3D surface plot, what does `rstride` and `cstride` control?",
    "c": null,
    "o": [
      "The row and column stride (sampling) of the surface plot",
      "The thickness of the surface lines",
      "The resolution of the colormap",
      "The axes limits for x and y"
    ]
  },
  {
    "q": "What does `ax.view_init(elev=30, azim=60)` do in a 3D plot?",
    "c": null,
    "o": [
      "Changes the elevation and azimuthal angle of the view",
      "Rotates the plot in real-time",
      "Zooms into the 3D surface",
      "Shifts the axes labels"
    ]
  },
  {
    "q": "What is the default backend that supports interactive 3D plotting in Jupyter notebooks?",
    "c": null,
    "o": [
      "%matplotlib notebook",
      "%matplotlib inline",
      "%plotly",
      "%3dplot enable"
    ]
  },
  {
    "q": "How do you label the Z-axis of a 3D plot?",
    "c": null,
    "o": [
      "ax.set_zlabel('Label')",
      "plt.zlabel('Label')",
      "ax.label_z('Label')",
      "ax.zaxis.label('Label')"
    ]
  },
  {
    "q": "Which function is used to plot 3D bar charts in Matplotlib?",
    "c": null,
    "o": [
      "ax.bar3d()",
      "ax.plot_bar3D()",
      "plt.barz()",
      "ax.bars3d()"
    ]
  },
  {
    "q": "What does `shade=True` do in `plot_surface()`?",
    "c": null,
    "o": [
      "Applies lighting effects to enhance 3D appearance",
      "Makes the surface partially transparent",
      "Hides the wireframe grid",
      "Smoothens jagged lines"
    ]
  },
  {
    "q": "Which parameter controls the transparency of a surface plot?",
    "c": null,
    "o": [
      "alpha",
      "opacity",
      "transparency",
      "visible"
    ]
  },
  {
    "q": "What is the role of `ax.quiver()` in 3D Matplotlib plots?",
    "c": null,
    "o": [
      "To draw vectors (arrows) in 3D space",
      "To render curved lines",
      "To create color maps on surfaces",
      "To enable user interactivity"
    ]
  },
  {
    "q": "What does `ax.set_box_aspect([1,1,1])` ensure?",
    "c": null,
    "o": [
      "Equal aspect ratio across all axes in a 3D plot",
      "Box edges are hidden",
      "Axes are scaled based on screen resolution",
      "Legend box is automatically scaled"
    ]
  },
  {
    "q": "What does the `ax.plot_wireframe()` function render in a 3D plot?",
    "c": null,
    "o": [
      "A wireframe surface from X, Y, Z data points",
      "A solid surface with colors",
      "Only the X and Y axes",
      "A 2D line plot embedded in 3D space"
    ]
  },
  {
    "q": "In `plot_wireframe`, what is the effect of using fewer `rstride` and `cstride` values?",
    "c": null,
    "o": [
      "It increases the density of the mesh grid lines",
      "It makes the wireframe disappear",
      "It colors each segment differently",
      "It increases the opacity of the plot"
    ]
  },
  {
    "q": "Which Matplotlib function adds a colorbar to 3D surface plots?",
    "c": null,
    "o": [
      "fig.colorbar()",
      "ax.colorbar3D()",
      "plt.colormap3D()",
      "ax.set_colorbar()"
    ]
  },
  {
    "q": "What does the `ax.contour3D()` function do?",
    "c": null,
    "o": [
      "Draws 3D contour lines on specified levels of Z",
      "Projects a 2D contour map onto 3D axes",
      "Generates a shaded surface",
      "Adds a bounding box around the surface"
    ]
  },
  {
    "q": "What is the main difference between `plot_surface()` and `plot_trisurf()`?",
    "c": null,
    "o": [
      "`plot_surface()` requires grid data; `plot_trisurf()` supports unstructured points",
      "`plot_trisurf()` is for 2D plots only",
      "`plot_surface()` can't use color maps",
      "They produce the same plot but with different colors"
    ]
  },
  {
    "q": "What does the `facecolors` parameter in `plot_surface()` control?",
    "c": null,
    "o": [
      "The color of each surface patch individually",
      "The background of the plot",
      "The color of the Z-axis label",
      "The shading intensity"
    ]
  },
  {
    "q": "Which method is used to draw a 3D scatter plot?",
    "c": null,
    "o": [
      "ax.scatter()",
      "ax.plot_scatter3D()",
      "ax.scatter3()",
      "plt.scatter_3d()"
    ]
  },
  {
    "q": "What happens if the arrays passed to `plot_surface()` are not the same shape?",
    "c": null,
    "o": [
      "A ValueError is raised",
      "They are automatically reshaped",
      "The function falls back to 2D plotting",
      "The plot is created with NaN patches"
    ]
  },
  {
    "q": "Which function lets you visualize vector fields in 3D using cones or arrows?",
    "c": null,
    "o": [
      "ax.quiver()",
      "ax.vectorplot()",
      "ax.vector_field()",
      "ax.arrow3D()"
    ]
  },
  {
    "q": "To rotate a 3D plot using animation, which module is commonly used with Matplotlib?",
    "c": null,
    "o": [
      "matplotlib.animation",
      "mpl_toolkits.rotate3D",
      "plotly.animate3d",
      "vtk.rotate_plot"
    ]
  },
  {
    "q": "Which parameter in `plot_surface()` controls how many triangles are drawn?",
    "c": null,
    "o": [
      "rstride and cstride",
      "linewidth",
      "shading",
      "alpha"
    ]
  },
  {
    "q": "What is the purpose of `ax.set_box_aspect([1,1,1])` in a 3D plot?",
    "c": null,
    "o": [
      "To ensure all axes have equal scaling",
      "To create a bounding box",
      "To flatten the surface plot",
      "To set the padding around axes"
    ]
  },
  {
    "q": "Which method is used to generate 3D bar plots in Matplotlib?",
    "c": null,
    "o": [
      "ax.bar3d()",
      "ax.plot_bar_3d()",
      "ax.bar() with 3D=True",
      "ax.barsurf()"
    ]
  },
  {
    "q": "How can you set the view angle of a 3D plot?",
    "c": null,
    "o": [
      "Using ax.view_init(elev, azim)",
      "Using plt.rotate(elev, azim)",
      "Using ax.set_view(elev, azim)",
      "Using ax.rotate3d()"
    ]
  },
  {
    "q": "What does setting `shade=False` in `plot_surface()` do?",
    "c": null,
    "o": [
      "Disables lighting/shading and uses flat color mapping",
      "Hides the surface",
      "Applies a grayscale map",
      "Uses only wireframe instead of surface"
    ]
  },
  {
    "q": "What is the role of `zdir` in `ax.contour()` or `ax.contourf()`?",
    "c": null,
    "o": [
      "Specifies the direction to project the contour (e.g., 'x', 'y', 'z')",
      "Sets the depth of the surface",
      "Controls the zoom level",
      "Defines the aspect ratio"
    ]
  },
  {
    "q": "Which method is used to create a filled 3D contour plot?",
    "c": null,
    "o": [
      "ax.contourf()",
      "ax.plot_filled()",
      "ax.fill3d()",
      "ax.contour3D() with fill=True"
    ]
  },
  {
    "q": "In `ax.plot_surface()`, how do you make the plot partially transparent?",
    "c": null,
    "o": [
      "Use the `alpha` parameter (e.g., alpha=0.5)",
      "Set zorder to a lower value",
      "Disable lighting",
      "Enable transparent mode in `set_3d_properties()`"
    ]
  },
  {
    "q": "What is the result of calling `ax.grid(True)` on a 3D plot?",
    "c": null,
    "o": [
      "It shows the background 3D grid",
      "It enables minor ticks on all axes",
      "It changes the surface grid color",
      "It rotates the view to grid mode"
    ]
  },
  {
    "q": "What does `ax.set_zlim()` do in a 3D plot?",
    "c": null,
    "o": [
      "Sets the limits of the Z-axis range",
      "Applies a zoom to the Z-direction",
      "Shifts the plot along the Z-axis",
      "Locks the rotation on the Z-axis"
    ]
  },
  {
    "q": "Which function is used in Matplotlib to create 3D scatter plots?",
    "c": null,
    "o": [
      "ax.scatter()",
      "ax.plot_surface()",
      "ax.bar3d()",
      "ax.plot_wireframe()"
    ]
  },
  {
    "q": "How do you import the 3D toolkit for Matplotlib?",
    "c": null,
    "o": [
      "from mpl_toolkits.mplot3d import Axes3D",
      "import matplotlib.3d as mplot3d",
      "from matplotlib import Axes3D",
      "import mpl.3d as Axes3D"
    ]
  },
  {
    "q": "Which method creates a wireframe 3D plot?",
    "c": null,
    "o": [
      "ax.plot_wireframe()",
      "ax.plot3d()",
      "ax.wireplot()",
      "ax.surface_wire()"
    ]
  },
  {
    "q": "What does the 'rstride' parameter control in `plot_surface()`?",
    "c": null,
    "o": [
      "The row step size for sampling data",
      "The radius of the plot",
      "The rendering quality",
      "The rotation stride of the axes"
    ]
  },
  {
    "q": "Which colormap parameter is used in `plot_surface()` to apply color mapping?",
    "c": null,
    "o": [
      "cmap",
      "color",
      "colormap",
      "gradient"
    ]
  },
  {
    "q": "Which of the following is used to adjust the 3D plot's elevation and azimuth?",
    "c": null,
    "o": [
      "ax.view_init()",
      "ax.set_angle()",
      "ax.set_3d_view()",
      "plt.angles()"
    ]
  },
  {
    "q": "What happens if you don't set `projection='3d'` when creating a 3D plot?",
    "c": null,
    "o": [
      "The plot will be 2D",
      "It raises an error",
      "The plot will be interactive only",
      "The Z-axis is plotted flat"
    ]
  },
  {
    "q": "What does `ax.plot_trisurf()` do?",
    "c": null,
    "o": [
      "Plots a triangular surface plot in 3D",
      "Plots a filled 3D contour plot",
      "Creates a 3D bar graph",
      "Adds triangle mesh as wireframe"
    ]
  },
  {
    "q": "Which library can be used for interactive 3D plots besides Matplotlib?",
    "c": null,
    "o": [
      "Plotly",
      "Seaborn",
      "OpenCV",
      "Pandas"
    ]
  },
  {
    "q": "What is the use of `ax.text(x, y, z, text)` in a 3D plot?",
    "c": null,
    "o": [
      "To annotate a point in 3D space",
      "To set axis labels",
      "To plot a title",
      "To create tooltips"
    ]
  },
  {
    "q": "Which function is used to add a color bar to a 3D surface plot in Matplotlib?",
    "c": null,
    "o": [
      "fig.colorbar()",
      "ax.add_colorbar()",
      "plt.color_surface()",
      "ax.colorbar3D()"
    ]
  },
  {
    "q": "What does the `shade` parameter do in `plot_surface()`?",
    "c": null,
    "o": [
      "Enables lighting effects on the surface",
      "Changes the background color",
      "Enables anti-aliasing",
      "Smooths the edges of the plot"
    ]
  },
  {
    "q": "Which of the following creates a 3D bar plot?",
    "c": null,
    "o": [
      "ax.bar3d()",
      "ax.bar()",
      "ax.plot_bars3D()",
      "ax.plot_bar()"
    ]
  },
  {
    "q": "Which Matplotlib method is typically used to create a 3D figure?",
    "c": null,
    "o": [
      "fig.add_subplot(111, projection='3d')",
      "plt.figure3D()",
      "plt.plot3d()",
      "ax.create_3d_axes()"
    ]
  },
  {
    "q": "How can you make a 3D scatter plot more readable when overlapping occurs?",
    "c": null,
    "o": [
      "Adjust `alpha` and `s` values",
      "Enable `grid3D=True`",
      "Increase DPI only",
      "Switch to 2D for clarity"
    ]
  },
  {
    "q": "Which function is used to create 3D contours in Matplotlib?",
    "c": null,
    "o": [
      "ax.contour3D()",
      "ax.plot_contour()",
      "ax.draw3dcontour()",
      "ax.contour_surface()"
    ]
  },
  {
    "q": "What happens when you call `ax.set_zlim()`?",
    "c": null,
    "o": [
      "Sets the Z-axis limit range",
      "Zooms into the plot",
      "Fixes the 3D rotation",
      "Rotates the view to Z angle"
    ]
  },
  {
    "q": "Which parameter in `plot_surface()` can smooth color transitions?",
    "c": null,
    "o": [
      "cmap",
      "linewidth",
      "rstride",
      "zorder"
    ]
  },
  {
    "q": "To animate a 3D plot in Matplotlib, which module is often used?",
    "c": null,
    "o": [
      "matplotlib.animation",
      "matplotlib.motion",
      "mpl.animate3D",
      "matplotlib.3dtools"
    ]
  },
  {
    "q": "What does setting `elev=30, azim=45` in `view_init()` do?",
    "c": null,
    "o": [
      "Changes the elevation and rotation angle of the 3D view",
      "Zooms into the Z-axis",
      "Rotates only the X-axis",
      "Locks the 3D camera position"
    ]
  },
  {
    "q": "In a 3D plot using Matplotlib, what does the `rcount` and `ccount` parameters in `plot_surface()` control?",
    "c": null,
    "o": [
      "The number of rows and columns used to sample the surface",
      "The RGB color intensity levels",
      "The depth and lighting of the surface",
      "The number of contour lines shown"
    ]
  },
  {
    "q": "What is the correct method to save a 3D Matplotlib figure with a transparent background?",
    "c": null,
    "o": [
      "plt.savefig('plot.png', transparent=True)",
      "fig.save3d('plot.png')",
      "ax.save('plot.png', alpha=0)",
      "plt.export_3d('plot.png', background='transparent')"
    ]
  },
  {
    "q": "Which of the following is required to make a 3D line plot with varying color along the path?",
    "c": null,
    "o": [
      "Using `Line3DCollection` from `mpl_toolkits.mplot3d.art3d`",
      "Using `ax.plot()` with `color_gradient=True`",
      "Setting `vary_color=True` in `ax.plot3D()`",
      "Adding `shade=True` in `plot_surface()`"
    ]
  },
  {
    "q": "How can you rotate a 3D plot interactively in a Jupyter Notebook?",
    "c": null,
    "o": [
      "%matplotlib notebook",
      "%3d rotate enable",
      "%enable plot3d",
      "%view3d on"
    ]
  },
  {
    "q": "Which Matplotlib 3D plotting function allows customization of stride values along the surface grid?",
    "c": null,
    "o": [
      "plot_surface()",
      "plot_wireframe()",
      "plot3D()",
      "plot_grid()"
    ]
  },
  {
    "q": "What is a major visual difference between `plot_surface()` and `plot_wireframe()` in Matplotlib 3D plots?",
    "c": null,
    "o": [
      "plot_surface() fills surfaces; plot_wireframe() only draws grid lines",
      "plot_surface() works in 2D; plot_wireframe() in 3D",
      "plot_surface() is deprecated; plot_wireframe() is not",
      "plot_wireframe() supports transparency while plot_surface() doesn't"
    ]
  },
  {
    "q": "Which of the following parameters helps reduce aliasing in 3D surface plots?",
    "c": null,
    "o": [
      "antialiased=True",
      "smooth_lines=True",
      "blur=True",
      "interpolation='bicubic'"
    ]
  },
  {
    "q": "How would you set a specific face color for the 3D plot background?",
    "c": null,
    "o": [
      "ax.set_facecolor('color')",
      "plt.set_background_color('color')",
      "fig.set_3d_bgcolor('color')",
      "ax3d.face('color')"
    ]
  },
  {
    "q": "What will `ax.view_init(elev=0, azim=90)` display in a 3D plot?",
    "c": null,
    "o": [
      "A side view along the Y-axis",
      "A top-down view",
      "An isometric view",
      "An oblique angle view"
    ]
  },
  {
    "q": "To color a 3D scatter plot based on a third variable (e.g., temperature), you should:",
    "c": null,
    "o": [
      "Pass a `c` parameter with an array of values",
      "Set `shade=True`",
      "Use `color='temperature'`",
      "Call `ax.set_color_mapping()`"
    ]
  },
  {
    "q": "Which function is commonly used to create a mesh grid for 3D surface plotting in Matplotlib?",
    "c": null,
    "o": [
      "numpy.meshgrid()",
      "matplotlib.grid3D()",
      "mpl_toolkits.mesh()",
      "numpy.grid3d()"
    ]
  },
  {
    "q": "In a 3D surface plot, what does setting `shade=False` in `plot_surface()` do?",
    "c": null,
    "o": [
      "Disables lighting effects on the surface",
      "Removes color from the surface",
      "Enables antialiasing",
      "Changes surface to wireframe"
    ]
  },
  {
    "q": "How can you animate a rotating 3D plot in Matplotlib?",
    "c": null,
    "o": [
      "By updating the `azim` angle in a loop using `ax.view_init()`",
      "Using `ax.animate_rotate()` function",
      "By enabling `rotation=True` in `plot_surface()`",
      "3D plots cannot be animated in Matplotlib"
    ]
  },
  {
    "q": "Which parameter in `plot_surface()` controls the color of each face based on a scalar value?",
    "c": null,
    "o": [
      "facecolors",
      "color_gradient",
      "face_map",
      "shade_level"
    ]
  },
  {
    "q": "What does the `ax.set_xlim3d()`, `set_ylim3d()`, and `set_zlim3d()` methods do?",
    "c": null,
    "o": [
      "Set the 3D axis limits in X, Y, and Z directions respectively",
      "Enable 3D rotation limits",
      "Set plot resolution",
      "Zoom in on selected 3D data points"
    ]
  },
  {
    "q": "What is the effect of changing the `alpha` parameter in 3D plotting functions?",
    "c": null,
    "o": [
      "Controls the transparency of plotted elements",
      "Changes the axis alignment",
      "Adjusts the viewing angle",
      "Sets the figure’s aspect ratio"
    ]
  },
  {
    "q": "Which function is used to create a 3D bar plot in Matplotlib?",
    "c": null,
    "o": [
      "ax.bar3d()",
      "ax.plot_bar_3d()",
      "ax.bar() with z parameter",
      "ax.plot_bar3D()"
    ]
  },
  {
    "q": "When creating a 3D scatter plot with `ax.scatter()`, what does the `depthshade` parameter do?",
    "c": null,
    "o": [
      "Adds shading based on the Z-axis depth",
      "Controls the depth of the scatter points",
      "Applies a 3D blur effect",
      "Enables zooming on selected points"
    ]
  },
  {
    "q": "Which of the following is **true** about `ax.contour3D()` in Matplotlib?",
    "c": null,
    "o": [
      "It creates 3D contour lines from 3D data",
      "It is used to fill a 3D surface",
      "It renders 3D bar plots",
      "It displays a heatmap over 3D wireframes"
    ]
  },
  {
    "q": "How can you remove gridlines from a 3D Matplotlib plot?",
    "c": null,
    "o": [
      "ax.grid(False)",
      "plt.no_grid()",
      "ax.set_grid3d(False)",
      "grid3D.remove()"
    ]
  },
  {
    "q": "What does the `rstride` and `cstride` parameter in `plot_surface()` control?",
    "c": null,
    "o": [
      "Row and column stride step size for plotting surface",
      "Rotation speed of the 3D plot",
      "Row and column transparency levels",
      "Color scheme of surface"
    ]
  },
  {
    "q": "Which method can be used to set the viewing angle in a 3D Matplotlib plot?",
    "c": null,
    "o": [
      "ax.view_init(elev, azim)",
      "ax.set_angle()",
      "plt.rotate_3d()",
      "ax.set_viewport()"
    ]
  },
  {
    "q": "What is the role of `Axes3D` from `mpl_toolkits.mplot3d` in Matplotlib?",
    "c": null,
    "o": [
      "It enables 3D plotting capabilities",
      "It creates a new 2D axis with zoom",
      "It provides animation utilities",
      "It handles 3D text rendering only"
    ]
  },
  {
    "q": "Which keyword argument in `ax.plot_surface()` allows you to set the surface color based on a colormap?",
    "c": null,
    "o": [
      "cmap",
      "colormap",
      "color_map",
      "surface_map"
    ]
  },
  {
    "q": "How do you create a 3D line plot in Matplotlib?",
    "c": null,
    "o": [
      "ax.plot3D(x, y, z)",
      "ax.line3D(x, y, z)",
      "ax.line_plot(x, y, z)",
      "plt.line_3d(x, y, z)"
    ]
  },
  {
    "q": "In a 3D scatter plot, what does the `s` parameter represent?",
    "c": null,
    "o": [
      "Size of each point",
      "Speed of point animation",
      "Shadow intensity",
      "Z-order of the points"
    ]
  },
  {
    "q": "Which function would you use to project a contour plot onto a 3D surface?",
    "c": null,
    "o": [
      "ax.contourf()",
      "ax.proj_contour()",
      "ax.contour_surface()",
      "ax.map3D()"
    ]
  },
  {
    "q": "How can you reverse the Z-axis in a 3D Matplotlib plot?",
    "c": null,
    "o": [
      "ax.set_zlim(max, min)",
      "ax.reverse_z()",
      "plt.invert_zaxis()",
      "ax.zaxis.invert()"
    ]
  },
  {
    "q": "Which 3D plotting method would best visualize a regular 3D grid without surface coloring?",
    "c": null,
    "o": [
      "ax.plot_wireframe()",
      "ax.plot_surface() with alpha=0",
      "ax.plot3D()",
      "ax.grid3D()"
    ]
  },
  {
    "q": "What must you do before plotting 3D figures in Matplotlib?",
    "c": null,
    "o": [
      "Import Axes3D from mpl_toolkits.mplot3d",
      "Install matplotlib-3d manually",
      "Use `enable_3d=True` in `plt.figure()`",
      "Create a 3D axis using `ax3d()`"
    ]
  },
  {
    "q": "Which of the following is required to enable interactive rotation of a 3D plot in Matplotlib?",
    "c": null,
    "o": [
      "Using `%matplotlib notebook` in Jupyter",
      "Enabling `3d_interactive=True` in `plt.figure()`",
      "Calling `ax.enable_rotate()`",
      "Setting `interactive=True` in `ax.plot_surface()`"
    ]
  },
  {
    "q": "Which function is used to create a 3D bar chart in Matplotlib?",
    "c": null,
    "o": [
      "ax.bar3d()",
      "ax.plot_bar3D()",
      "plt.bar_3d()",
      "ax.hist3d()"
    ]
  },
  {
    "q": "What is the purpose of the `shade` parameter in `plot_surface()`?",
    "c": null,
    "o": [
      "To control the lighting effect on the surface",
      "To enable or disable shadows under surface",
      "To apply a grayscale colormap",
      "To smoothen the surface curves"
    ]
  },
  {
    "q": "Which of the following is true about `ax.scatter(xs, ys, zs)`?",
    "c": null,
    "o": [
      "It creates a 3D scatter plot",
      "It creates a 2D scatter plot with 3 data points",
      "It draws a surface with scattered values",
      "It is used to map 3D histograms"
    ]
  },
  {
    "q": "What is the correct way to import 3D plotting tools in Matplotlib?",
    "c": null,
    "o": [
      "from mpl_toolkits.mplot3d import Axes3D",
      "import matplotlib.pyplot as Axes3D",
      "from matplotlib import mplot3D",
      "import mplot3d as plt3D"
    ]
  },
  {
    "q": "What type of plot is most suitable to represent a mathematical function f(x, y) over a grid?",
    "c": null,
    "o": [
      "3D surface plot",
      "3D bar plot",
      "3D histogram",
      "3D scatter plot"
    ]
  },
  {
    "q": "How can you increase the resolution of a 3D surface plot?",
    "c": null,
    "o": [
      "Use finer meshgrid (smaller step sizes)",
      "Enable `high_res=True` in `plot_surface()`",
      "Set DPI parameter in `plot_surface()`",
      "Use `smooth=True` in the plot"
    ]
  },
  {
    "q": "What is the role of `ax.set_box_aspect([1,1,1])`?",
    "c": null,
    "o": [
      "It ensures equal aspect ratio for x, y, and z axes",
      "It creates a box-like grid for 3D plot",
      "It fits the plot into a square figure",
      "It adjusts the padding around the plot"
    ]
  },
  {
    "q": "Which of the following is true regarding lighting in Matplotlib 3D plots?",
    "c": null,
    "o": [
      "`plot_surface()` can simulate basic lighting using `shade=True`",
      "Matplotlib uses ray tracing for shadows",
      "Lighting must be manually imported from `mpl_lighting`",
      "3D lighting is not possible in Matplotlib"
    ]
  },
  {
    "q": "What does `zs` parameter control in `bar3d()`?",
    "c": null,
    "o": [
      "The base heights (z-levels) of the bars",
      "The bar transparency",
      "The bar colors",
      "The camera depth"
    ]
  },
  {
    "q": "Which Matplotlib method can be used to create contour lines on a 3D surface?",
    "c": null,
    "o": [
      "ax.contour3D()",
      "ax.plot_contour()",
      "plt.contour3D()",
      "ax.drawContours()"
    ]
  },
  {
    "q": "What is the use of `ax.view_init(elev, azim)` in a 3D plot?",
    "c": null,
    "o": [
      "It sets the elevation and azimuthal viewing angle",
      "It initializes lighting and shadows",
      "It defines the shape of the 3D plot",
      "It switches to wireframe mode"
    ]
  },
  {
    "q": "What is the result of using `ax.plot_surface(X, Y, Z, cmap='viridis')`?",
    "c": null,
    "o": [
      "A colored 3D surface using the 'viridis' colormap",
      "A monochrome 3D surface",
      "A 2D heatmap on 3D axes",
      "A 3D scatter plot"
    ]
  },
  {
    "q": "Which function is used to create a wireframe surface plot in 3D?",
    "c": null,
    "o": [
      "ax.plot_wireframe()",
      "ax.surface_wire()",
      "plt.wire3D()",
      "ax.draw_wire()"
    ]
  },
  {
    "q": "How can you label all three axes in a 3D plot?",
    "c": null,
    "o": [
      "Using `ax.set_xlabel()`, `ax.set_ylabel()`, and `ax.set_zlabel()`",
      "Calling `ax.label3D()`",
      "Passing label arguments to `plot_surface()`",
      "Using `plt.label_axes()`"
    ]
  },
  {
    "q": "What is a key difference between `plot_surface()` and `plot_wireframe()`?",
    "c": null,
    "o": [
      "`plot_surface()` fills surface with color, `plot_wireframe()` only shows grid lines",
      "`plot_surface()` works for 2D, `plot_wireframe()` for 3D",
      "`plot_wireframe()` is faster but uses color, `plot_surface()` is grayscale",
      "`plot_wireframe()` rotates automatically"
    ]
  },
  {
    "q": "Which of these is **not** a valid attribute of a 3D axes object?",
    "c": null,
    "o": [
      "`ax.rotate()`",
      "`ax.set_zlabel()`",
      "`ax.plot_surface()`",
      "`ax.view_init()`"
    ]
  },
  {
    "q": "To change the color mapping of a 3D surface, which parameter is typically used?",
    "c": null,
    "o": [
      "`cmap`",
      "`color`",
      "`shade_map`",
      "`color_set`"
    ]
  },
  {
    "q": "Which object type does `ax.plot_surface()` expect for X, Y, Z?",
    "c": null,
    "o": [
      "2D arrays (e.g., from `np.meshgrid`)",
      "1D arrays",
      "Tuples of coordinates",
      "3D tensors"
    ]
  },
  {
    "q": "What happens if the shapes of X, Y, and Z arrays passed to `plot_surface()` don't match?",
    "c": null,
    "o": [
      "A `ValueError` is raised",
      "They are automatically padded",
      "They are converted to the smallest common shape",
      "Only the Z array is used"
    ]
  },
  {
    "q": "Which of the following is used to create a 3D axes object in Matplotlib?",
    "c": null,
    "o": [
      "fig.add_subplot(111, projection='3d')",
      "plt.axes(3d=True)",
      "plt.subplot(3d=True)",
      "plt.figure(projection='3d')"
    ]
  },
  {
    "q": "Which function in NumPy is typically used to generate mesh grids for 3D plotting?",
    "c": null,
    "o": [
      "np.meshgrid()",
      "np.grid3d()",
      "np.linspace()",
      "np.arange3d()"
    ]
  },
  {
    "q": "What does the `rstride` and `cstride` parameter control in `plot_surface()`?",
    "c": null,
    "o": [
      "Row and column stride in the surface mesh",
      "Transparency and color levels",
      "Resolution of the figure",
      "Size of the plot window"
    ]
  },
  {
    "q": "Which method can be used to save a 3D plot as an image file?",
    "c": null,
    "o": [
      "plt.savefig('plot.png')",
      "ax.save3d('plot.png')",
      "save_plot3d('plot.png')",
      "ax.export_image('plot.png')"
    ]
  },
  {
    "q": "Which of the following plots is best used for displaying 3D point clouds?",
    "c": null,
    "o": [
      "ax.scatter()",
      "ax.plot_surface()",
      "ax.plot_wireframe()",
      "ax.plot()"
    ]
  },
  {
    "q": "In a 3D plot, how do you rotate the view to a top-down perspective?",
    "c": null,
    "o": [
      "ax.view_init(elev=90, azim=-90)",
      "ax.set_angle(0, 0)",
      "ax.rotate_view(top=True)",
      "ax.set_camera(top=True)"
    ]
  },
  {
    "q": "Which of these colormaps is **not** suitable for 3D surface plotting?",
    "c": null,
    "o": [
      "'randomcolor'",
      "'viridis'",
      "'plasma'",
      "'coolwarm'"
    ]
  },
  {
    "q": "What would `ax.plot_surface(..., edgecolor='k')` do?",
    "c": null,
    "o": [
      "Draw black edges on each patch of the 3D surface",
      "Change the axis color to black",
      "Make the plot background black",
      "Convert the surface into a wireframe"
    ]
  },
  {
    "q": "Which type of data does `plot_trisurf()` require?",
    "c": null,
    "o": [
      "1D arrays for x, y, and z with triangulation",
      "2D meshgrid arrays",
      "Only z values",
      "Pandas DataFrames"
    ]
  },
  {
    "q": "What is a major limitation of `plot_wireframe()` compared to `plot_surface()`?",
    "c": null,
    "o": [
      "It doesn't support colormaps",
      "It only works in 2D",
      "It cannot show labels",
      "It is incompatible with NumPy arrays"
    ]
  },
  {
    "q": "Which method would you use to create a 3D bar chart in Matplotlib?",
    "c": null,
    "o": [
      "ax.bar3d()",
      "ax.bar3D()",
      "ax.plot_bar_3d()",
      "plt.bar3d()"
    ]
  },
  {
    "q": "What is the role of the `projection='3d'` argument in Matplotlib?",
    "c": null,
    "o": [
      "It tells Matplotlib to create a 3D axes object.",
      "It makes the plot interactive.",
      "It sets the plot to use logarithmic scale.",
      "It enables animation mode."
    ]
  },
  {
    "q": "Which import is essential for 3D plotting in Matplotlib?",
    "c": null,
    "o": [
      "from mpl_toolkits.mplot3d import Axes3D",
      "import matplotlib.pyplot as plt3d",
      "from matplotlib import mplot3d",
      "import mpl_3d"
    ]
  },
  {
    "q": "Which of the following allows customization of the 3D axis view angle?",
    "c": null,
    "o": [
      "ax.view_init(elev, azim)",
      "ax.set_view(angle)",
      "ax.set_projection(3d=True)",
      "plt.view_angle(elev, azim)"
    ]
  },
  {
    "q": "What does the `plot_surface()` method in 3D plotting require as arguments?",
    "c": null,
    "o": [
      "X, Y, and Z 2D arrays",
      "Only Z array",
      "X and Y as scalars, Z as 2D array",
      "Only X and Y arrays"
    ]
  },
  {
    "q": "Which keyword argument is used in `plot_surface()` to control color mapping?",
    "c": null,
    "o": [
      "cmap",
      "color_scheme",
      "color_map",
      "map_color"
    ]
  },
  {
    "q": "Which function is used to generate a wireframe plot in 3D axes?",
    "c": null,
    "o": [
      "ax.plot_wireframe()",
      "ax.plot_wires()",
      "ax.wire_plot()",
      "ax.draw_wireframe()"
    ]
  },
  {
    "q": "Which function should you use for drawing a 3D line?",
    "c": null,
    "o": [
      "ax.plot3D()",
      "plt.line3d()",
      "ax.draw_line_3d()",
      "ax.plotline3d()"
    ]
  },
  {
    "q": "In `ax.scatter3D()`, what do the arguments typically represent?",
    "c": null,
    "o": [
      "X, Y, Z coordinates of points",
      "Only Z values",
      "Image data",
      "Color map settings"
    ]
  },
  {
    "q": "Which method allows labeling of individual axes in a 3D Matplotlib plot?",
    "c": null,
    "o": [
      "ax.set_xlabel(), ax.set_ylabel(), ax.set_zlabel()",
      "plt.label_axes()",
      "ax.label3d()",
      "ax.set_3d_labels()"
    ]
  },
  {
    "q": "What does `ax.contour3D()` do in Matplotlib's 3D plotting?",
    "c": null,
    "o": [
      "Draws contour lines on a 3D surface",
      "Creates a 3D wireframe plot",
      "Plots a histogram in 3D",
      "Draws a bar chart in 3D"
    ]
  },
  {
    "q": "Which parameter in `plot_surface()` adjusts the transparency of the surface?",
    "c": null,
    "o": [
      "alpha",
      "opacity",
      "transparency",
      "fade"
    ]
  },
  {
    "q": "Which of the following is used to create a 3D subplot in Matplotlib?",
    "c": null,
    "o": [
      "fig.add_subplot(111, projection='3d')",
      "plt.add_subplot_3d()",
      "fig.subplot3d()",
      "plt.create_subplot(3d=True)"
    ]
  },
  {
    "q": "Which command sets the limits of the Z-axis in a 3D plot?",
    "c": null,
    "o": [
      "ax.set_zlim()",
      "ax.limit_z()",
      "plt.set_zrange()",
      "ax.zlimits()"
    ]
  },
  {
    "q": "What is the function of `ax.quiver()` in 3D plots?",
    "c": null,
    "o": [
      "To plot 3D vectors as arrows",
      "To create 3D histograms",
      "To scatter 3D points",
      "To generate 3D text labels"
    ]
  },
  {
    "q": "Which of the following functions is best suited for visualizing 3D surfaces?",
    "c": null,
    "o": [
      "ax.plot_surface()",
      "ax.bar3d()",
      "ax.scatter3D()",
      "ax.contour()"
    ]
  },
  {
    "q": "How can you rotate the 3D plot interactively in Matplotlib?",
    "c": null,
    "o": [
      "By dragging the mouse with a 3D interactive backend",
      "Using `plt.rotate()`",
      "Calling `ax.rotate()` with parameters",
      "By scrolling the mouse wheel"
    ]
  },
  {
    "q": "Which 3D plotting function allows color mapping based on Z-values?",
    "c": null,
    "o": [
      "ax.plot_surface(..., cmap='viridis')",
      "ax.plot_wireframe(..., color='blue')",
      "ax.bar3d(..., alpha=0.5)",
      "ax.quiver(..., linewidth=2)"
    ]
  },
  {
    "q": "To create a meshgrid for surface plotting in 3D, you use which function?",
    "c": null,
    "o": [
      "numpy.meshgrid()",
      "matplotlib.meshgrid()",
      "numpy.make_grid()",
      "ax.create_grid()"
    ]
  },
  {
    "q": "Which of the following plots would best visualize a mountain range in 3D?",
    "c": null,
    "o": [
      "plot_surface()",
      "scatter3D()",
      "bar3d()",
      "plot_wireframe()"
    ]
  },
  {
    "q": "What does `ax.plot_trisurf()` do in a 3D plot?",
    "c": null,
    "o": [
      "Plots a triangular surface in 3D",
      "Creates a 3D bar chart",
      "Plots a heatmap in 3D",
      "Generates 3D vector fields"
    ]
  },
  {
    "q": "Which function is used to draw volumetric data in 3D using cubes or voxels?",
    "c": null,
    "o": [
      "ax.voxels()",
      "ax.plot_voxels()",
      "plt.draw_voxels()",
      "ax.volume()"
    ]
  },
  {
    "q": "Which of the following functions is useful for animating a 3D plot?",
    "c": null,
    "o": [
      "FuncAnimation from matplotlib.animation",
      "ax.animate3d()",
      "plt.ani_3d()",
      "animation.plot3d()"
    ]
  },
  {
    "q": "What argument in `ax.plot_wireframe()` changes the grid line density?",
    "c": null,
    "o": [
      "rstride and cstride",
      "density",
      "linewidth and grid",
      "rows and cols"
    ]
  },
  {
    "q": "What is the typical use case of `ax.bar3d()`?",
    "c": null,
    "o": [
      "To draw 3D bars on a grid",
      "To create 3D contour plots",
      "To visualize image pixels in 3D",
      "To animate surface plots"
    ]
  },
  {
    "q": "Which parameter controls the color of arrows in `ax.quiver()`?",
    "c": null,
    "o": [
      "color",
      "cmap",
      "direction",
      "shade"
    ]
  },
  {
    "q": "What does `ax.set_box_aspect([1,1,1])` achieve in a 3D plot?",
    "c": null,
    "o": [
      "Sets equal aspect ratio for all axes",
      "Rotates the 3D plot by 45°",
      "Enables interactive zoom",
      "Aligns the Z-axis to the center"
    ]
  },
  {
    "q": "Which method would you use to add a color legend to a 3D surface?",
    "c": null,
    "o": [
      "plt.colorbar(surf)",
      "ax.legend()",
      "ax.set_colorbar()",
      "plt.legend3d()"
    ]
  },
  {
    "q": "In a 3D animation using FuncAnimation, which argument defines the update function?",
    "c": null,
    "o": [
      "func",
      "frame_update",
      "animate",
      "callback"
    ]
  },
  {
    "q": "What does `shade=True` do in `plot_surface()`?",
    "c": null,
    "o": [
      "Adds lighting effects for better depth perception",
      "Enables transparent background",
      "Rotates the plot",
      "Removes the Z-axis"
    ]
  },
  {
    "q": "Which matplotlib function is used to create a 3D scatter plot?",
    "c": null,
    "o": [
      "ax.scatter3D()",
      "ax.plot3D()",
      "ax.scatter()",
      "plt.scatter3()"
    ]
  },
  {
    "q": "How can you rotate a 3D plot to a specific angle?",
    "c": null,
    "o": [
      "ax.view_init(elev, azim)",
      "ax.rotate3d(elev, azim)",
      "plt.rotate3d(elev, azim)",
      "ax.set_rotation(elev, azim)"
    ]
  },
  {
    "q": "What is the purpose of `ax.contour3D()` in matplotlib?",
    "c": null,
    "o": [
      "Draw 3D contour lines",
      "Generate 3D bar graphs",
      "Plot filled contour regions",
      "Render isosurfaces"
    ]
  },
  {
    "q": "Which backend is commonly required for interactive 3D plots in matplotlib?",
    "c": null,
    "o": [
      "QtAgg",
      "TkAgg",
      "WebAgg",
      "Agg"
    ]
  },
  {
    "q": "Which method adds a title to a 3D subplot?",
    "c": null,
    "o": [
      "ax.set_title()",
      "plt.title3d()",
      "ax.add_title3d()",
      "fig.title3d()"
    ]
  },
  {
    "q": "Which of the following is valid for setting Z-axis limits in a 3D plot?",
    "c": null,
    "o": [
      "ax.set_zlim()",
      "plt.zlim()",
      "ax.z_axis_limit()",
      "fig.set_zlim()"
    ]
  },
  {
    "q": "How can you create a grid of 3D subplots in matplotlib?",
    "c": null,
    "o": [
      "Using `subplot_kw={'projection': '3d'}` in plt.subplots()",
      "Using `subplot3d()` directly",
      "Calling `add_subplot(3d=True)`",
      "Using `figure.grid3d()`"
    ]
  },
  {
    "q": "What is a common file format for saving 3D plots with interactive rotation?",
    "c": null,
    "o": [
      ".html using mpld3 or plotly",
      ".png",
      ".svg",
      ".pdf"
    ]
  },
  {
    "q": "What does `ax.set_proj_type('ortho')` do?",
    "c": null,
    "o": [
      "Sets orthographic projection for the 3D view",
      "Switches to 2D projection",
      "Flips the 3D axes",
      "Disables axis labels"
    ]
  },
  {
    "q": "Which function is used to set custom tick labels on the Z-axis?",
    "c": null,
    "o": [
      "ax.set_zticklabels()",
      "ax.zticks()",
      "ax.set_zticks()",
      "ax.set_zlabels()"
    ]
  },
  {
    "q": "Which function is used to create 3D surface plots in matplotlib?",
    "c": null,
    "o": [
      "ax.plot_surface()",
      "ax.surface_plot()",
      "ax.draw_surface()",
      "plt.surface3D()"
    ]
  },
  {
    "q": "What does the 'rstride' parameter in plot_surface() control?",
    "c": null,
    "o": [
      "Row stride (step size) in the surface plot",
      "Radius of surface curvature",
      "Rotation stride for the view",
      "Resolution of the Z-axis"
    ]
  },
  {
    "q": "Which of the following is used to plot 3D bars?",
    "c": null,
    "o": [
      "ax.bar3d()",
      "plt.bar3D()",
      "ax.plot_bar3d()",
      "ax.bars3d()"
    ]
  },
  {
    "q": "How do you enable a colorbar for a 3D surface plot?",
    "c": null,
    "o": [
      "plt.colorbar(surf)",
      "ax.add_colorbar(surf)",
      "ax.set_colorbar()",
      "plt.set_colorbar()"
    ]
  },
  {
    "q": "Which method can be used to add wireframes to a 3D plot?",
    "c": null,
    "o": [
      "ax.plot_wireframe()",
      "ax.wire3D()",
      "ax.add_wire()",
      "plt.plot3D_wire()"
    ]
  },
  {
    "q": "What does `projection='3d'` do in matplotlib?",
    "c": null,
    "o": [
      "Enables 3D plotting on the axes",
      "Adds 3D zoom controls",
      "Sets a 3D animation loop",
      "Changes color map to 3D"
    ]
  },
  {
    "q": "How can you label the Z-axis in a 3D plot?",
    "c": null,
    "o": [
      "ax.set_zlabel('Label')",
      "ax.zlabel('Label')",
      "ax.label_z('Label')",
      "plt.zlabel('Label')"
    ]
  },
  {
    "q": "Which module provides support for 3D plotting in matplotlib?",
    "c": null,
    "o": [
      "mpl_toolkits.mplot3d",
      "matplotlib.3dplot",
      "mpl_3d",
      "matplotlib.ax3d"
    ]
  },
  {
    "q": "What type of object is returned by ax.plot_surface()?",
    "c": null,
    "o": [
      "Poly3DCollection",
      "Surface3DObject",
      "Patch3D",
      "Line3DCollection"
    ]
  },
  {
    "q": "Which color map is often used to enhance 3D surface plots?",
    "c": null,
    "o": [
      "viridis",
      "grayscale",
      "binary",
      "flag"
    ]
  },
  {
    "q": "How do you create a 3D subplot in matplotlib?",
    "c": "fig = plt.figure()\nax = fig.add_subplot(111, projection='3d')",
    "o": [
      "This creates a 3D subplot",
      "This disables 3D plotting",
      "This creates a 2D polar plot",
      "This sets the background to 3D color"
    ]
  },
  {
    "q": "What does the following code do?",
    "c": "ax.plot_surface(X, Y, Z, cmap='coolwarm')",
    "o": [
      "Creates a surface plot with the 'coolwarm' color map",
      "Draws a heatmap",
      "Creates a 2D scatter plot",
      "Plots wireframe instead of surface"
    ]
  },
  {
    "q": "What is the correct way to set a title for a 3D plot?",
    "c": "ax.set_title(\"My 3D Plot\")",
    "o": [
      "Sets the title of the 3D plot",
      "Sets the Z-axis label",
      "Adds a legend to the 3D plot",
      "Rotates the plot"
    ]
  },
  {
    "q": "How do you create a wireframe plot?",
    "c": "ax.plot_wireframe(X, Y, Z, color='black')",
    "o": [
      "Creates a wireframe using X, Y, Z with black lines",
      "Creates a 2D line plot",
      "Displays a filled contour plot",
      "Plots a bar chart"
    ]
  },
  {
    "q": "Which command sets the viewing angle for elevation and azimuth?",
    "c": "ax.view_init(elev=30, azim=60)",
    "o": [
      "Sets the 3D view angle",
      "Changes the axis labels",
      "Applies color mapping",
      "Animates the plot"
    ]
  },
  {
    "q": "What does the 'cmap' parameter do in surface plots?",
    "c": null,
    "o": [
      "Specifies the colormap for surface shading",
      "Sets the contrast of the surface",
      "Defines curvature scale",
      "Applies light reflections"
    ]
  },
  {
    "q": "Which method creates 3D scatter plots?",
    "c": "ax.scatter(xs, ys, zs)",
    "o": [
      "Creates a 3D scatter plot",
      "Generates 2D bar chart",
      "Applies wireframe shading",
      "Changes axis ticks"
    ]
  },
  {
    "q": "What does the 'zdir' parameter control in ax.bar3d()?",
    "c": null,
    "o": [
      "Direction along which bars are extended",
      "Zoom direction",
      "Z-label direction",
      "Z-axis data sorting"
    ]
  },
  {
    "q": "What will the following do?",
    "c": "from mpl_toolkits.mplot3d import Axes3D",
    "o": [
      "Imports 3D plotting toolkit for matplotlib",
      "Enables animation module",
      "Imports 3D modeling package",
      "Creates a 3D scatter function"
    ]
  },
  {
    "q": "How can you label all axes in a 3D plot?",
    "c": "ax.set_xlabel(\"X\")\nax.set_ylabel(\"Y\")\nax.set_zlabel(\"Z\")",
    "o": [
      "Sets labels for all three axes",
      "Sets axis limits",
      "Rotates 3D axes",
      "Clears the axes"
    ]
  },
  {
    "q": "Which method is used to save a 3D plot to a file?",
    "c": "plt.savefig('3d_plot.png')",
    "o": [
      "Saves the current 3D plot as an image file",
      "Displays the plot in a new window",
      "Exports the data as CSV",
      "Creates a new subplot"
    ]
  },
  {
    "q": "What does this code do?",
    "c": "ax.contour3D(X, Y, Z, 50)",
    "o": [
      "Draws 3D contour lines at 50 levels",
      "Draws a 2D contour plot",
      "Plots 3D bars at 50 locations",
      "Creates a wireframe with 50 lines"
    ]
  },
  {
    "q": "Which of the following is used to create a 3D bar chart?",
    "c": "ax.bar3d(x, y, z, dx, dy, dz)",
    "o": [
      "Draws 3D bars starting at (x, y, z) with dimensions dx, dy, dz",
      "Draws 3D lines using (x, y, z)",
      "Plots a 3D histogram",
      "Displays surface color maps"
    ]
  },
  {
    "q": "What does this code produce?",
    "c": "ax.plot_trisurf(x, y, z, cmap='viridis')",
    "o": [
      "Creates a triangular surface plot with viridis colormap",
      "Creates a 2D line plot",
      "Creates a 3D bar chart",
      "Draws a scatter plot with triangle markers"
    ]
  },
  {
    "q": "Which of the following is **required** for any 3D plot using `mpl_toolkits`?",
    "c": null,
    "o": [
      "Setting `projection='3d'` in `add_subplot()`",
      "Importing pyplot as mplot",
      "Calling `plt.figure3d()`",
      "Using `3d=True` in `plot()`"
    ]
  },
  {
    "q": "What will the following code output?",
    "c": "ax.set_xlim([0, 10])\nax.set_ylim([0, 10])\nax.set_zlim([0, 10])",
    "o": [
      "Sets the visible range of x, y, and z axes to [0, 10]",
      "Scales all axes to equal size",
      "Hides axes gridlines",
      "Changes the view angle of the 3D plot"
    ]
  },
  {
    "q": "How do you enable interactive rotation and zoom for 3D plots in matplotlib?",
    "c": null,
    "o": [
      "By default, using `%matplotlib notebook` in Jupyter",
      "Calling `ax.enable_rotate()`",
      "Using `plt.interactive()`",
      "Adding `interactive=True` in `plot_surface()`"
    ]
  },
  {
    "q": "What does this code do?",
    "c": "ax.text(2, 4, 5, \"Point A\")",
    "o": [
      "Adds a label at 3D coordinate (2, 4, 5)",
      "Changes plot title",
      "Sets axis tick labels",
      "Changes the view point of the plot"
    ]
  },
  {
    "q": "Which colormap will this code apply?",
    "c": "ax.plot_surface(X, Y, Z, cmap='plasma')",
    "o": [
      "Applies the 'plasma' colormap to the surface",
      "Creates a flat black-and-white surface",
      "Turns off coloring",
      "Uses grayscale shading"
    ]
  },
  {
    "q": "What is the output of the following code?",
    "c": "ax.grid(False)",
    "o": [
      "Disables the grid in the 3D plot",
      "Removes the axis ticks",
      "Hides the 3D axes",
      "Turns off interactivity"
    ]
  }
]